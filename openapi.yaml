openapi: 3.0.0
info:
  title: Flagright API
  version: "1.0"
servers:
  - url: "http://localhost:3000"
paths:
  /transaction:
    post:
      summary: Transaction
      operationId: post-consumer-transaction
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionMonitoringResult"
              examples:
                example-1:
                  value:
                    transactionID: 7b80a539eea6e78acbd6d458e5971482
                    rules:
                      - ruleID: R-1a
                        ruleName: Proof of funds for high value transactions
                        ruleDescription: If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds
                        ruleAction: block
                        ruleHit: true
        "401":
          description: Unauthorized
        "429":
          description: Too Many Requests
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Transaction"
            examples:
              example-1:
                value:
                  transactionID: 7b80a539eea6e78acbd6d458e5971482
                  userID: 8650a2611d0771cba03310f74bf6
                  sendingAmountDetails:
                    country: DE
                    transactionAmount: 800
                    transactionCurrency: EUR
                  receivingAmountDetails:
                    country: IN
                    transactionAmount: 68351.34
                    transactionCurrency: INR
                  paymentMethod: CreditCard
                  payoutMethod: CreditCard
                  promotionCodeUsed: true
                  senderName:
                    firstName: Jules
                    lastName: Winnfield
                  receiverName:
                    firstName: Baran
                    middleName: Realblood
                    lastName: Ozkan
                  senderCardDetails:
                    cardFingerprint: 20ac00fed8ef913aefb17cfae1097cce
                    cardIssuedCountry: US
                    transactionReferenceField: Deposit
                    3dsDone: true
                  receiverCardDetails:
                    cardFingerprint: 20ac00fed8ef913aefb17cfae1097cce
                    cardIssuedCountry: IN
                    transactionReferenceField: Deposit
                    3dsDone: true
                  reference: loan repayment
                  deviceData:
                    batteryLevel: 95
                    deviceLatitude: 13.0033
                    deviceLongitude: 76.1004
                    ipAddress: 10.23.191.2
                    deviceIdentifier: 3c49f915d04485e34caba
                    vpnUsed: false
                    operatingSystem: Android 11.2
                    deviceMaker: ASUS
                    deviceModel: Zenphone M2 Pro Max
                    deviceYear: "2018"
                    appVersion: 1.1.0
                  tags:
                    - key: customKey
                      value: customValue
          application/xml:
            schema:
              $ref: "#/components/schemas/Transaction"
            examples: {}
          multipart/form-data:
            schema:
              type: object
              properties: {}
        description: ""
  "/transaction/{transactionId}":
    get:
      summary: Transaction
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
              examples:
                example-1:
                  value:
                    transactionID: 7b80a539eea6e78acbd6d458e5971482
                    userID: 8650a2611d0771cba03310f74bf6
                    sendingAmountDetails:
                      country: DE
                      transactionAmount: 800
                      transactionCurrency: EUR
                    receivingAmountDetails:
                      country: IN
                      transactionAmount: 68351.34
                      transactionCurrency: INR
                    paymentMethod: CreditCard
                    payoutMethod: CreditCard
                    promotionCodeUsed: true
                    senderName:
                      firstName: Jules
                      lastName: Winnfield
                    receiverName:
                      firstName: Baran
                      middleName: Realblood
                      lastName: Ozkan
                    senderCardDetails:
                      cardFingerprint: 20ac00fed8ef913aefb17cfae1097cce
                      cardIssuedCountry: US
                      transactionReferenceField: Deposit
                      3dsDone: true
                    receiverCardDetails:
                      cardFingerprint: 20ac00fed8ef913aefb17cfae1097cce
                      cardIssuedCountry: IN
                      transactionReferenceField: Deposit
                      3dsDone: true
                    reference: loan repayment
                    deviceData:
                      batteryLevel: 95
                      deviceLatitude: 13.0033
                      deviceLongitude: 76.1004
                      ipAddress: 10.23.191.2
                      deviceIdentifier: 3c49f915d04485e34caba
                      vpnUsed: false
                      operatingSystem: Android 11.2
                      deviceMaker: ASUS
                      deviceModel: Zenphone M2 Pro Max
                      deviceYear: "2018"
                      appVersion: 1.1.0
                    tags:
                      - key: customKey
                        value: customValue
        "401":
          description: Unauthorized
        "429":
          description: Too Many Requests
      operationId: get-consumer-transaction
      description: ""
    parameters:
      - schema:
          type: string
        name: transactionId
        in: path
        description: Unique Transaction Identifier
        required: true
components:
  schemas:
    Tag:
      description: "Generic key-value pair model to append a custom variable being sent to Flagright API "
      type: object
      x-examples:
        example-1:
          key: string
          value: string
      example:
        - key: customKey
          value: customValue
      properties:
        key:
          type: string
          minLength: 1
          description: Key value when you are creating a custom variable
        value:
          type: string
          minLength: 1
          description: Value for a given key when you are creating a custom variable
      required:
        - key
        - value
    Transaction:
      description: Model for transaction payload
      type: object
      x-examples:
        example-1:
          transactionID: 7b80a539eea6e78acbd6d458e5971482
          userID: 8650a2611d0771cba03310f74bf6
          originCountry: DE
          destinationCountry: IN
          sendingAmount: 800
          sendingCurrency: EUR
          receivingAmount: 68351.34
          receivingCurrency: INR
          paymentMethod: CreditCard
          payoutMethod: CreditCard
          promotionCodeUsed: false
          paymentDetails: Family maintenence
          payoutDetails: Family maintenence
          receiverName: Jules
          receiverType: consumer
          3ds: false
          senderCardDetails: string
          receiverCardDetails: string
          senderBankIdentifier: string
          receiverBankIdentifier: string
          reference: string
          deviceData: string
          tags: string
      example:
        - transactionID: 7b80a539eea6e78acbd6d458e5971482
          userID: 8650a2611d0771cba03310f74bf6
          sendingAmountDetails:
            country: DE
            transactionAmount: 800
            transactionCurrency: EUR
          receivingAmountDetails:
            country: IN
            transactionAmount: 68351.34
            transactionCurrency: INR
          paymentMethod: CreditCard
          payoutMethod: CreditCard
          promotionCodeUsed: true
          senderName:
            firstName: Jules
            lastName: Winnfield
          receiverName:
            firstName: Baran
            middleName: Realblood
            lastName: Ozkan
          senderCardDetails:
            cardFingerprint: 20ac00fed8ef913aefb17cfae1097cce
            cardIssuedCountry: US
            transactionReferenceField: Deposit
            3dsDone: true
          receiverCardDetails:
            cardFingerprint: 20ac00fed8ef913aefb17cfae1097cce
            cardIssuedCountry: IN
            transactionReferenceField: Deposit
            3dsDone: true
          reference: loan repayment
          deviceData:
            batteryLevel: 95
            deviceLatitude: 13.0033
            deviceLongitude: 76.1004
            ipAddress: 10.23.191.2
            deviceIdentifier: 3c49f915d04485e34caba
            vpnUsed: false
            operatingSystem: Android 11.2
            deviceMaker: ASUS
            deviceModel: Zenphone M2 Pro Max
            deviceYear: "2018"
            appVersion: 1.1.0
          tags:
            - key: customKey
              value: customValue
      properties:
        transactionID:
          type: string
          minLength: 1
          description: Unique transaction identifier
        userID:
          type: string
          minLength: 1
          description: Unique user ID
        sendingAmountDetails:
          $ref: "#/components/schemas/TransactionAmountDetails"
        receivingAmountDetails:
          $ref: "#/components/schemas/TransactionAmountDetails"
        paymentMethod:
          type: string
          minLength: 1
          description: "Origin payment method for the transaction such as IBAN, cash, debit card etc."
        payoutMethod:
          type: string
          minLength: 1
          description: "Destination payment method for the transaction such as IBAN, cash, debit card etc."
        senderName:
          $ref: "#/components/schemas/ConsumerName"
        receiverName:
          $ref: "#/components/schemas/ConsumerName"
        promotionCodeUsed:
          type: boolean
          description: Whether a promotion code was used or not the transaction
        productType:
          type: string
          description: "Type of produce being used by the consumer (ex wallets, payments etc)"
        senderCardDetails:
          $ref: "#/components/schemas/CardDetails"
        receiverCardDetails:
          $ref: "#/components/schemas/CardDetails"
        senderBankDetails:
          $ref: "#/components/schemas/BankDetails"
        receiverBankDetails:
          $ref: "#/components/schemas/BankDetails"
        reference:
          type: string
          minLength: 1
          description: Reference field for the transaction indicating the purpose of the transaction etc.
        deviceData:
          $ref: "#/components/schemas/DeviceData"
        tags:
          type: array
          description: Additional information that can be added via tags
          items:
            $ref: "#/components/schemas/Tag"
      required:
        - transactionID
        - userID
        - sendingAmountDetails
        - receivingAmountDetails
        - paymentMethod
        - payoutMethod
    CardDetails:
      description: Model for credit or debit card details
      type: object
      x-examples:
        example-1:
          senderCardFingerprint: string
          senderCardIssuedCountry: string
          transactionReferenceField: string
      example:
        - cardFingerprint: 20ac00fed8ef913aefb17cfae1097cce
          cardIssuedCountry: TR
          transactionReferenceField: Deposit
          3dsDone: true
      properties:
        cardFingerprint:
          type: string
          minLength: 1
          description: Unique card fingerprint that helps identify a specific card without having to use explicit card number. This is likely available at your card payment scheme provider
        cardIssuedCountry:
          type: string
          minLength: 1
          description: The country of issuance for a specific card
        transactionReferenceField:
          type: string
          minLength: 1
          description: Reference for the transaction
        3dsDone:
          type: boolean
          description: Whether 3ds was successfully enforced for the transaction
        nameOnCard:
          $ref: "#/components/schemas/ConsumerName"
      required:
        - cardFingerprint
        - cardIssuedCountry
      title: ""
    DeviceData:
      description: Model for device data
      type: object
      x-examples:
        example-1:
          batteryLevel: 95
          deviceLatitude: 13.0033
          deviceLongitude: 76.1004
          ipAddress: 10.23.191.2
          deviceIdentifier: 3c49f915d04485e34caba
          vpnUsed: false
          operatingSystem: Android 11.2
          deviceMaker: ASUS
          deviceModel: Zenphone M2 Pro Max
          deviceYear: "2018"
          appVersion: 1.1.0
      properties:
        batteryLevel:
          type: number
          description: Battery level of the device used for a transaction or event at a given timestamp
        deviceLatitude:
          type: number
          description: Device latitude at a give timestamp for an event or transaction
        deviceLongitude:
          type: number
          description: Device longitude at a give timestamp for an event or transaction
        ipAddress:
          type: string
          minLength: 1
          description: IP address of the device at a given timestamp for an event or transaction
        deviceIdentifier:
          type: string
          minLength: 1
          description: Device identifier number
        vpnUsed:
          type: boolean
          description: Whether VPN was used at a given timestamp for an event or transaction
        operatingSystem:
          type: string
          minLength: 1
          description: Operating system of the device at a given timestamp for an event or transaction
        deviceMaker:
          type: string
          minLength: 1
          description: The maker of the device at a given timestamp for an event or transaction
        deviceModel:
          type: string
          minLength: 1
          description: The model of the device at a given timestamp for an event or transaction
        deviceYear:
          type: string
          minLength: 1
          description: The year the device was manufactured at a given timestamp for an event or transaction
        appVersion:
          type: string
          minLength: 1
          description: The version of the app your user is using on their device at a given timestamp for an event or transaction
    TransactionMonitoringResult:
      description: ""
      type: object
      x-examples:
        example-1:
          transactionID: 7b80a539eea6e78acbd6d458e5971482
          rules: ""
      example:
        - transactionID: 7b80a539eea6e78acbd6d458e5971482
          rules:
            - ruleID: R-1a
              ruleName: Proof of funds for high value transactions
              ruleDescription: If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds
              ruleAction: block
              ruleHit: true
      properties:
        transactionID:
          type: string
          minLength: 1
          description: Unique transaction identifier
        rules:
          type: array
          description: "List of rules that are active with ID, name, description, and pre-configured action"
          items:
            $ref: "#/components/schemas/RulesResult"
      required:
        - transactionID
        - rules
    RulesResult:
      description: ""
      type: object
      x-examples:
        example-1:
          ruleID: R-1a
          ruleName: Proof of funds for high value transactions
          ruleDescription: If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds
          ruleAction: BLOCK
          ruleHit: true
      properties:
        ruleID:
          type: string
          minLength: 1
          description: Unique rule identifier
        ruleName:
          type: string
          minLength: 1
          description: Name of the rule
        ruleDescription:
          type: string
          minLength: 1
          description: Description of the rule
        ruleAction:
          type: string
          minLength: 1
          description: "The specific action a rule is configured to take if it's hit such as flag (passive monitoring), block transaction, terminate user, whitelist etc."
        ruleHit:
          type: boolean
          description: "Whether a rule was hit or not. When a rule is hit, it takes the pre-configured action on a transaction and/or user."
      required:
        - ruleID
        - ruleName
        - ruleDescription
        - ruleAction
        - ruleHit
    BankDetails:
      description: "Standardized model for Bank Details"
      type: object
      x-examples:
        example-1:
          bankIdentifierType: BIC
          bankIdentifier: BIC342TEST
          bankName: Merryl Lynch
          bankAddress: string
      example:
        - bankIdentifierType: IBAN
          bankIdentifier: DE761234561
          bankName: Merryl Lynch
          accountNumber: "1234321"
          bankAddress:
            addressLines:
              - Klara-Franke Str 20
            postcode: "10557"
            city: Berlin
            state: Berlin
            country: Germany
            tags:
              - key: customKey
                value: customValue
      properties:
        bankIdentifierType:
          type: string
          minLength: 1
          description: "Type of identifier for the bank. Categorical such as BIK, BIC, SWIFT, Routing etc."
        bankIdentifier:
          type: string
          minLength: 1
          description: "Identifier for the bank. Can be routing number, BIK number, SWIFT code, BIC number etc."
        bankName:
          type: string
          minLength: 1
          description: Name of the bank
        bankAddress:
          $ref: "#/components/schemas/Address"
        name:
          $ref: "#/components/schemas/ConsumerName"
        accountNumber:
          type: string
          description: "Account number of the user. Can be account number, IBAN number etc."
        tags:
          $ref: "#/components/schemas/Tag"
      required:
        - bankIdentifierType
        - bankIdentifier
    Address:
      description: Model for standardized address
      type: object
      x-examples:
        example-1:
          addressLines: array
          postcode: string
          city: string
          state: string
          country: string
      example:
        - addressLines:
            - Klara-Franke Str 20
          postcode: "10557"
          city: Berlin
          state: Berlin
          country: Germany
          tags:
            - key: customKey
              value: customValue
      properties:
        addressLines:
          type: array
          description: Address lines of the user's residence address
          items: {}
        postcode:
          type: string
          minLength: 1
          description: Post code of the user's residence address
        city:
          type: string
          minLength: 1
          description: City of the user's residence address
        state:
          type: string
          minLength: 1
          description: State of the user's residence address
        country:
          type: string
          minLength: 1
          description: User's country of residence
        tags:
          type: array
          description: Additional information that can be added via tags
          items:
            $ref: "#/components/schemas/Tag"
      required:
        - addressLines
        - postcode
        - city
        - country
    ConsumerName:
      description: Model for a generic consumer name
      type: object
      x-examples:
        example-1:
          firstName: Baran
          middleName: Realblood
          lastName: Ozkan
      example:
        - firstName: Baran
          middleName: Realblood
          lastName: Ozkan
      properties:
        firstName:
          type: string
          minLength: 1
          description: First name of the user
        middleName:
          type: string
          minLength: 1
          description: Middle name of the user
        lastName:
          type: string
          minLength: 1
          description: Last name of the user
      required:
        - firstName
    TransactionAmountDetails:
      description: ""
      type: object
      x-examples:
        example-1:
          country: DE
          transactionAmount: "800"
          transactionCurrency: EUR
      example:
        - country: DE
          transactionAmount: 800
          transactionCurrency: EUR
      properties:
        transactionAmount:
          type: number
          description: Amount of the transaction
        transactionCurrency:
          type: string
          minLength: 1
          description: Currency of the transaction
        country:
          type: string
          minLength: 1
      required:
        - transactionAmount
        - transactionCurrency
  securitySchemes:
    APIKey:
      name: apiKey
      type: apiKey
      in: query
      description: |
        API keys are used to authenticate the requests.
security:
  - APIKey: []
