/* tslint:disable */
/* eslint-disable */
/**
 * Tarpon Console API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import { Tag, TagFromJSON, TagFromJSONTyped, TagToJSON } from './Tag';

/**
 *
 * @export
 * @interface CompanyGeneralDetails
 */
export interface CompanyGeneralDetails {
  /**
   * Legal name of the company
   * @type {string}
   * @memberof CompanyGeneralDetails
   */
  legalName: string;
  /**
   * The industry the business operates in for a business customer
   * @type {Array<string>}
   * @memberof CompanyGeneralDetails
   */
  businessIndustry?: Array<string>;
  /**
   * The key products and services provided by the company
   * @type {Array<string>}
   * @memberof CompanyGeneralDetails
   */
  mainProductsServicesSold?: Array<string>;
  /**
   * Additional information that can be added via tags
   * @type {Array<Tag>}
   * @memberof CompanyGeneralDetails
   */
  tags?: Array<Tag>;
}

export function CompanyGeneralDetailsFromJSON(json: any): CompanyGeneralDetails {
  return CompanyGeneralDetailsFromJSONTyped(json, false);
}

export function CompanyGeneralDetailsFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): CompanyGeneralDetails {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    legalName: json['legalName'],
    businessIndustry: !exists(json, 'businessIndustry') ? undefined : json['businessIndustry'],
    mainProductsServicesSold: !exists(json, 'mainProductsServicesSold')
      ? undefined
      : json['mainProductsServicesSold'],
    tags: !exists(json, 'tags') ? undefined : (json['tags'] as Array<any>).map(TagFromJSON),
  };
}

export function CompanyGeneralDetailsToJSON(value?: CompanyGeneralDetails | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    legalName: value.legalName,
    businessIndustry: value.businessIndustry,
    mainProductsServicesSold: value.mainProductsServicesSold,
    tags: value.tags === undefined ? undefined : (value.tags as Array<any>).map(TagToJSON),
  };
}
