/* tslint:disable */
/* eslint-disable */
/**
 * Tarpon Console API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
  ConsumerName,
  ConsumerNameFromJSON,
  ConsumerNameFromJSONTyped,
  ConsumerNameToJSON,
} from './ConsumerName';

/**
 *
 * @export
 * @interface UserDetails
 */
export interface UserDetails {
  /**
   *
   * @type {ConsumerName}
   * @memberof UserDetails
   */
  name: ConsumerName;
  /**
   * Date of birth of the user
   * @type {number}
   * @memberof UserDetails
   */
  dateOfBirth?: number;
  /**
   * Age of the user
   * @type {number}
   * @memberof UserDetails
   */
  age?: number;
  /**
   * Country of residence of the user
   * @type {string}
   * @memberof UserDetails
   */
  countryOfResidence?: string;
  /**
   * Country of nationality of the user
   * @type {string}
   * @memberof UserDetails
   */
  countryOfNationality?: string;
}

export function UserDetailsFromJSON(json: any): UserDetails {
  return UserDetailsFromJSONTyped(json, false);
}

export function UserDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserDetails {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    name: ConsumerNameFromJSON(json['name']),
    dateOfBirth: !exists(json, 'dateOfBirth') ? undefined : json['dateOfBirth'],
    age: !exists(json, 'age') ? undefined : json['age'],
    countryOfResidence: !exists(json, 'countryOfResidence')
      ? undefined
      : json['countryOfResidence'],
    countryOfNationality: !exists(json, 'countryOfNationality')
      ? undefined
      : json['countryOfNationality'],
  };
}

export function UserDetailsToJSON(value?: UserDetails | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    name: ConsumerNameToJSON(value.name),
    dateOfBirth: value.dateOfBirth,
    age: value.age,
    countryOfResidence: value.countryOfResidence,
    countryOfNationality: value.countryOfNationality,
  };
}
