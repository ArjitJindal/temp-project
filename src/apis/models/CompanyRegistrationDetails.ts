/* tslint:disable */
/* eslint-disable */
/**
 * Tarpon Console API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import { Tag, TagFromJSON, TagFromJSONTyped, TagToJSON } from './Tag';

/**
 *
 * @export
 * @interface CompanyRegistrationDetails
 */
export interface CompanyRegistrationDetails {
  /**
   * Commercial registry registration number for the company in its registration country
   * @type {string}
   * @memberof CompanyRegistrationDetails
   */
  registrationIdentifier: string;
  /**
   * Country of registration for the company
   * @type {string}
   * @memberof CompanyRegistrationDetails
   */
  registrationCountry: string;
  /**
   * Additional information that can be added via tags
   * @type {Array<Tag>}
   * @memberof CompanyRegistrationDetails
   */
  tag?: Array<Tag>;
}

export function CompanyRegistrationDetailsFromJSON(json: any): CompanyRegistrationDetails {
  return CompanyRegistrationDetailsFromJSONTyped(json, false);
}

export function CompanyRegistrationDetailsFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): CompanyRegistrationDetails {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    registrationIdentifier: json['registrationIdentifier'],
    registrationCountry: json['registrationCountry'],
    tag: !exists(json, 'tag') ? undefined : (json['tag'] as Array<any>).map(TagFromJSON),
  };
}

export function CompanyRegistrationDetailsToJSON(value?: CompanyRegistrationDetails | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    registrationIdentifier: value.registrationIdentifier,
    registrationCountry: value.registrationCountry,
    tag: value.tag === undefined ? undefined : (value.tag as Array<any>).map(TagToJSON),
  };
}
