/* tslint:disable */
/* eslint-disable */
/**
 * Tarpon Console API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import { Address, AddressFromJSON, AddressFromJSONTyped, AddressToJSON } from './Address';
import {
  ConsumerName,
  ConsumerNameFromJSON,
  ConsumerNameFromJSONTyped,
  ConsumerNameToJSON,
} from './ConsumerName';

/**
 *
 * @export
 * @interface ACHDetails
 */
export interface ACHDetails {
  /**
   *
   * @type {string}
   * @memberof ACHDetails
   */
  method: string;
  /**
   *
   * @type {string}
   * @memberof ACHDetails
   */
  routingNumber: string;
  /**
   *
   * @type {string}
   * @memberof ACHDetails
   */
  accountNumber: string;
  /**
   *
   * @type {string}
   * @memberof ACHDetails
   */
  bankName?: string;
  /**
   *
   * @type {ConsumerName | string}
   * @memberof ACHDetails
   */
  name?: ConsumerName | string | null;
  /**
   *
   * @type {Address}
   * @memberof ACHDetails
   */
  bankAddress?: Address;
}

export function ACHDetailsFromJSON(json: any): ACHDetails {
  return ACHDetailsFromJSONTyped(json, false);
}

export function ACHDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ACHDetails {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    method: json['method'],
    routingNumber: json['routingNumber'],
    accountNumber: json['accountNumber'],
    bankName: !exists(json, 'bankName') ? undefined : json['bankName'],
    name: !exists(json, 'name') ? undefined : ConsumerName | stringFromJSON(json['name']),
    bankAddress: !exists(json, 'bankAddress') ? undefined : AddressFromJSON(json['bankAddress']),
  };
}

export function ACHDetailsToJSON(value?: ACHDetails | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    method: value.method,
    routingNumber: value.routingNumber,
    accountNumber: value.accountNumber,
    bankName: value.bankName,
    name: ConsumerName | stringToJSON(value.name),
    bankAddress: AddressToJSON(value.bankAddress),
  };
}
