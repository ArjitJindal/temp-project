/* tslint:disable */
/* eslint-disable */
/**
 * Tarpon Console API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import { FileInfo, FileInfoFromJSON, FileInfoFromJSONTyped, FileInfoToJSON } from './FileInfo';

/**
 *
 * @export
 * @interface Comment
 */
export interface Comment {
  /**
   *
   * @type {string}
   * @memberof Comment
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof Comment
   */
  body: string;
  /**
   *
   * @type {string}
   * @memberof Comment
   */
  userId?: string;
  /**
   *
   * @type {Array<FileInfo>}
   * @memberof Comment
   */
  files?: Array<FileInfo>;
  /**
   *
   * @type {number}
   * @memberof Comment
   */
  createdAt?: number;
  /**
   *
   * @type {number}
   * @memberof Comment
   */
  updatedAt?: number;
}

export function CommentFromJSON(json: any): Comment {
  return CommentFromJSONTyped(json, false);
}

export function CommentFromJSONTyped(json: any, ignoreDiscriminator: boolean): Comment {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: !exists(json, 'id') ? undefined : json['id'],
    body: json['body'],
    userId: !exists(json, 'userId') ? undefined : json['userId'],
    files: !exists(json, 'files') ? undefined : (json['files'] as Array<any>).map(FileInfoFromJSON),
    createdAt: !exists(json, 'createdAt') ? undefined : json['createdAt'],
    updatedAt: !exists(json, 'updatedAt') ? undefined : json['updatedAt'],
  };
}

export function CommentToJSON(value?: Comment | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    body: value.body,
    userId: value.userId,
    files: value.files === undefined ? undefined : (value.files as Array<any>).map(FileInfoToJSON),
    createdAt: value.createdAt,
    updatedAt: value.updatedAt,
  };
}
