/* tslint:disable */
/* eslint-disable */
/**
 * Tarpon Console API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import { Address1, Address1FromJSON, Address1FromJSONTyped, Address1ToJSON } from './Address1';

/**
 *
 * @export
 * @interface ContactDetails
 */
export interface ContactDetails {
  /**
   * Email addresses of the contacts for a given business customer
   * @type {Array<string>}
   * @memberof ContactDetails
   */
  emailIds?: Array<string>;
  /**
   * Phone numbers to contact a given business customer
   * @type {Array<string>}
   * @memberof ContactDetails
   */
  contactNumbers?: Array<string>;
  /**
   * Fax numbers to contact a business customer
   * @type {Array<string>}
   * @memberof ContactDetails
   */
  faxNumbers?: Array<string>;
  /**
   * Website of the company
   * @type {Array<string>}
   * @memberof ContactDetails
   */
  websites?: Array<string>;
  /**
   * Address(es) of the company
   * @type {Array<Address1>}
   * @memberof ContactDetails
   */
  addresses?: Array<Address1>;
}

export function ContactDetailsFromJSON(json: any): ContactDetails {
  return ContactDetailsFromJSONTyped(json, false);
}

export function ContactDetailsFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ContactDetails {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    emailIds: !exists(json, 'emailIds') ? undefined : json['emailIds'],
    contactNumbers: !exists(json, 'contactNumbers') ? undefined : json['contactNumbers'],
    faxNumbers: !exists(json, 'faxNumbers') ? undefined : json['faxNumbers'],
    websites: !exists(json, 'websites') ? undefined : json['websites'],
    addresses: !exists(json, 'addresses')
      ? undefined
      : (json['addresses'] as Array<any>).map(Address1FromJSON),
  };
}

export function ContactDetailsToJSON(value?: ContactDetails | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    emailIds: value.emailIds,
    contactNumbers: value.contactNumbers,
    faxNumbers: value.faxNumbers,
    websites: value.websites,
    addresses:
      value.addresses === undefined
        ? undefined
        : (value.addresses as Array<any>).map(Address1ToJSON),
  };
}
