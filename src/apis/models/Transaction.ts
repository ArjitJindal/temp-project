/**
 * Tarpon Console API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ACHDetails } from './ACHDetails';
import { CardDetails } from './CardDetails';
import { DeviceData } from './DeviceData';
import { GenericBankAccountDetails } from './GenericBankAccountDetails';
import { IBANDetails } from './IBANDetails';
import { SWIFTDetails } from './SWIFTDetails';
import { Tag } from './Tag';
import { TransactionAmountDetails } from './TransactionAmountDetails';
import { TransactionState } from './TransactionState';
import { UPIDetails } from './UPIDetails';
import { WalletDetails } from './WalletDetails';
import { HttpFile } from '../http/http';

/**
 * Model for transaction payload
 */
export class Transaction {
  /**
   * Type of transaction depending on your use case. It can be withdrawal, deposit, payment link, wallet-to-wallet, trading etc.
   */
  'type'?: string;
  /**
   * Unique transaction identifier
   */
  'transactionId'?: string;
  /**
   * Timestamp of when transaction took place
   */
  'timestamp'?: number;
  'transactionState'?: TransactionState;
  /**
   * UserId for where the transaction originates from
   */
  'originUserId'?: string;
  /**
   * UserId for transaction's destination. In other words, where the value is being transferred to.
   */
  'destinationUserId'?: string;
  'originAmountDetails'?: TransactionAmountDetails;
  'destinationAmountDetails'?: TransactionAmountDetails;
  /**
   * Payment details of the origin. It can be a bank account number, wallet ID, card fingerprint etc.
   */
  'originPaymentDetails'?:
    | CardDetails
    | GenericBankAccountDetails
    | IBANDetails
    | ACHDetails
    | SWIFTDetails
    | UPIDetails
    | WalletDetails;
  /**
   * Payment details of the destination. It can be a bank account number, wallet ID, card fingerprint etc.
   */
  'destinationPaymentDetails'?:
    | CardDetails
    | GenericBankAccountDetails
    | IBANDetails
    | ACHDetails
    | UPIDetails
    | WalletDetails
    | SWIFTDetails;
  /**
   * Type of produce being used by the consumer (ex wallets, payments etc)
   */
  'productType'?: string;
  /**
   * Whether a promotion code was used or not the transaction
   */
  'promotionCodeUsed'?: boolean;
  /**
   * Reference field for the transaction indicating the purpose of the transaction etc.
   */
  'reference'?: string;
  'deviceData'?: DeviceData;
  /**
   * Additional information that can be added via tags
   */
  'tags'?: Array<Tag>;

  static readonly discriminator: string | undefined = undefined;

  static readonly attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
    format: string;
  }> = [
    {
      name: 'type',
      baseName: 'type',
      type: 'string',
      format: '',
    },
    {
      name: 'transactionId',
      baseName: 'transactionId',
      type: 'string',
      format: '',
    },
    {
      name: 'timestamp',
      baseName: 'timestamp',
      type: 'number',
      format: '',
    },
    {
      name: 'transactionState',
      baseName: 'transactionState',
      type: 'TransactionState',
      format: '',
    },
    {
      name: 'originUserId',
      baseName: 'originUserId',
      type: 'string',
      format: '',
    },
    {
      name: 'destinationUserId',
      baseName: 'destinationUserId',
      type: 'string',
      format: '',
    },
    {
      name: 'originAmountDetails',
      baseName: 'originAmountDetails',
      type: 'TransactionAmountDetails',
      format: '',
    },
    {
      name: 'destinationAmountDetails',
      baseName: 'destinationAmountDetails',
      type: 'TransactionAmountDetails',
      format: '',
    },
    {
      name: 'originPaymentDetails',
      baseName: 'originPaymentDetails',
      type: 'CardDetails | GenericBankAccountDetails | IBANDetails | ACHDetails | SWIFTDetails | UPIDetails | WalletDetails',
      format: '',
    },
    {
      name: 'destinationPaymentDetails',
      baseName: 'destinationPaymentDetails',
      type: 'CardDetails | GenericBankAccountDetails | IBANDetails | ACHDetails | UPIDetails | WalletDetails | SWIFTDetails',
      format: '',
    },
    {
      name: 'productType',
      baseName: 'productType',
      type: 'string',
      format: '',
    },
    {
      name: 'promotionCodeUsed',
      baseName: 'promotionCodeUsed',
      type: 'boolean',
      format: '',
    },
    {
      name: 'reference',
      baseName: 'reference',
      type: 'string',
      format: '',
    },
    {
      name: 'deviceData',
      baseName: 'deviceData',
      type: 'DeviceData',
      format: '',
    },
    {
      name: 'tags',
      baseName: 'tags',
      type: 'Array<Tag>',
      format: '',
    },
  ];

  static getAttributeTypeMap() {
    return Transaction.attributeTypeMap;
  }

  public constructor() {}
}
