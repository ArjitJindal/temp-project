/* tslint:disable */
/* eslint-disable */
/**
 * Tarpon Console API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface RuleInstance
 */
export interface RuleInstance {
  /**
   *
   * @type {string}
   * @memberof RuleInstance
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof RuleInstance
   */
  ruleId: string;
  /**
   *
   * @type {object}
   * @memberof RuleInstance
   */
  parameters: object;
  /**
   *
   * @type {string}
   * @memberof RuleInstance
   */
  status?: RuleInstanceStatusEnum;
  /**
   *
   * @type {number}
   * @memberof RuleInstance
   */
  createdAt?: number;
  /**
   *
   * @type {number}
   * @memberof RuleInstance
   */
  updatedAt?: number;
  /**
   *
   * @type {number}
   * @memberof RuleInstance
   */
  runCount?: number;
  /**
   *
   * @type {number}
   * @memberof RuleInstance
   */
  hitCount?: number;
}

/**
 * @export
 * @enum {string}
 */
export enum RuleInstanceStatusEnum {
  Active = 'ACTIVE',
  Inactive = 'INACTIVE',
}

export function RuleInstanceFromJSON(json: any): RuleInstance {
  return RuleInstanceFromJSONTyped(json, false);
}

export function RuleInstanceFromJSONTyped(json: any, ignoreDiscriminator: boolean): RuleInstance {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: !exists(json, 'id') ? undefined : json['id'],
    ruleId: json['ruleId'],
    parameters: json['parameters'],
    status: !exists(json, 'status') ? undefined : json['status'],
    createdAt: !exists(json, 'createdAt') ? undefined : json['createdAt'],
    updatedAt: !exists(json, 'updatedAt') ? undefined : json['updatedAt'],
    runCount: !exists(json, 'runCount') ? undefined : json['runCount'],
    hitCount: !exists(json, 'hitCount') ? undefined : json['hitCount'],
  };
}

export function RuleInstanceToJSON(value?: RuleInstance | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    ruleId: value.ruleId,
    parameters: value.parameters,
    status: value.status,
    createdAt: value.createdAt,
    updatedAt: value.updatedAt,
    runCount: value.runCount,
    hitCount: value.hitCount,
  };
}
