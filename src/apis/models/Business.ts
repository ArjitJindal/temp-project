/* tslint:disable */
/* eslint-disable */
/**
 * Tarpon Console API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
  LegalEntity,
  LegalEntityFromJSON,
  LegalEntityFromJSONTyped,
  LegalEntityToJSON,
} from './LegalEntity';
import { Person, PersonFromJSON, PersonFromJSONTyped, PersonToJSON } from './Person';
import { Tag, TagFromJSON, TagFromJSONTyped, TagToJSON } from './Tag';
import {
  TransactionLimits,
  TransactionLimitsFromJSON,
  TransactionLimitsFromJSONTyped,
  TransactionLimitsToJSON,
} from './TransactionLimits';

/**
 *
 * @export
 * @interface Business
 */
export interface Business {
  /**
   * Unique user ID for the user
   * @type {string}
   * @memberof Business
   */
  userId: string;
  /**
   *
   * @type {LegalEntity}
   * @memberof Business
   */
  legalEntity: LegalEntity;
  /**
   *
   * @type {number}
   * @memberof Business
   */
  createdTimestamp: number;
  /**
   * Shareholders (beneficiaries) of the company that hold at least 25% ownership. Can be another company or an individual
   * @type {Array<Person>}
   * @memberof Business
   */
  shareHolders?: Array<Person>;
  /**
   * Director(s) of the company. Must be at least one
   * @type {Array<Person>}
   * @memberof Business
   */
  directors?: Array<Person>;
  /**
   * Additional information that can be added via tags
   * @type {Array<Tag>}
   * @memberof Business
   */
  tags?: Array<Tag>;
  /**
   *
   * @type {TransactionLimits}
   * @memberof Business
   */
  transactionLimits?: TransactionLimits;
}

export function BusinessFromJSON(json: any): Business {
  return BusinessFromJSONTyped(json, false);
}

export function BusinessFromJSONTyped(json: any, ignoreDiscriminator: boolean): Business {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    userId: json['userId'],
    legalEntity: LegalEntityFromJSON(json['legalEntity']),
    createdTimestamp: json['createdTimestamp'],
    shareHolders: !exists(json, 'shareHolders')
      ? undefined
      : (json['shareHolders'] as Array<any>).map(PersonFromJSON),
    directors: !exists(json, 'directors')
      ? undefined
      : (json['directors'] as Array<any>).map(PersonFromJSON),
    tags: !exists(json, 'tags') ? undefined : (json['tags'] as Array<any>).map(TagFromJSON),
    transactionLimits: !exists(json, 'transactionLimits')
      ? undefined
      : TransactionLimitsFromJSON(json['transactionLimits']),
  };
}

export function BusinessToJSON(value?: Business | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    userId: value.userId,
    legalEntity: LegalEntityToJSON(value.legalEntity),
    createdTimestamp: value.createdTimestamp,
    shareHolders:
      value.shareHolders === undefined
        ? undefined
        : (value.shareHolders as Array<any>).map(PersonToJSON),
    directors:
      value.directors === undefined ? undefined : (value.directors as Array<any>).map(PersonToJSON),
    tags: value.tags === undefined ? undefined : (value.tags as Array<any>).map(TagToJSON),
    transactionLimits: TransactionLimitsToJSON(value.transactionLimits),
  };
}
