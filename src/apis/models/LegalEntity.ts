/* tslint:disable */
/* eslint-disable */
/**
 * Tarpon Console API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
  CompanyFinancialDetails,
  CompanyFinancialDetailsFromJSON,
  CompanyFinancialDetailsFromJSONTyped,
  CompanyFinancialDetailsToJSON,
} from './CompanyFinancialDetails';
import {
  CompanyGeneralDetails,
  CompanyGeneralDetailsFromJSON,
  CompanyGeneralDetailsFromJSONTyped,
  CompanyGeneralDetailsToJSON,
} from './CompanyGeneralDetails';
import {
  CompanyRegistrationDetails,
  CompanyRegistrationDetailsFromJSON,
  CompanyRegistrationDetailsFromJSONTyped,
  CompanyRegistrationDetailsToJSON,
} from './CompanyRegistrationDetails';
import {
  ContactDetails1,
  ContactDetails1FromJSON,
  ContactDetails1FromJSONTyped,
  ContactDetails1ToJSON,
} from './ContactDetails1';

/**
 *
 * @export
 * @interface LegalEntity
 */
export interface LegalEntity {
  /**
   *
   * @type {CompanyGeneralDetails}
   * @memberof LegalEntity
   */
  companyGeneralDetails: CompanyGeneralDetails;
  /**
   *
   * @type {CompanyFinancialDetails}
   * @memberof LegalEntity
   */
  companyFinancialDetails?: CompanyFinancialDetails;
  /**
   *
   * @type {CompanyRegistrationDetails}
   * @memberof LegalEntity
   */
  companyRegistrationDetails?: CompanyRegistrationDetails;
  /**
   * Reason for opening the account at financial institution
   * @type {Array<string>}
   * @memberof LegalEntity
   */
  reasonForAccountOpening?: Array<string>;
  /**
   *
   * @type {ContactDetails1}
   * @memberof LegalEntity
   */
  contactDetails?: ContactDetails1;
}

export function LegalEntityFromJSON(json: any): LegalEntity {
  return LegalEntityFromJSONTyped(json, false);
}

export function LegalEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): LegalEntity {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    companyGeneralDetails: CompanyGeneralDetailsFromJSON(json['companyGeneralDetails']),
    companyFinancialDetails: !exists(json, 'companyFinancialDetails')
      ? undefined
      : CompanyFinancialDetailsFromJSON(json['companyFinancialDetails']),
    companyRegistrationDetails: !exists(json, 'companyRegistrationDetails')
      ? undefined
      : CompanyRegistrationDetailsFromJSON(json['companyRegistrationDetails']),
    reasonForAccountOpening: !exists(json, 'reasonForAccountOpening')
      ? undefined
      : json['reasonForAccountOpening'],
    contactDetails: !exists(json, 'contactDetails')
      ? undefined
      : ContactDetails1FromJSON(json['contactDetails']),
  };
}

export function LegalEntityToJSON(value?: LegalEntity | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    companyGeneralDetails: CompanyGeneralDetailsToJSON(value.companyGeneralDetails),
    companyFinancialDetails: CompanyFinancialDetailsToJSON(value.companyFinancialDetails),
    companyRegistrationDetails: CompanyRegistrationDetailsToJSON(value.companyRegistrationDetails),
    reasonForAccountOpening: value.reasonForAccountOpening,
    contactDetails: ContactDetails1ToJSON(value.contactDetails),
  };
}
