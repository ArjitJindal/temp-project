{
  "name": "tarpon",
  "version": "1.0.0",
  "description": "![tarpons](https://github.com/flagright/tarpon/blob/main/tarpons.png)",
  "main": "index.js",
  "scripts": {
    "all": "npm-run-all -l -s",
    "parallel": "npm-run-all -l -p",
    "aws-sso-login": "aws sso login --profile $npm_config_profile && cdk-sso-sync $npm_config_profile && echo '\nAWS Credentials:\n====================================' && echo export AWS_ACCESS_KEY_ID=$(aws configure get aws_access_key_id --profile $npm_config_profile) && echo export AWS_SECRET_ACCESS_KEY=$(aws configure get aws_secret_access_key --profile $npm_config_profile) && echo export AWS_SESSION_TOKEN=$(aws configure get aws_session_token --profile $npm_config_profile) && echo '===================================='",
    "aws-sso-login:dev": "npm run aws-sso-login --profile=AWSAdministratorAccess-911899431626",
    "aws-sso-login:sandbox": "npm run aws-sso-login --profile=AWSAdministratorAccess-293986822825",
    "aws-sso-login:prod": "npm run aws-sso-login --profile=AWSAdministratorAccess-870721492449",
    "aws-sso-login:all": "npm run aws-sso-login:dev && npm run aws-sso-login:sandbox && npm run aws-sso-login:prod",
    "build": "npm run openapi:build && NODE_OPTIONS='--max-old-space-size=4096' webpack",
    "build:watch": "npm run openapi:build && ENV=local webpack --watch --progress",
    "clear": "rm -rf ./dist cdk.out",
    "synth": "cdk synth",
    "synth:local": "export ENV=local && npm run openapi:augment && cdk synth local-tarpon",
    "synth:dev": "export ENV=dev && npm run openapi:augment && cdk synth dev-tarpon --profile=AWSAdministratorAccess-911899431626",
    "synth:dev:user": "export ENV=dev:user && npm run openapi:augment && cdk synth dev-tarpon-$GITHUB_USER$S_NO --profile=AWSAdministratorAccess-911899431626",
    "synth:sandbox": "export ENV=sandbox && npm run openapi:augment && cdk synth sandbox-tarpon --profile=AWSAdministratorAccess-293986822825",
    "synth:prod:asia-1": "export ENV=prod:asia-1 && npm run openapi:augment && cdk synth prod-tarpon --profile=AWSAdministratorAccess-870721492449",
    "synth:prod:asia-2": "export ENV=prod:asia-2 && npm run openapi:augment && cdk synth prod-tarpon --profile=AWSAdministratorAccess-870721492449",
    "synth:prod:eu-1": "export ENV=prod:eu-1 && npm run openapi:augment && cdk synth prod-tarpon --profile=AWSAdministratorAccess-870721492449",
    "synth:pipeline": "cdk synth tarpon-pipeline",
    "deploy:dev": "ENV=dev cdk deploy dev-tarpon",
    "deploy:dev:user": "ENV=dev:user cdk deploy dev-tarpon-$GITHUB_USER$S_NO",
    "deploy:dev:clean": "npm run clear && npm install && npm run aws-sso-login --profile=AWSAdministratorAccess-911899431626 && ENV=dev npm run build && npm run synth:dev && npm run deploy:dev -- --profile=AWSAdministratorAccess-911899431626",
    "deploy:dev:user:clean": "npm run clear && npm install && npm run aws-sso-login --profile=AWSAdministratorAccess-911899431626 && ENV=dev npm run build && npm run synth:dev:user && npm run deploy:dev:user -- --profile=AWSAdministratorAccess-911899431626",
    "deploy:sandbox": "ENV=sandbox cdk deploy sandbox-tarpon",
    "deploy:sandbox:clean": "npm run clear && npm install && npm run aws-sso-login --profile=AWSAdministratorAccess-293986822825 && npm run build && npm run synth:sandbox && npm run deploy:sandbox -- --profile=AWSAdministratorAccess-293986822825",
    "deploy:prod:asia-1": "ENV=prod:asia-1 cdk deploy prod-tarpon",
    "deploy:prod:asia-1:clean": "npm run clear && npm install && npm run aws-sso-login --profile=AWSAdministratorAccess-870721492449 && npm run build && npm run synth:prod:asia-1 && npm run deploy:prod:asia-1 -- --profile=AWSAdministratorAccess-870721492449",
    "deploy:prod:asia-2": "ENV=prod:asia-2 cdk deploy prod-tarpon",
    "deploy:prod:asia-2:clean": "npm run clear && npm install && npm run aws-sso-login --profile=AWSAdministratorAccess-870721492449 && npm run build && npm run synth:prod:asia-2 && npm run deploy:prod:asia-2 -- --profile=AWSAdministratorAccess-870721492449",
    "deploy:prod:eu-1": "ENV=prod:eu-1 cdk deploy prod-tarpon",
    "deploy:prod:eu-1:clean": "npm run clear && npm install && npm run aws-sso-login --profile=AWSAdministratorAccess-870721492449 && npm run build && npm run synth:prod:eu-1 && npm run deploy:prod:eu-1 -- --profile=AWSAdministratorAccess-870721492449",
    "synth:prod:us-1": "export ENV=prod:us-1 && npm run openapi:augment && cdk synth prod-tarpon --profile=AWSAdministratorAccess-870721492449",
    "deploy:prod:us-1": "ENV=prod:us-1 cdk deploy prod-tarpon",
    "deploy:prod:us-1:clean": "npm run clear && npm install && npm run aws-sso-login --profile=AWSAdministratorAccess-870721492449 && npm run build && npm run synth:prod:us-1 && npm run deploy:prod:us-1 -- --profile=AWSAdministratorAccess-870721492449",
    "deploy:pipeline": "cdk deploy tarpon-pipeline --profile=AWSAdministratorAccess-911899431626",
    "deploy:pipeline:clean": "npm run aws-sso-login:dev && npm run synth:pipeline && npm run deploy:pipeline",
    "test": "ENV=local jest --forceExit",
    "test:silent": "npm run test -- --silent",
    "test:watch": "npm run test -- --watch",
    "format": "prettier --write .",
    "lint": "eslint .",
    "tsc": "tsc --noEmit",
    "lint:fix": "eslint --fix .",
    "lint-staged": "lint-staged",
    "generate-local-data": "ts-node ./init_local_db/all.ts",
    "openapi:build": "scripts/openapi/openapi_generate_sdk.ts",
    "openapi:format": "scripts/openapi/openapi_format.js",
    "openapi:publish": "npm run openapi:build && npm run openapi:format && scripts/openapi/openapi_publish.js",
    "openapi:augment": "lib/openapi/openapi-public-augmentor.ts && lib/openapi/openapi-internal-augmentor.ts",
    "start-local-api": "sam local start-api -t cdk.out/local-tarpon.template.json",
    "recreate-local-ddb": "npm run delete-local-ddb --table=$npm_config_table; npm run create-local-ddb --table=$npm_config_table",
    "create-local-ddb": "aws dynamodb create-table --endpoint-url http://localhost:8000 --table-name $npm_config_table --attribute-definitions AttributeName=PartitionKeyID,AttributeType=S AttributeName=SortKeyID,AttributeType=S --key-schema AttributeName=PartitionKeyID,KeyType=HASH AttributeName=SortKeyID,KeyType=RANGE --provisioned-throughput ReadCapacityUnits=1,WriteCapacityUnits=1 --region=us-east-2",
    "delete-local-ddb": "aws dynamodb delete-table --endpoint-url http://localhost:8000 --table-name $npm_config_table",
    "start-local-ddb": "docker run -p 8000:8000 amazon/dynamodb-local -jar DynamoDBLocal.jar -inMemory -sharedDb",
    "start-local-mongodb": "docker run -p 27017:27017 mongo",
    "dev:databases": "npm run parallel start-local-ddb start-local-mongodb",
    "dev:api": "ENV=local npm run build && npm run synth:local && npm run start-local-api",
    "dev": "npm run parallel dev:databases dev:api",
    "prepare": "husky install",
    "_migrator": "ts-node scripts/migrations/migrator.ts",
    "migration:pre:create": "MIGRATION_TYPE=PRE_DEPLOYMENT ENV=local npm run _migrator create -- --name $npm_config_name.ts --allow-extension .ts",
    "migration:pre:up": "MIGRATION_TYPE=PRE_DEPLOYMENT npm run _migrator up",
    "migration:pre:down": "MIGRATION_TYPE=PRE_DEPLOYMENT npm run _migrator down",
    "migration:post:create": "MIGRATION_TYPE=POST_DEPLOYMENT ENV=local npm run _migrator create -- --name $npm_config_name.ts --allow-extension .ts",
    "migration:post:up": "MIGRATION_TYPE=POST_DEPLOYMENT npm run _migrator up",
    "migration:post:down": "MIGRATION_TYPE=POST_DEPLOYMENT npm run _migrator down"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/flagright/tarpon.git"
  },
  "author": "Flagright Data Technologies Inc.",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/flagright/tarpon/issues"
  },
  "homepage": "https://github.com/flagright/tarpon#readme",
  "devDependencies": {
    "@openapitools/openapi-generator-cli": "^2.5.1",
    "@slack/types": "^2.7.0",
    "@stoplight/cli": "^5.0.722",
    "@tsconfig/node16": "^1.0.1",
    "@types/ajv": "^1.0.0",
    "@types/auth0": "^2.34.16",
    "@types/aws-lambda": "^8.10.89",
    "@types/chai": "^4.3.0",
    "@types/command-line-args": "^5.2.0",
    "@types/ejs": "^3.1.1",
    "@types/fast-levenshtein": "^0.0.2",
    "@types/flat": "^5.0.2",
    "@types/http-errors": "^1.8.2",
    "@types/jest": "^27.4.1",
    "@types/js-yaml": "^4.0.5",
    "@types/jsonwebtoken": "^8.5.8",
    "@types/lodash": "^4.14.180",
    "@types/mkdirp": "^1.0.2",
    "@types/node": "^17.0.8",
    "@types/node-fetch": "^2.6.2",
    "@types/uuid": "^8.3.4",
    "@types/webpack": "^5.28.0",
    "@typescript-eslint/eslint-plugin": "^5.9.1",
    "@typescript-eslint/parser": "^5.9.1",
    "aws-cdk": "^2.35.0",
    "aws-cdk-lib": "^2.35.0",
    "aws-sdk": "^2.1062.0",
    "body-parser": "^1.20.0",
    "cdk-sso-sync": "^0.0.6",
    "chai": "^4.3.4",
    "command-line-args": "^5.2.0",
    "commander": "^9.2.0",
    "constructs": "^10.0.72",
    "copy-webpack-plugin": "^10.2.4",
    "dotenv": "^16.0.1",
    "eslint": "^8.6.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-import": "^2.25.4",
    "eslint-plugin-prettier": "^4.0.0",
    "express": "^4.18.1",
    "fs-extra": "^10.1.0",
    "get-port": "^5.1.1",
    "husky": "^8.0.1",
    "jest": "^27.5.1",
    "js-yaml": "^4.1.0",
    "lint-staged": "^13.0.3",
    "mkdirp": "^1.0.4",
    "mock-aws-s3": "^4.0.2",
    "npm-run-all": "^4.1.5",
    "prettier": "^2.5.1",
    "simple-git": "^3.13.0",
    "source-map-support": "^0.5.21",
    "ts-jest": "^27.1.4",
    "ts-loader": "^9.2.6",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^3.14.1",
    "tsconfig-paths-webpack-plugin": "^3.5.2",
    "typescript": "^4.5.5",
    "webpack": "^5.67.0",
    "webpack-cli": "^4.9.1",
    "yaml": "^2.1.1"
  },
  "dependencies": {
    "@aws-sdk/client-kinesis": "^3.168.0",
    "@aws-sdk/client-secrets-manager": "^3.145.0",
    "@aws-sdk/client-sqs": "^3.145.0",
    "@aws-sdk/util-arn-parser": "^3.47.1",
    "@fast-csv/format": "^4.3.5",
    "@fast-csv/parse": "^4.3.6",
    "@sentry/serverless": "^7.7.0",
    "@slack/web-api": "^6.7.2",
    "@slack/webhook": "^6.1.0",
    "ajv": "^8.11.0",
    "auth0": "^2.40.0",
    "base-x": "^3.0.9",
    "dayjs": "^1.10.7",
    "deep-object-diff": "^1.1.7",
    "ejs": "^3.1.8",
    "fast-geoip": "^1.1.67",
    "fast-levenshtein": "^3.0.0",
    "flat": "^5.0.2",
    "fp-ts": "^2.11.8",
    "handlebars": "^4.7.7",
    "http-errors": "^2.0.0",
    "ibankit": "^1.5.0",
    "io-ts": "^2.2.16",
    "io-ts-reporters": "^2.0.1",
    "jsonwebtoken": "^8.5.1",
    "jwks-rsa": "^2.0.5",
    "lodash": "^4.17.21",
    "mongodb": "^4.4.0",
    "nanoid": "^3.3.4",
    "node-fetch": "^2.6.7",
    "superagent-proxy": "^3.0.0",
    "timeout-signal": "^1.1.0",
    "umzug": "^3.2.1",
    "unique-names-generator": "^4.6.0",
    "uuid": "^8.3.2",
    "winston": "^3.8.1"
  },
  "lint-staged": {
    "**/*.{js,ts}": [
      "prettier --write",
      "eslint --fix"
    ],
    "**/*.{md,json}": [
      "prettier --write"
    ]
  }
}
