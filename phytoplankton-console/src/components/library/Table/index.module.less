@import 'src/components/ui/colors.less';
@import 'src/components/ui/animation.less';

@border-radius: 4px;

.root {
  position: relative;
  display: flex;
  flex: 1;
  flex-direction: column;
  width: 100%;
}

.table {
  position: relative;
  z-index: 1;
  min-width: 100%;
  box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.02);

  &.fitHeight {
    position: absolute;
    top: 0;
    left: 0;
  }
}

.tableHead {
  position: sticky;
  top: 0;
  z-index: 1000;

  > tr:first-child {
    > th {
      &:first-child {
        border-top-left-radius: @border-radius;
      }
      &:last-child {
        border-top-right-radius: @border-radius;
      }
    }
  }
}

.tableBody {
  &.isLoading {
    opacity: 0.5;
  }

  > tr:last-child {
    > td {
      &:first-child {
        border-bottom-left-radius: @border-radius;
      }
      &:last-child {
        border-bottom-right-radius: @border-radius;
      }
    }
  }
}

.tableSizeLimiter {
  overflow-x: auto;
}

.th,
.td {
  padding: 8px;
  font-size: 14px;

  &.pinned-left,
  &.pinned-right {
    position: sticky;
    z-index: 1;

    &::before {
      position: absolute;
      top: 0;
      display: block;
      width: 20px;
      height: 100%;
      background: linear-gradient(-90deg, transparent, #0000000a);
      content: ' ';
      pointer-events: none;
    }
  }

  &.pinned-left {
    &::before {
      right: 0;
      transform: translateX(100%);
    }
  }

  &.pinned-right {
    &::before {
      left: 0;
      transform: translateX(-100%) rotate(180deg);
    }
  }
}

.tdExpanded {
  position: relative;
  z-index: 1;
  padding: 0;
  background: @fr-colors-v2-unknown-3;
}

.tdExpandedContent {
  padding: 12px;

  &.fixedExpandedContainer {
    position: sticky;
    left: 0;
  }
}

.th {
  position: relative;
  min-height: 60px;
  font-weight: 600;
  font-size: 14px;
  text-align: left;
  background: @fr-colors-v2-gray-1;

  &.grouped {
    text-align: center;
    background: @fr-colors-v2-unknown-2;
    border: 1px solid @fr-colors-v2-unknown-1;
    border-right-width: 2px;

    > .thContent {
      justify-content: center;
    }
  }

  &.isClickable {
    cursor: pointer;
    user-select: none;
  }

  > .thContent {
    display: flex;
    gap: 4px;
    align-items: center;
    justify-content: space-between;

    .titles {
      display: flex;
      flex-direction: column;
      gap: 4px;
      align-items: flex-start;
    }

    .tooltipIcon {
      flex-shrink: 0;
      align-items: center;
      width: 16px;
      margin: auto 0;
      color: @fr-colors-v2-gray-4;
    }

    .title {
      display: flex;
      gap: 4px;
      align-items: flex-start;
    }

    .subtitle {
      color: @fr-colors-v2-gray-6;
      font-weight: normal;
      font-size: 12px;
    }
  }
}

.td {
  --bg-color: @fr-colors-v2-unknown-1;

  position: relative;
  vertical-align: top;
  background: var(--bg-color);

  .tdContentWrapper {
    display: flex;
    gap: 8px;
  }

  &.wrapMode-WRAP {
    .tdContent {
      overflow-y: auto;
    }
  }

  &.rowHeightMode-FIXED {
    .tdContent {
      max-height: 48px;
    }
  }

  &.rowHeightMode-AUTO {
    .tdContent {
      max-height: 200px;
    }
  }

  &.wrapMode-OVERFLOW {
    .tdContent {
      padding-right: 8px;
      overflow: auto;
      white-space: nowrap;
      text-overflow: ellipsis;
    }

    &::after {
      position: absolute;
      top: 0;
      right: 0;
      display: block;
      width: 20px;
      height: 100%;
      background: linear-gradient(90deg, transparent, var(--bg-color) 70%, var(--bg-color));
      content: ' ';
      pointer-events: none;
    }
  }

  .tdContent {
    display: flex;
    flex: 1;
    flex-direction: column;
    gap: 4px;
    align-items: flex-start;
    min-height: 48px;
  }

  &.isOdd {
    --bg-color: white;
  }
}

.resizer {
  position: absolute;
  top: 0;
  right: -4px;
  z-index: 1;
  display: flex;
  justify-content: center;
  width: 8px;
  height: 100%;
  cursor: col-resize;

  &::before {
    display: block;
    width: 4px;
    transition: background-color @default-animation-speed @default-animation-function;
    content: ' ';
  }

  &:hover,
  &.isResizing {
    &::before {
      background-color: @fr-colors-v2-primary-flagrightBlue;
    }
  }
}

.bodyBlockSelection {
  user-select: none;
}

.error {
  padding: 20px;
  pointer-events: none;
}

.noData {
  padding: 20px;
  color: @fr-colors-v2-gray-4;
  text-align: start;
  background: white;
}
