/**
 * Represents an error caused by an api call i.e. it has attributes for a HTTP status code
 * and the returned body object.
 *
 * Example
 * API returns a ErrorMessageObject whenever HTTP status code is not in [200, 299]
 * => ApiException(404, someErrorMessageObject)
 *
 */
export class ApiException<T> extends Error {
  public constructor(
    public code: number,
    public httpMessage: string,
    public body: T,
    public headers: { [key: string]: string },
  ) {
    let message: string | undefined = undefined;
    try {
      if (typeof body === 'string') {
        const json = JSON.parse(body);
        if (json.message && typeof json.message === 'string') {
          message = json.message;
        }
      }
    } catch (e) {}

    if (message == null) {
      message = `Unknown error happened while communicating to our servers ("${httpMessage}")`;

      if (code === 404) {
        message = `Requested resource not found!`;
      } else {
        if (code >= 500) {
          message = `Something has gone wrong, sorry!`;
        }
      }
    }
    super(message);
  }
}
