{
  "name": "phytoplankton-console",
  "version": "1.0.0",
  "private": true,
  "description": "Flagright console",
  "scripts": {
    "aws-sso-login": "aws sso login --profile $npm_config_profile && yawsso -p $npm_config_profile || npm run sso-fallback-message",
    "aws-sso-login:deploy": "npm run aws-sso-login --profile=AWSAdministratorAccess-073830519512",
    "aws-sso-login:dev": "npm run aws-sso-login --profile=AWSAdministratorAccess-911899431626",
    "aws-sso-login:sandbox": "npm run aws-sso-login --profile=AWSAdministratorAccess-293986822825",
    "aws-sso-login:prod": "npm run aws-sso-login --profile=AWSAdministratorAccess-870721492449",
    "sso-fallback-message": "echo 'Clear the cookies manually of START_URL i.e. https://d-9a6713bec9.awsapps.com/start#/ and try again. \nOR\nFollow the steps mentioned below:\n1. Open the START_URL i.e. https://d-9a6713bec9.awsapps.com/start#/ in a browser.\n2. Click on the AWS Account Button you see\n3. Click DevsAtFlagright\n4. Click AWSAdministratorAccess | Command Line or Programmatic Access\n5. Click Copy to Clipboard in Option 1\n6. Paste the copied value in the terminal and press enter\n\nNow you should be able to run the command again' && exit 1",
    "synth:dev": "ENV=dev cdk synth dev-phytoplankton",
    "synth:dev:user": "ENV=dev:user cdk synth dev-phytoplankton-$QA_SUBDOMAIN",
    "synth:sandbox": "ENV=sandbox cdk synth sandbox-phytoplankton",
    "synth:prod": "ENV=prod cdk synth prod-phytoplankton",
    "synth:pipeline": "cdk synth phytoplankton-pipeline",
    "deploy:dev": "ENV=dev cdk deploy dev-phytoplankton",
    "deploy:dev:clean": "npm run clear && yarn && npm run build:dev && npm run synth:dev && npm run deploy:dev -- --profile=AWSAdministratorAccess-911899431626",
    "deploy:dev:user": "ENV=dev:user cdk deploy dev-phytoplankton-$QA_SUBDOMAIN --require-approval never",
    "deploy:qa": "export QA=true; export QA_SUBDOMAIN=${QA_SUBDOMAIN:-qa$(git rev-parse --abbrev-ref HEAD | shasum | head -c5)} && npm run clear && yarn && ENV=local npm run build:dev && npm run synth:dev:user && npm run deploy:dev:user",
    "destroy:qa": "npm run clear && yarn && ENV=dev npm run build:dev && ENV=dev:user cdk destroy dev-phytoplankton-$QA_SUBDOMAIN --require-approval never -f",
    "deploy:sandbox": "ENV=sandbox cdk deploy sandbox-phytoplankton",
    "deploy:sandbox:clean": "npm run clear && yarn && npm run aws-sso-login --profile=AWSAdministratorAccess-293986822825 && npm run build:sandbox && npm run synth:sandbox && npm run deploy:sandbox -- --profile=AWSAdministratorAccess-293986822825",
    "deploy:prod": "ENV=prod cdk deploy prod-phytoplankton",
    "deploy:prod:clean": "npm run clear && yarn && npm run aws-sso-login --profile=AWSAdministratorAccess-870721492449 && npm run build:prod && npm run synth:prod && npm run deploy:prod -- --profile=AWSAdministratorAccess-870721492449",
    "deploy:pipeline": "cdk deploy phytoplankton-pipeline --profile=AWSAdministratorAccess-073830519512",
    "deploy:pipeline:clean": "npm run aws-sso-login:deploy && npm run synth:pipeline && npm run deploy:pipeline",
    "build:dev": "npm run openapi:build && cross-env ENV=dev node build",
    "build:sandbox": "npm run openapi:build && cross-env ENV=sandbox node build",
    "build:prod": "npm run openapi:build && cross-env ENV=prod node build",
    "dev": "npm run openapi:build && npm run start:local",
    "local:setup": "openssl genrsa -out build/certificates/self_priv.pem 1024 && openssl req -new -key build/certificates/self_priv.pem -out build/certificates/certrequest.csr && openssl x509 -req -in build/certificates/certrequest.csr -signkey build/certificates/self_priv.pem -out build/certificates/self_cert.pem",
    "clear": "rm -rf ./dist cdk.out",
    "gh-pages": "gh-pages -d dist",
    "i18n-remove": "pro i18n-remove --locale=zh-CN --write",
    "lint": "npm run lint:js && npm run lint:style && npm run lint:prettier",
    "lint-staged": "lint-staged",
    "lint-staged:js": "eslint --ext .js,.jsx,.ts,.tsx ",
    "lint:fix": "eslint --fix --cache --ext .js,.jsx,.ts,.tsx --format=pretty ./src && npm run lint:style",
    "lint:js": "eslint --cache --ext .js,.jsx,.ts,.tsx --format=pretty ./src",
    "lint:prettier": "prettier -c --write \"src/**/*\" --end-of-line auto",
    "lint:style": "stylelint --fix \"src/**/*.less\" --syntax less",
    "openapi:generate-sdk": "build/openapi-generate.js",
    "openapi:build": "build/openapi_fetch.js && npm run openapi:generate-sdk",
    "precommit": "lint-staged",
    "prettier": "prettier -c --write .",
    "start:local": "cross-env ENV=local WATCH=true node build",
    "start:dev": "cross-env ENV=dev WATCH=true node build",
    "pretest": "node ./tests/beforeTest",
    "test:cypress": "node ./tests/run-tests.js",
    "test:unit": "jest src",
    "test:all": "npm run test:unit && npm run test:cypress",
    "tsc": "tsc --noEmit",
    "tsc:watch": "tsc --noEmit --watch",
    "cypress:open": "cypress open",
    "cypress:test:dev": "cypress run",
    "postinstall": "husky install"
  },
  "lint-staged": {
    "**/*.less": "stylelint --syntax less",
    "**/*.{js,jsx,ts,tsx}": "npm run lint-staged:js",
    "**/*.{js,jsx,tsx,ts,less,md,json}": [
      "prettier --write"
    ]
  },
  "browserslist": [
    "> 1%",
    "last 2 versions",
    "not ie <= 10"
  ],
  "dependencies": {
    "@ant-design/charts": "^1.4.2",
    "@ant-design/icons": "^4.5.0",
    "@ant-design/pro-card": "1.20.13",
    "@ant-design/pro-descriptions": "^1.6.8",
    "@ant-design/pro-form": "^1.18.3",
    "@ant-design/pro-layout": "^6.15.3",
    "@antv/l7-react": "^2.1.9",
    "@auth0/auth0-react": "^1.9.0",
    "@rjsf/antd": "^4.2.2",
    "@rjsf/core": "^4.2.2",
    "@sentry/react": "^7.2.0",
    "@sentry/tracing": "^7.2.0",
    "@tanstack/react-query": "^4.2.3",
    "@tanstack/react-table": "^8.8.4",
    "@toast-ui/react-editor": "^3.2.2",
    "@types/flat": "^5.0.2",
    "@types/react-resizable": "^3.0.2",
    "@umijs/use-request": "^1.4.3",
    "ahooks": "^2.0.0",
    "antd": "4.21.4",
    "axios": "^0.26.0",
    "clsx": "^1.2.1",
    "dayjs": "1.11.1",
    "fast-deep-equal": "^3.1.3",
    "filesize": "^8.0.7",
    "flat": "^5.0.2",
    "html2canvas": "^1.4.1",
    "jspdf": "^2.5.1",
    "jwt-decode": "^3.1.2",
    "lodash": "^4.17.11",
    "mixpanel-browser": "^2.45.0",
    "nanoid": "^4.0.0",
    "pluralize": "^8.0.0",
    "rc-resize-observer": "^1.2.0",
    "react": "^16.8.4",
    "react-country-flag": "^3.0.2",
    "react-device-detect": "^2.2.2",
    "react-dom": "^17.0.0",
    "react-helmet": "^6.1.0",
    "react-resizable": "^3.0.4",
    "react-router": "^6.3.0",
    "react-router-dom": "^6.3.0",
    "react-switch": "^7.0.0",
    "umi-request": "^1.4.0",
    "url-parse": "^1.5.10",
    "uuid": "^9.0.0"
  },
  "devDependencies": {
    "@openapitools/openapi-generator-cli": "^2.6.0",
    "@sentry/esbuild-plugin": "^0.2.3",
    "@svgr/core": "^6.3.1",
    "@tsconfig/node14": "^1.0.1",
    "@types/auth0-lock": "^11.27.4",
    "@types/express": "^4.17.0",
    "@types/lodash": "^4.14.144",
    "@types/lodash.debounce": "^4.0.7",
    "@types/mixpanel-browser": "^2.38.0",
    "@types/pluralize": "^0.0.29",
    "@types/react": "^17.0.0",
    "@types/react-dom": "^17.0.0",
    "@types/react-helmet": "^6.1.6",
    "@types/uuid": "^9.0.1",
    "@typescript-eslint/eslint-plugin": "^5.35.1",
    "@typescript-eslint/parser": "^5.35.1",
    "@umijs/fabric": "^2.12.1",
    "aws-cdk": "^2.34.2",
    "aws-cdk-lib": "^2.34.2",
    "carlo": "^0.9.46",
    "constructs": "^10.0.75",
    "cross-env": "^7.0.0",
    "cross-port-killer": "^1.1.1",
    "css-tree": "^2.1.0",
    "cypress": "^10.4.0",
    "detect-installer": "^1.0.1",
    "dotenv": "^16.0.1",
    "esbuild": "^0.15.5",
    "eslint": "8.22.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-cypress": "^2.12.1",
    "eslint-plugin-import": "^2.25.4",
    "eslint-plugin-prettier": "^4.2.1",
    "eslint-plugin-react-hooks": "^4.3.0",
    "express": "^4.18.1",
    "express-history-api-fallback": "^2.2.1",
    "fs-extra": "^10.1.0",
    "gh-pages": "^3.0.0",
    "husky": "^8.0.3",
    "jest": "^29.2.2",
    "json-templates": "^4.2.0",
    "less": "^4.1.3",
    "lint-staged": "^10.0.0",
    "node-notifier": "^10.0.1",
    "postcss": "^8.4.14",
    "postcss-less": "^6.0.0",
    "prettier": "^2.7.1",
    "puppeteer-core": "^8.0.0",
    "stylelint": "^13.0.0",
    "tmp": "^0.2.1",
    "ts-jest": "^29.0.3",
    "ts-node": "^10.8.2",
    "typescript": "^4.2.2"
  },
  "resolutions": {
    "**/@types/react": "^17.0.0"
  },
  "engines": {
    "node": "^16.16.0",
    "npm": "^6.14.15"
  }
}
