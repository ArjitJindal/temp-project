/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Unique number allocated to a reporting entity when enrolled with AUSTRAC.
 */
export type ReportingEntityNumber = string
/**
 * Name of the XML file containing this set of suspicious matter reports.
 */
export type SmrFileName = string
/**
 * Total count of suspicious matter reports included in the file.
 */
export type NumberOfReportsInFile = number
/**
 * Internal reference number used by the reporting entity for this report.
 */
export type ReportingEntityReference = string
/**
 * Flag to hold report for manual review and attachments before submission.
 */
export type InterceptFlag = string
/**
 * Identifier for a branch, outlet, office or other location within the reporting entity.
 */
export type BranchIdentifier = string
/**
 * Name of the branch, outlet or office.
 */
export type BranchName = string
/**
 * Street number and name or post box details.
 */
export type StreetAddress = string
/**
 * Name of a suburb, town, or city.
 */
export type SuburbTownCity = string
/**
 * Name or abbreviation of a state, province, or territory.
 */
export type StateOrProvince = string
/**
 * Postal or ZIP code.
 */
export type Postcode = string
/**
 * Code identifying a designated service under the AML/CTF Act.
 */
export type DesignatedServiceCode =
  | 'ACC_DEP'
  | 'AFSL_ARR'
  | 'BET_ACC'
  | 'BULSER'
  | 'BUS_LOAN'
  | 'BUS_RSA'
  | 'CHQACCSS'
  | 'CRDACCSS'
  | 'CUR_EXCH'
  | 'CUST_DEP'
  | 'DCE'
  | 'DEBTINST'
  | 'FIN_EFT'
  | 'GAMCHSKL'
  | 'GAM_BETT'
  | 'GAM_EXCH'
  | 'GAM_MACH'
  | 'LEASING'
  | 'LIFE_INS'
  | 'PAYORDRS'
  | 'PAYROLL'
  | 'PENSIONS'
  | 'RS'
  | 'SECURITY'
  | 'SUPERANN'
  | 'TRAVLCHQ'
  | 'VALCARDS'
/**
 * List the designated services to which the suspicious matter relates.
 *
 * @maxItems 26
 */
export type DesignatedServices = DesignatedServiceCode[]
/**
 * Indicate whether a service or product, which is categorised as a designated service, has been provided to a person or organisation to which the suspicious matter relates.
 */
export type DesignatedServicesProvided = 'Y' | 'N'
/**
 * Indicate whether the person or organisation to which this suspicious matter relates requested the provision of a service or product, which is categorised as a designated service, from the reporting entity
 */
export type DesignatedServicesRequested = 'Y' | 'N'
/**
 * Indicate whether the person or organisation to which this suspicious matter relates enquired about the provision of a service or product, which could be categorised as a designated service. However, the person or organisation and the reporting entity did not proceed further by requesting or providing the service or product respectively.
 */
export type DesignatedServicesEnquiry = 'Y' | 'N'
/**
 * List the most appropriate reason(s) for the suspicion formed in relation to the matter being reported.
 *
 * @minItems 1
 */
export type SuspicionReason = [SuspicionReason1, ...SuspicionReason1[]]
/**
 * Predefined code indicating the reason for forming the suspicion.
 */
export type SuspicionReasonCode =
  | 'AF'
  | 'AT'
  | 'AV'
  | 'CI'
  | 'CC'
  | 'CR'
  | 'CF'
  | 'CL'
  | 'CB'
  | 'DW'
  | 'FN'
  | 'IR'
  | 'IC'
  | 'IF'
  | 'NS'
  | 'OW'
  | 'PH'
  | 'RI'
  | 'SS'
  | 'SC'
  | 'SB'
  | 'UN'
  | 'UA'
  | 'UF'
  | 'UG'
  | 'UU'
  | 'UC'
  | 'UX'
  | 'UT'
  | 'OTHERS'
/**
 * Short description of the reason for suspicion when no predefined code applies.
 */
export type OtherReasonForSuspicion = string
/**
 * Total estimated value involved in the suspicious matter, in Australian dollars.
 */
export type TotalValue = string
/**
 * Narrative explaining circumstances leading to the suspicion.
 */
export type GroundsForSuspicion = string
/**
 * Full name of an individual or organisation.
 */
export type Name = string
/**
 * Any other name(s) the person or organisation is commonly known by or trades under.
 */
export type AlternativeName = Name[]
/**
 * A country's official short name in English (ISO 3166).
 */
export type CountryName = string
/**
 * A contact telephone number.
 */
export type PhoneNumber = string
/**
 * A list of contact telephone numbers.
 */
export type PhoneNumbers = {
  phone?: PhoneNumber
  [k: string]: unknown
}[]
/**
 * An email address in standard local‑part@domain format.
 */
export type EmailAddress = string
/**
 * A list of email addresses.
 */
export type EmailAddresses = {
  email?: EmailAddress
  [k: string]: unknown
}[]
/**
 * Account details extended to include type, signatories, open date, balance, and associated documentation.
 */
export type AccountSmrExtended = AccountAllOptionalFields & {
  type: AccountType
  otherDesc?: OtherAccountTypeDescription
  acctSigName?: Signatories
  acctOpenDate?: AccountOpenDate
  acctBal?: AccountBalance
  documentation?: Documentation
  [k: string]: unknown
}
/**
 * Name or title associated with the account.
 */
export type AccountTitle = string
/**
 * A 6‑digit number identifying the Australian financial institution branch.
 */
export type BankStateBranchNumber = string
/**
 * An account or policy number.
 */
export type AccountNumber = string
/**
 * If the value of type is 'OTHERS', then otherDesc must be provided (reason required).
 */
export type AccountType =
  | 'BETTING'
  | 'BULLION'
  | 'CHEQUE'
  | 'CREDIT'
  | 'CUSTODY'
  | 'FCUR'
  | 'INS'
  | 'INVEST'
  | 'HIRE'
  | 'LOAN'
  | 'REMIT'
  | 'VALCARD'
  | 'SUPER'
  | 'TRADE'
  | 'OTHERS'
/**
 * Required when type is 'OTHERS'.
 */
export type OtherAccountTypeDescription = string
/**
 * A list of name of a person or organisation
 */
export type Signatories = {
  acctSigName?: Name
  [k: string]: unknown
}[]
/**
 * Date with extended allowable range used within SMRs.
 */
export type AccountOpenDate = string
/**
 * Positive or negative currency amount.
 */
export type AccountBalance = string
/**
 * Description of relevant documents held.
 */
export type Documentation = string
/**
 * A list of accounts.
 */
export type Accounts = AccountSmrExtended[]
/**
 * The identifying address of a digital currency wallet.
 */
export type DigitalCurrencyWalletAddress = string
/**
 * A list of the identifying address of a digital currency wallet.
 */
export type DigitalCurrencyWalletAddresses = {
  digitalCurrencyWallet?: DigitalCurrencyWalletAddress
  [k: string]: unknown
}[]
/**
 * When 'type' is present, 'code' must also be present. Mutually exclusive: Either (type + code) OR description is allowed.
 */
export type IndustryOccupationType = 'I' | 'M' | 'O' | 'S' | 'OTHERS'
/**
 * Required when 'type' is not other.
 */
export type IndustryOccupationCode = string
/**
 * Required if 'type' is 'OTHERS'.
 */
export type IndustryOccupationDescription = string
/**
 * An 11‑digit number issued by the Australian Taxation Office for business identification.
 */
export type AustralianBusinessNumber = string
/**
 * A 9‑digit number issued by ASIC to registered companies in Australia.
 */
export type AustralianCompanyNumber = string
/**
 * A 9‑digit number issued by ASIC to registered bodies, including foreign companies.
 */
export type AustralianRegisteredBodyNumber = string
/**
 * Code representing the legal structure of a business.
 */
export type BusinessStructure = 'A' | 'C' | 'G' | 'P' | 'R' | 'T'
/**
 * List the names of the organisation's beneficial owners.
 */
export type BeneficialOwners = {
  benName?: Name
  [k: string]: unknown
}[]
/**
 * List the names of the organisation's office holders.
 */
export type OfficeHolders = {
  holderName?: Name
  [k: string]: unknown
}[]
/**
 * Description of relevant documents held.
 */
export type Documentation1 = string
/**
 * Describe any documentation held in relation to this organisation (e.g. articles of association, business cards, business/company registration certificate, trust deeds, etc.).
 */
export type Documentations = {
  documentation?: Documentation1
  [k: string]: unknown
}[]
/**
 * An individual's date of birth.
 */
export type DateOfBirth = string
/**
 * A list of countries the person or organisation is a citizen of.
 */
export type CitizenshipCountries = {
  citizenCountry?: CountryName
  [k: string]: unknown
}[]
/**
 * Details of the documents sighted or used to confirm the identity of a person or organisation.
 */
export type IdentificationDocument1 = Identification & {
  idIssueDate?: IdIssueDate
  idExpiryDate?: IdExpiryDate
  [k: string]: unknown
}
/**
 * If the value of type is 'OTHERS', then typeOther must be provided (reason required).
 */
export type IdentificationType =
  | 'A'
  | 'C'
  | 'D'
  | 'P'
  | 'T'
  | 'ARNU'
  | 'CUST'
  | 'BENE'
  | 'BCNO'
  | 'BUSR'
  | 'EMID'
  | 'EMPL'
  | 'IDNT'
  | 'MEMB'
  | 'PHOT'
  | 'SECU'
  | 'SOID'
  | 'SOSE'
  | 'STUD'
  | 'TXID'
  | 'OTHERS'
/**
 * Required when type is 'OTHERS'.
 */
export type OtherDescription = string
/**
 * Number on an identification document.
 */
export type IdentificationNumber = string
/**
 * Organisation or government body that issued the identification document.
 */
export type IdentificationIssuer = string
/**
 * Date with extended allowable range used within SMRs.
 */
export type IdIssueDate = string
/**
 * Date with extended allowable range used within SMRs.
 */
export type IdExpiryDate = string
/**
 * Details of the documents sighted or used to confirm the identity of a person or organisation.
 */
export type IdentificationDocument = IdentificationDocument1[]
/**
 * Description of an electronic source used to verify identity.
 */
export type ElectronicDataSource1 = string
/**
 * Details of the documents sighted or used to confirm the identity of a person or organisation.
 */
export type ElectronicDataSource = ElectronicDataSource1[]
/**
 * If the value of type is 'OTHERS', then typeOther must be provided (reason required).
 */
export type DeviceType = 'IMEI' | 'IMSI' | 'IP' | 'MAC' | 'SEID' | 'OTHERS'
/**
 * Required when type is 'OTHERS'.
 */
export type OtherDescription1 = string
/**
 * The device identifier type and unique identifier of the device or system used, such as an IP address, MAC address, etc.
 */
export type DeviceIdentifier = DeviceIdentifier1[]
/**
 * Indicate whether or not the person or organisation is a customer of the reporting entity.
 */
export type PersonIsCustomer = 'Y' | 'N'
/**
 * Any other name(s) the person or organisation is commonly known by or trades under.
 */
export type AlternativeName1 = Name[]
/**
 * A list of contact telephone numbers.
 */
export type PhoneNumbers1 = {
  phone?: PhoneNumber
  [k: string]: unknown
}[]
/**
 * A list of email addresses.
 */
export type EmailAddresses1 = {
  email?: EmailAddress
  [k: string]: unknown
}[]
/**
 * A list of accounts.
 */
export type Accounts1 = AccountSmrExtended[]
/**
 * A list of the identifying address of a digital currency wallet.
 */
export type DigitalCurrencyWalletAddresses1 = {
  digitalCurrencyWallet?: DigitalCurrencyWalletAddress
  [k: string]: unknown
}[]
/**
 * Details of the documents sighted or used to confirm the identity of a person or organisation.
 */
export type IdentificationDocument2 = IdentificationDocument1[]
/**
 * Details of the documents sighted or used to confirm the identity of a person or organisation.
 */
export type ElectronicDataSource2 = ElectronicDataSource1[]
/**
 * The device identifier type and unique identifier of the device or system used, such as an IP address, MAC address, etc.
 */
export type DeviceIdentifier2 = DeviceIdentifier1[]
/**
 * Indicate whether or not the person or organisation is a customer of the reporting entity.
 */
export type PersonIsCustomer1 = 'Y' | 'N'
/**
 * Indicate whether or not the other party is a customer of the reporting entity.
 */
export type PartyIsCustomer = 'Y' | 'N'
/**
 * Indicate whether or not the other party is an authorised agent of a person or organisation listed as a suspicious person.
 */
export type PartyIsAgent = 'Y' | 'N'
/**
 * Description of how this party is linked to the suspicious person.
 */
export type RelationshipToSuspiciousPerson = string
/**
 * Description of documents proving a party’s link to the suspicious person.
 */
export type EvidenceOfRelationship = string
/**
 * Physical or distinctive characteristics of the unidentified person.
 */
export type DescriptionOfUnidentifiedPerson = string
/**
 * Description of relevant documents held.
 */
export type DescriptionOfDocumentation = string
/**
 * Documentation held in relation to the unidentified person.
 */
export type Documentations1 = {
  documentation?: DescriptionOfDocumentation
  [k: string]: unknown
}[]
/**
 * Date when the suspicious transaction or activity took place.
 */
export type TransactionDate = string
/**
 * Code for the type of transaction or activity.
 */
export type TransactionTypeCode =
  | 'AN'
  | 'AD'
  | 'CW'
  | 'IV'
  | 'TV'
  | 'WV'
  | 'IQ'
  | 'EC'
  | 'IC'
  | 'CB'
  | 'ID'
  | 'CD'
  | 'IM'
  | 'CM'
  | 'DA'
  | 'DC'
  | 'IT'
  | 'IF'
  | 'EA'
  | 'DE'
  | 'DS'
  | 'DB'
  | 'EF'
  | 'SF'
  | 'PF'
  | 'ST'
  | 'PT'
  | 'SB'
  | 'PB'
  | 'LA'
  | 'LR'
  | 'LD'
  | 'HP'
  | 'IL'
  | 'AC'
  | 'BP'
  | 'RL'
  | 'RV'
  | 'IH'
  | 'CC'
  | 'BE'
  | 'BI'
  | 'WC'
  | 'MP'
  | 'SS'
  | 'PS'
  | 'TS'
  | 'TT'
  | 'DD'
  | 'AQ'
  | 'TE'
  | 'TF'
  | 'IN'
  | 'CN'
  | 'TN'
  | 'TU'
  | 'OTHERS'
/**
 * Details for a transaction type not covered by predefined values.
 */
export type OtherTransactionType = string
/**
 * Use this to indicate when the transfer involved the movement of funds.
 */
export type Money = string
/**
 * Use this to indicate then the transfer involved property.
 */
export type Property = string
/**
 * Indicate whether the transaction or activity was completed.
 */
export type TransactionCompleted = 'Y' | 'N'
/**
 * Reference number assigned to the transaction.
 */
export type TransactionReferenceNumber1 = string
/**
 * Any reference number allocated to the transaction or activity by the reporting entity.
 */
export type TransactionReferenceNumber = TransactionReferenceNumber1[]
/**
 * Full value of the transaction in Australian dollars.
 */
export type TotalTransactionAmount = string
/**
 * Total physical currency involved in the transaction, in Australian dollars.
 */
export type CashAmount = string
/**
 * The three‑letter ISO 4217 currency code.
 */
export type CurrencyCode = string
/**
 * Currency amount in numeric format without currency symbols.
 */
export type Amount = string
/**
 * Currency code and value of any foreign currency involved.
 */
export type ForeignCurrency = CurrencyAndAmount[]
/**
 * The code or symbol associated with the digital currency, e.g. BTC for Bitcoin, ETH for Ethereum.
 */
export type Code = string
/**
 * The description or name associated with the digital currency, e.g. Bitcoin, Ethereum
 */
export type Description = string
/**
 * A decimal number with up to 10 fractional digits.
 */
export type NumberOfUnits = string
/**
 * The asset or currency that the digital currency is backed by, e.g. USD, EUR.
 */
export type BackingAsset = string
/**
 * The transaction hash (i.e. identifier) of the blockchain transaction, if applicable for this digital currency transfer.
 */
export type BlockchainTransactionId = string
/**
 * Digital currency code, description, value, backing asset, fiat currency value and blockchain reference of any digital currency involved.
 */
export type DigitalCurrency = DigitalCurrencyDetail[]
/**
 * The index of the person or organisation to which this suspicious matter relates. Pick index from the list of persons or organisations from rows of the Part C (1 based indexing)
 */
export type ReferenceId = string
/**
 * The index of the person or organisation to which this suspicious matter relates. Pick index from the list of persons or organisations from rows of the Part D (1 based indexing)
 */
export type ReferenceId1 = string
/**
 * A list of accounts.
 */
export type Accounts2 = AccountAllOptionalFields[]
/**
 * A list of the identifying address of a digital currency wallet.
 */
export type DigitalCurrencyWalletAddresses2 = {
  digitalCurrencyWallet?: DigitalCurrencyWalletAddress
  [k: string]: unknown
}[]
/**
 * Name of the institution.
 */
export type InstitutionName = string
/**
 * Country where the institution is located.
 */
export type InstitutionCountry = string
/**
 * Provide details of any sending institution(s) involved or from where the funds originated.
 */
export type SendingInstitution = InstitutionWithBranch[]
/**
 * Details of the source of the funds involved in a suspicious transaction or activity, if any
 */
export type SenderDrawerIssuer = SenderDrawerIssuer1[]
/**
 * The index of the person or organisation to which this suspicious matter relates. Pick index from the list of persons or organisations from rows of the Part C (1 based indexing)
 */
export type ReferenceId2 = string
/**
 * The index of the person or organisation to which this suspicious matter relates. Pick index from the list of persons or organisations from rows of the Part D (1 based indexing)
 */
export type ReferenceId3 = string
/**
 * A list of accounts.
 */
export type Accounts3 = AccountAllOptionalFields[]
/**
 * A list of the identifying address of a digital currency wallet.
 */
export type DigitalCurrencyWalletAddresses3 = {
  digitalCurrencyWallet?: DigitalCurrencyWalletAddress
  [k: string]: unknown
}[]
/**
 * Provide details of any receiving or destination institutions involved in the suspicious transaction or activity.
 */
export type ReceivingInstitution = InstitutionWithBranch[]
/**
 * Details of the destination of the funds in relation to a payee, if any.
 */
export type Payee = Payee1[]
/**
 * The index of the person or organisation to which this suspicious matter relates. Pick index from the list of persons or organisations from rows of the Part C (1 based indexing)
 */
export type ReferenceId4 = string
/**
 * The index of the person or organisation to which this suspicious matter relates. Pick index from the list of persons or organisations from rows of the Part D (1 based indexing)
 */
export type ReferenceId5 = string
/**
 * A list of accounts.
 */
export type Accounts4 = AccountAllOptionalFields[]
/**
 * A list of the identifying address of a digital currency wallet.
 */
export type DigitalCurrencyWalletAddresses4 = {
  digitalCurrencyWallet?: DigitalCurrencyWalletAddress
  [k: string]: unknown
}[]
/**
 * Provide details of any receiving or destination institutions involved in the suspicious transaction or activity.
 */
export type ReceivingInstitution1 = InstitutionWithBranch[]
/**
 * Details of the destination of the funds in relation to a beneficiary, if any.
 */
export type Beneficiary = Beneficiary1[]
/**
 * Details of any institution other than the sending or receiving institutions involved (i.e. any intermediary institution).
 */
export type OtherInstitution = InstitutionWithBranch[]
/**
 * Most likely offence related to the suspicious matter.
 */
export type OffenceType = 'TF' | 'ML' | 'OG' | 'FI' | 'PC' | 'TE'
/**
 * Date the previous suspicious matter report was submitted to AUSTRAC.
 */
export type PreviousReportDate = string
/**
 * Internal reference to the previous suspicious matter report.
 */
export type PreviousReportReference = string
/**
 * List the date and reference number of any previous suspicious matter reports given to AUSTRAC relating to the person(s) or organisation(s) in which the suspicious matter relates.
 */
export type PreviousOrOtherAgencyReports = PreviousOrOtherAgencyReports1[]
/**
 * Date value in range 2000‑01‑01 to 2035‑12‑31.
 */
export type AustracDate = string
/**
 * Summary of information given to the other Australian government agency.
 */
export type InformationProvided = string
/**
 * List other Australian government bodies the suspicious matter has been or will be reported to.
 */
export type OtherAustralianGovernmentAgency = OtherAustralianGovernmentAgency1[]
/**
 * Account details extended to include type, signatories, open date, balance, and associated documentation.
 */
export type AccountSmrExtended1 = AccountAllOptionalFields & {
  type: AccountType
  otherDesc?: OtherAccountTypeDescription
  acctSigName?: Signatories
  acctOpenDate?: AccountOpenDate
  acctBal?: AccountBalance
  documentation?: Documentation
  [k: string]: unknown
}
/**
 * Details of the documents sighted or used to confirm the identity of a person or organisation.
 */
export type IdentificationDocument3 = Identification & {
  idIssueDate?: IdIssueDate
  idExpiryDate?: IdExpiryDate
  [k: string]: unknown
}
/**
 * Type of account from a predefined list.
 */
export type AccountType1 =
  | 'BETTING'
  | 'BULLION'
  | 'CHEQUE'
  | 'CREDIT'
  | 'CUSTODY'
  | 'FCUR'
  | 'INS'
  | 'INVEST'
  | 'HIRE'
  | 'LOAN'
  | 'REMIT'
  | 'VALCARD'
  | 'SUPER'
  | 'TRADE'
  | 'OTHERS'
/**
 * Code identifying a designated service under the AML/CTF Act.
 */
export type DesignatedServiceCode1 =
  | 'ACC_DEP'
  | 'AFSL_ARR'
  | 'BET_ACC'
  | 'BULSER'
  | 'BUS_LOAN'
  | 'BUS_RSA'
  | 'CHQACCSS'
  | 'CRDACCSS'
  | 'CUR_EXCH'
  | 'CUST_DEP'
  | 'DCE'
  | 'DEBTINST'
  | 'FIN_EFT'
  | 'GAMCHSKL'
  | 'GAM_BETT'
  | 'GAM_EXCH'
  | 'GAM_MACH'
  | 'LEASING'
  | 'LIFE_INS'
  | 'PAYORDRS'
  | 'PAYROLL'
  | 'PENSIONS'
  | 'RS'
  | 'SECURITY'
  | 'SUPERANN'
  | 'TRAVLCHQ'
  | 'VALCARDS'
/**
 * Code for the type of transaction or activity.
 */
export type TransactionTypeCode1 =
  | 'AN'
  | 'AD'
  | 'CW'
  | 'IV'
  | 'TV'
  | 'WV'
  | 'IQ'
  | 'EC'
  | 'IC'
  | 'CB'
  | 'ID'
  | 'CD'
  | 'IM'
  | 'CM'
  | 'DA'
  | 'DC'
  | 'IT'
  | 'IF'
  | 'EA'
  | 'DE'
  | 'DS'
  | 'DB'
  | 'EF'
  | 'SF'
  | 'PF'
  | 'ST'
  | 'PT'
  | 'SB'
  | 'PB'
  | 'LA'
  | 'LR'
  | 'LD'
  | 'HP'
  | 'IL'
  | 'AC'
  | 'BP'
  | 'RL'
  | 'RV'
  | 'IH'
  | 'CC'
  | 'BE'
  | 'BI'
  | 'WC'
  | 'MP'
  | 'SS'
  | 'PS'
  | 'TS'
  | 'TT'
  | 'DD'
  | 'AQ'
  | 'TE'
  | 'TF'
  | 'IN'
  | 'CN'
  | 'TN'
  | 'TU'
  | 'OTHERS'
/**
 * Indicator for a transaction type not covered by predefined values.
 */
export type OtherTransactionIndicator = 'OI' | 'OO'
/**
 * Most likely offence type related to the suspicious matter.
 */
export type OffenceType1 = 'TF' | 'ML' | 'OG' | 'FI' | 'PC' | 'TE'
/**
 * Short code representing the reason a suspicion was formed.
 */
export type ReasonCodeForSuspicion =
  | 'AF'
  | 'AT'
  | 'AV'
  | 'CI'
  | 'CC'
  | 'CR'
  | 'CF'
  | 'CL'
  | 'CB'
  | 'DW'
  | 'FN'
  | 'IR'
  | 'IC'
  | 'IF'
  | 'NS'
  | 'OW'
  | 'PH'
  | 'RI'
  | 'SS'
  | 'SC'
  | 'SB'
  | 'UN'
  | 'UA'
  | 'UF'
  | 'UG'
  | 'UU'
  | 'UC'
  | 'UX'
  | 'UT'
  | 'OTHERS'
/**
 * Unique AUSTRAC number assigned to a reporting entity.
 */
export type ReportingEntityNumber1 = string
export type IFTIDRAFileName = string
export type IFTIEFileName = string
/**
 * File name of the SMR XML document following AUSTRAC convention.
 */
export type SMRFileName = string
export type TTRFBSFileName = string
export type TTRGSFileName = string
export type TTRISIFileName = string
export type TTRMSBFileName = string
/**
 * Total number of SMRs in the file.
 */
export type ReportCount = number
export type ReportType =
  | 'IFTI-E'
  | 'IFTI-DRA'
  | 'TTR-MSB'
  | 'TTR-GS'
  | 'TTR-ISI'
  | 'TTR-FBS'
  | 'SMR'
/**
 * Full name of an individual or organisation.
 */
export type Name1 = string
export type NameType = 'M' | 'A' | 'T' | 'S' | 'B' | 'H'
export type AddrType = 'M' | 'P'
/**
 * Street number and name or post box details.
 */
export type StreetAddress1 = string
/**
 * Name of a suburb, town, or city.
 */
export type SuburbTownCity1 = string
/**
 * Name or abbreviation of a state, province, or territory.
 */
export type StateOrProvince1 = string
/**
 * Postal or ZIP code.
 */
export type Postcode1 = string
/**
 * A country's official short name in English (ISO 3166).
 */
export type CountryName1 = string
export type AcctType =
  | 'BETTING'
  | 'BULLION'
  | 'CHEQUE'
  | 'CREDIT'
  | 'CUSTODY'
  | 'ECUR'
  | 'FCUR'
  | 'INS'
  | 'INVEST'
  | 'HIRE'
  | 'LOAN'
  | 'OTHERS'
  | 'PENSION'
  | 'REMIT'
  | 'RETIRE'
  | 'VALCARD'
  | 'SUPER'
  | 'TRADE'
/**
 * Short description for an account type not covered by predefined types.
 */
export type OtherAccountTypeDescription1 = string
/**
 * Name or title associated with the account.
 */
export type AccountTitle1 = string
/**
 * A 6‑digit number identifying the Australian financial institution branch.
 */
export type BankStateBranchNumber1 = string
/**
 * An account or policy number.
 */
export type AccountNumber1 = string
/**
 * The identifying address of a digital currency wallet.
 */
export type DigitalCurrencyWalletAddress1 = string
/**
 * Predefined type of identification document.
 */
export type IdentificationType1 =
  | 'A'
  | 'C'
  | 'D'
  | 'P'
  | 'T'
  | 'ARNU'
  | 'CUST'
  | 'BENE'
  | 'BCNO'
  | 'BUSR'
  | 'EMID'
  | 'EMPL'
  | 'IDNT'
  | 'MEMB'
  | 'PHOT'
  | 'SECU'
  | 'SOID'
  | 'SOSE'
  | 'STUD'
  | 'TXID'
  | 'OTHERS'
export type IdTypeGovtIssued = IdentificationType2 &
  ('P' | 'ARNU' | 'BCNO' | 'IDNT' | 'SOSE' | 'TXID')
/**
 * Predefined type of identification document.
 */
export type IdentificationType2 =
  | 'A'
  | 'C'
  | 'D'
  | 'P'
  | 'T'
  | 'ARNU'
  | 'CUST'
  | 'BENE'
  | 'BCNO'
  | 'BUSR'
  | 'EMID'
  | 'EMPL'
  | 'IDNT'
  | 'MEMB'
  | 'PHOT'
  | 'SECU'
  | 'SOID'
  | 'SOSE'
  | 'STUD'
  | 'TXID'
  | 'OTHERS'
/**
 * Number on an identification document.
 */
export type IdentificationNumber1 = string
/**
 * Organisation or government body that issued the identification document.
 */
export type IdentificationIssuer1 = string
/**
 * Predefined type of identification document.
 */
export type IdentificationType3 =
  | 'A'
  | 'C'
  | 'D'
  | 'P'
  | 'T'
  | 'ARNU'
  | 'CUST'
  | 'BENE'
  | 'BCNO'
  | 'BUSR'
  | 'EMID'
  | 'EMPL'
  | 'IDNT'
  | 'MEMB'
  | 'PHOT'
  | 'SECU'
  | 'SOID'
  | 'SOSE'
  | 'STUD'
  | 'TXID'
  | 'OTHERS'
/**
 * Required when type is 'OTHERS'.
 */
export type OtherDescription2 = string
/**
 * Predefined type of identification document.
 */
export type IdentificationType4 =
  | 'A'
  | 'C'
  | 'D'
  | 'P'
  | 'T'
  | 'ARNU'
  | 'CUST'
  | 'BENE'
  | 'BCNO'
  | 'BUSR'
  | 'EMID'
  | 'EMPL'
  | 'IDNT'
  | 'MEMB'
  | 'PHOT'
  | 'SECU'
  | 'SOID'
  | 'SOSE'
  | 'STUD'
  | 'TXID'
  | 'OTHERS'
/**
 * Required when type is 'OTHERS'.
 */
export type OtherDescription3 = string
export type Authorisation = {
  '@refId'?: string
  [k: string]: unknown
} & Authorisation1
export type Authorisation1 = string
/**
 * A contact telephone number.
 */
export type PhoneNumber1 = string
/**
 * An email address in standard local‑part@domain format.
 */
export type EmailAddress1 = string
export type TransactionMethod =
  | 'ARMOURED_CAR_SERVICE'
  | 'ATM_DEPOSIT'
  | 'NIGHT_QUICK_DEPOSIT'
/**
 * Text description of an industry or occupation.
 */
export type IndustryOccupationDescription1 = string
/**
 * Classification system type for the code provided.
 */
export type IndustryOccupationType1 = 'I' | 'M' | 'O' | 'S' | 'OTHERS'
/**
 * Code for an industry or occupation using ABS standards.
 */
export type IndustryOccupationCode1 = string
/**
 * An 11‑digit number issued by the Australian Taxation Office for business identification.
 */
export type AustralianBusinessNumber1 = string
/**
 * A 9‑digit number issued by ASIC to registered companies in Australia.
 */
export type AustralianCompanyNumber1 = string
/**
 * A 9‑digit number issued by ASIC to registered bodies, including foreign companies.
 */
export type AustralianRegisteredBodyNumber1 = string
export type CustNumber = string
/**
 * Code representing the legal structure of a business.
 */
export type BusinessStructure1 = 'A' | 'C' | 'G' | 'P' | 'R' | 'T'
/**
 * Description of an electronic source used to verify identity.
 */
export type ElectronicDataSource3 = string
/**
 * Predefined type of device identifier.
 */
export type DeviceType1 = 'IMEI' | 'IMSI' | 'IP' | 'MAC' | 'SEID' | 'OTHERS'
/**
 * Date in strict YYYY‑MM‑DD format without time zone.
 */
export type DateYYYYMMDD = string
/**
 * Date value in range 2000‑01‑01 to 2035‑12‑31.
 */
export type AustracDate1 = string
/**
 * An individual's date of birth.
 */
export type DateOfBirth1 = string
/**
 * Date with extended allowable range used within SMRs.
 */
export type SMRDate = string
/**
 * The three‑letter ISO 4217 currency code.
 */
export type CurrencyCode1 = string
/**
 * Positive or negative currency amount.
 */
export type SignedAmount = string
/**
 * Currency amount in numeric format without currency symbols.
 */
export type Amount1 = string
/**
 * A decimal number with up to 10 fractional digits.
 */
export type NumberOfUnits1 = string
export type InstnCode = string
/**
 * Name of the institution.
 */
export type InstitutionName1 = string
export type InstnCity = string
/**
 * Country where the institution is located.
 */
export type InstitutionCountry1 = string
/**
 * Name of the institution.
 */
export type InstitutionName2 = string
/**
 * Country where the institution is located.
 */
export type InstitutionCountry2 = string
/**
 * Identifier for a branch, outlet, office or other location within the reporting entity.
 */
export type BranchIdentifier1 = string
/**
 * Name of the branch, outlet or office.
 */
export type BranchName1 = string
/**
 * A 6‑digit number identifying the Australian financial institution branch.
 */
export type BankStateBranchNumber2 = string
/**
 * Identifier for a branch, outlet, office or other location within the reporting entity.
 */
export type BranchIdentifier2 = string
export type Direction = 'I' | 'O'
/**
 * Reference number assigned to the transaction.
 */
export type TransactionReferenceNumber2 = string
/**
 * Internal reference number for the suspicious matter report.
 */
export type ReportingEntityReportReference = string
export type ReasonForTransfer = string
export type DetailsOfPayment = string
export type SenderToReceiverInfo = string
export type OtherDetails = string
/**
 * Indicates Yes or No.
 */
export type YesNoIndicator = 'Y' | 'N'

/**
 * <d:title xmlns:d="http://docbook.org/ns/docbook">Electronic report file format specification – suspicious matter report (SMR)</d:title> <d:author xmlns:d="http://docbook.org/ns/docbook"> <d:orgname>Australian Transaction Reports and Analysis Centre (AUSTRAC)</d:orgname> <d:uri>http://www.austrac.gov.au/</d:uri> </d:author> <d:revhistory xmlns:d="http://docbook.org/ns/docbook"> <d:revision> <d:revnumber>2.0a</d:revnumber> <d:date>April 2025</d:date> </d:revision> </d:revhistory> <d:copyright xmlns:d="http://docbook.org/ns/docbook"> <d:year>2018</d:year> <d:holder>Commonwealth of Australia</d:holder> </d:copyright> <d:keywordset xmlns:d="http://docbook.org/ns/docbook"> <d:keyword>AUSTRAC</d:keyword> <d:keyword>SMR</d:keyword> <d:keyword>Suspicious matter report</d:keyword> <d:keyword>Report file format</d:keyword> <d:keyword>User guide</d:keyword> <d:keyword>Schema reference</d:keyword> <d:keyword>XSD reference</d:keyword> </d:keywordset>
 */
export interface ThisJSONSchemaFileWasGeneratedFromSchemaOnFriSep052025021156GMT0530IndiaStandardTimeForMoreInformationPleaseSeeHttpWwwXsd2JsonschemaOrg {
  smrList?: SuspiciousMatterReportList
  smr?: SuspiciousMatterReport1
  header?: ReportHeader1
  suspReasons?: SuspicionReason1
  smDetails?: SuspiciousMatterDetails1
  suspPerson?: SuspiciousPersonOrOrganisation1
  otherPerson?: OtherRelatedPersonOrOrganisation1
  unidentPerson?: UnidentifiedPerson1
  AccountSMR?: AccountSmrExtended1
  accountSuspPerson?: AccountSmrExtended
  accountOtherPerson?: AccountSmrExtended
  prevReported?: PreviousOrOtherAgencyReports2
  otherAusGov?: OtherAustralianGovernmentAgency2
  additionalDetails?: AdditionalDetails1
  txnDetail?: TransactionOrActivityDetail1
  senderDrawerIssuer?: SenderDrawerIssuer2
  payee?: Payee2
  beneficiary?: Beneficiary2
  businessDetails?: BusinessDetails2
  individualDetails?: IndividualDetails2
  identification?: IdentificationDocument3
  suspGrounds?: SuspGrounds
  SMRAccountType?: AccountType1
  DesignatedSvc?: DesignatedServiceCode1
  TransactionType?: TransactionTypeCode1
  OtherTransactionType?: OtherTransactionIndicator
  OffenceType?: OffenceType1
  SuspReason?: ReasonCodeForSuspicion
  RENumber?: ReportingEntityNumber1
  IFTIDRAFileName?: IFTIDRAFileName
  IFTIEFileName?: IFTIEFileName
  SMRFileName?: SMRFileName
  TTRFBSFileName?: TTRFBSFileName
  TTRGSFileName?: TTRGSFileName
  TTRISIFileName?: TTRISIFileName
  TTRMSBFileName?: TTRMSBFileName
  ReportCount?: ReportCount
  ReportType?: ReportType
  Name?: Name1
  NameType?: NameType
  AddrType?: AddrType
  Addr?: StreetAddress1
  Suburb?: SuburbTownCity1
  State?: StateOrProvince1
  Postcode?: Postcode1
  Country?: CountryName1
  Address?: Address
  AddressBasic?: AddressBasic
  AddressAllOptional?: Address1
  AddressWithType?: AddressWithType
  AddressNoCountry?: AddressWithoutCountry1
  AcctType?: AcctType
  AcctOtherDesc?: OtherAccountTypeDescription1
  AcctTitle?: AccountTitle1
  AcctBSB?: BankStateBranchNumber1
  AcctNumber?: AccountNumber1
  DigitalCurrencyWallet?: DigitalCurrencyWalletAddress1
  AccountOptBSB?: AccountOptBSB
  accountOptBSB?: AccountOptBSB
  AccountAllOptional?: AccountAllOptionalFields1
  accountAllOptional?: AccountAllOptionalFields
  AccountNoBSB?: AccountNoBSB
  accountNoBSB?: AccountNoBSB
  AccountNoTitle?: AccountNoTitle
  AccountBrief?: AccountBrief
  accountNoTitle?: AccountNoTitle
  IdType?: IdentificationType1
  IdTypeGovtIssued?: IdTypeGovtIssued
  IdNumber?: IdentificationNumber1
  IdIssuer?: IdentificationIssuer1
  Identification?: Identification
  IdentificationMandatoryNumber?: IdentificationMandatoryNumber
  IdentificationNoCountry?: IdentificationNoCountry
  Authorisation?: Authorisation
  PhoneNum?: PhoneNumber1
  Email?: EmailAddress1
  TransactionMethod?: TransactionMethod
  IndOccDesc?: IndustryOccupationDescription1
  IndOccType?: IndustryOccupationType1
  IndOccCode?: IndustryOccupationCode1
  IndustryOccupation?: IndustryOrOccupation1
  ABN?: AustralianBusinessNumber1
  ACN?: AustralianCompanyNumber1
  ARBN?: AustralianRegisteredBodyNumber1
  CustNumber?: CustNumber
  BusinessStructure?: BusinessStructure1
  ElectronicDataSource?: ElectronicDataSource3
  DeviceIdentifier?: DeviceIdentifier3
  DeviceType?: DeviceType1
  PlaceOfBirth?: PlaceOfBirth
  DateNoTimeZone?: DateYYYYMMDD
  AUSTRACDate?: AustracDate1
  DateOfBirth?: DateOfBirth1
  SMRDate?: SMRDate
  CurrencyCode?: CurrencyCode1
  SignedAmount?: SignedAmount
  Amount?: Amount1
  CurrencyAmount?: CurrencyAndAmount1
  AudAmount?: AudAmount
  DecimalNumber?: NumberOfUnits1
  InstnCode?: InstnCode
  InstnName?: InstitutionName1
  InstnCity?: InstnCity
  InstnCountry?: InstitutionCountry1
  InstitutionFull?: InstitutionFull
  InstitutionBrief?: InstitutionBrief
  InstitutionWithAccount?: InstitutionWithAccount
  InstitutionWithBranch?: InstitutionWithBranch1
  BranchId?: BranchIdentifier1
  BranchName?: BranchName1
  Branch?: Branch
  BranchOptAddr?: BranchOrLocation
  BranchOptCountry?: BranchOptCountry
  AusBranch?: AusBranch
  Direction?: Direction
  TfrType?: TransferType1
  TRN?: TransactionReferenceNumber2
  REReportRef?: ReportingEntityReportReference
  NonCashAmount?: NonCashAmount
  NonCashAmountCheque?: NonCashAmountCheque
  NonCashAmountChequeOptional?: NonCashAmountChequeOptional
  NonCashAmountECurrency?: NonCashAmountECurrency
  NonCashAmountOther?: NonCashAmountOther
  DrawerName?: Name
  PayeeName?: Name
  Cheque?: Cheque
  ECurrency?: ECurrency
  DigitalCurrency?: DigitalCurrencyDetail1
  PartyReference?: PartyReference
  ReasonForTransfer?: ReasonForTransfer
  DetailsOfPayment?: DetailsOfPayment
  SenderToReceiverInfo?: SenderToReceiverInfo
  OtherDetails?: OtherDetails
  YesNo?: YesNoIndicator
  [k: string]: unknown
}
/**
 * Root element containing one or more suspicious matter reports submitted to AUSTRAC.
 */
export interface SuspiciousMatterReportList {
  reNumber: ReportingEntityNumber
  fileName: SmrFileName
  reportCount: NumberOfReportsInFile
  smr: SuspiciousMatterReport[]
  [k: string]: unknown
}
/**
 * Details of a single suspicious matter, including parties, activities, and reasons.
 */
export interface SuspiciousMatterReport {
  header: ReportHeader
  smDetails: SuspiciousMatterDetails
  suspGrounds: SuspGrounds
  suspPerson?: SuspiciousPersonOrOrganisation[]
  otherPerson?: OtherRelatedPersonOrOrganisation[]
  unidentPerson?: UnidentifiedPerson[]
  txnDetail?: TransactionOrActivityDetail[]
  additionalDetails: AdditionalDetails
  [k: string]: unknown
}
/**
 * Administrative and submission handling information for the SMR.
 */
export interface ReportHeader {
  reReportRef?: ReportingEntityReference
  interceptFlag?: InterceptFlag
  reportingBranch: ReportingBranchInformation
  [k: string]: unknown
}
/**
 * Details of the branch, office, or location where the suspicious matter occurred or was detected.
 */
export interface ReportingBranchInformation {
  branchId?: BranchIdentifier
  name: BranchName
  address?: AddressWithoutCountry
  [k: string]: unknown
}
/**
 * Australian domestic address details where the country is assumed to be Australia.
 */
export interface AddressWithoutCountry {
  addr: StreetAddress
  suburb: SuburbTownCity
  state: StateOrProvince
  postcode: Postcode
  [k: string]: unknown
}
/**
 * Summary of services related to the suspicious activity and reasons for suspicion.
 */
export interface SuspiciousMatterDetails {
  designatedSvc: DesignatedServices
  designatedSvcProvided?: DesignatedServicesProvided
  designatedSvcRequested?: DesignatedServicesRequested
  designatedSvcEnquiry?: DesignatedServicesEnquiry
  suspReasons: SuspicionReason
  grandTotal: TotalValue
  [k: string]: unknown
}
/**
 * List the most appropriate reason(s) for the suspicion formed in relation to the matter being reported.
 */
export interface SuspicionReason1 {
  suspReason: SuspicionReasonCode
  suspReasonOther?: OtherReasonForSuspicion
  [k: string]: unknown
}
export interface SuspGrounds {
  groundsForSuspicion: GroundsForSuspicion
  [k: string]: unknown
}
/**
 * Details of the main person or organisation to which the suspicious matter relates.
 */
export interface SuspiciousPersonOrOrganisation {
  fullName?: Name
  altName?: AlternativeName
  mainAddress?: MainAddress
  postalAddress?: OtherAddress
  phone?: PhoneNumbers
  email?: EmailAddresses
  account?: Accounts
  digitalCurrencyWallet?: DigitalCurrencyWalletAddresses
  indOcc?: IndustryOrOccupation
  abn?: AustralianBusinessNumber
  acn?: AustralianCompanyNumber
  arbn?: AustralianRegisteredBodyNumber
  businessDetails?: BusinessDetails
  individualDetails?: IndividualDetails
  identification?: IdentificationDocument
  electDataSrc?: ElectronicDataSource
  deviceIdentifier?: DeviceIdentifier
  personIsCustomer?: PersonIsCustomer
  [k: string]: unknown
}
/**
 * The full street address of the person's residential address ororganisation's business address; or as much of the address as known. This address cannot be a post box or similar address.
 */
export interface MainAddress {
  addr?: StreetAddress
  suburb?: SuburbTownCity
  state?: StateOrProvince
  postcode?: Postcode
  country?: CountryName
  [k: string]: unknown
}
/**
 * Any other address associated with the person or organisation; or as much of the address as known. This address can be a street or post box address.
 */
export interface OtherAddress {
  addr?: StreetAddress
  suburb?: SuburbTownCity
  state?: StateOrProvince
  postcode?: Postcode
  country?: CountryName
  [k: string]: unknown
}
/**
 * Basic details of an account involved in a suspicious transaction or activity where all fields are optional.
 */
export interface AccountAllOptionalFields {
  title?: AccountTitle
  bsb?: BankStateBranchNumber
  number?: AccountNumber
  [k: string]: unknown
}
/**
 * Codes or descriptions for an individual's occupation or an organisation's industry.
 */
export interface IndustryOrOccupation {
  type: IndustryOccupationType
  code?: IndustryOccupationCode
  description?: IndustryOccupationDescription
  [k: string]: unknown
}
/**
 * Information on the organisation’s structure, beneficial owners, office holders, and incorporation country.
 */
export interface BusinessDetails {
  businessStruct?: BusinessStructure
  benName?: BeneficialOwners
  holderName?: OfficeHolders
  incorpCountry?: CountryName
  documentation?: Documentations
  [k: string]: unknown
}
/**
 * Date of birth and citizenship country or countries.
 */
export interface IndividualDetails {
  dob?: DateOfBirth
  citizenCountry?: CitizenshipCountries
  [k: string]: unknown
}
export interface Identification {
  type: IdentificationType
  typeOther?: OtherDescription
  number?: IdentificationNumber
  issuer?: IdentificationIssuer
  country?: CountryName
  [k: string]: unknown
}
/**
 * Type and unique identifier of a device or system used.
 */
export interface DeviceIdentifier1 {
  type: DeviceType
  typeOther?: OtherDescription1
  identifier: IdentificationNumber
  [k: string]: unknown
}
/**
 * Details of other parties related to the suspicious matter.
 */
export interface OtherRelatedPersonOrOrganisation {
  fullName?: Name
  altName?: AlternativeName1
  mainAddress?: MainAddress1
  postalAddress?: OtherAddress1
  phone?: PhoneNumbers1
  email?: EmailAddresses1
  account?: Accounts1
  digitalCurrencyWallet?: DigitalCurrencyWalletAddresses1
  indOcc?: IndustryOrOccupation
  abn?: AustralianBusinessNumber
  acn?: AustralianCompanyNumber
  arbn?: AustralianRegisteredBodyNumber
  businessDetails?: BusinessDetails1
  individualDetails?: IndividualDetails1
  identification?: IdentificationDocument2
  electDataSrc?: ElectronicDataSource2
  deviceIdentifier?: DeviceIdentifier2
  personIsCustomer?: PersonIsCustomer1
  partyIsCustomer?: PartyIsCustomer
  partyIsAgent?: PartyIsAgent
  relationship?: RelationshipToSuspiciousPerson
  evidence?: EvidenceOfRelationship
  [k: string]: unknown
}
/**
 * The full street address of the person's residential address ororganisation's business address; or as much of the address as known. This address cannot be a post box or similar address.
 */
export interface MainAddress1 {
  addr?: StreetAddress
  suburb?: SuburbTownCity
  state?: StateOrProvince
  postcode?: Postcode
  country?: CountryName
  [k: string]: unknown
}
/**
 * Any other address associated with the person or organisation; or as much of the address as known. This address can be a street or post box address.
 */
export interface OtherAddress1 {
  addr?: StreetAddress
  suburb?: SuburbTownCity
  state?: StateOrProvince
  postcode?: Postcode
  country?: CountryName
  [k: string]: unknown
}
/**
 * Information on the organisation’s structure, beneficial owners, office holders, and incorporation country.
 */
export interface BusinessDetails1 {
  businessStruct?: BusinessStructure
  benName?: BeneficialOwners
  holderName?: OfficeHolders
  incorpCountry?: CountryName
  documentation?: Documentations
  [k: string]: unknown
}
/**
 * Date of birth and citizenship country or countries.
 */
export interface IndividualDetails1 {
  dob?: DateOfBirth
  citizenCountry?: CitizenshipCountries
  [k: string]: unknown
}
/**
 * Details of individuals whose identity could not be confirmed.
 */
export interface UnidentifiedPerson {
  descOfPerson: DescriptionOfUnidentifiedPerson
  descOfDocs?: Documentations1
  [k: string]: unknown
}
/**
 * Details of a transaction or activity related to the suspicious matter.
 */
export interface TransactionOrActivityDetail {
  txnDate: TransactionDate
  txnType: TransactionTypeCode
  txnTypeOther?: OtherTransactionType
  tfrType?: TransferType
  txnCompleted?: TransactionCompleted
  txnRefNo?: TransactionReferenceNumber
  txnAmount: TotalTransactionAmount
  cashAmount?: CashAmount
  foreignCurr?: ForeignCurrency
  digitalCurrency?: DigitalCurrency
  senderDrawerIssuer?: SenderDrawerIssuer
  payee?: Payee
  beneficiary?: Beneficiary
  otherInstitution?: OtherInstitution
  [k: string]: unknown
}
/**
 * Indicates whether the transfer involved money or property.
 */
export interface TransferType {
  money?: Money
  property?: Property
  [k: string]: unknown
}
/**
 * A currency code paired with an amount in its native currency.
 */
export interface CurrencyAndAmount {
  currency: CurrencyCode
  amount: Amount
  [k: string]: unknown
}
/**
 * Details of a digital currency, including code, name, units, backing asset, fiat value, and optional blockchain transaction ID.
 */
export interface DigitalCurrencyDetail {
  code: Code
  description: Description
  numberOfUnits: NumberOfUnits
  backingAsset?: BackingAsset
  fiatCurrencyAmount?: CurrencyAndAmount
  blockchainTransactionId?: BlockchainTransactionId
  [k: string]: unknown
}
/**
 * Details of the source of the funds involved in a suspicious transaction or activity, if any
 */
export interface SenderDrawerIssuer1 {
  sameAsSuspPerson?: SameAsSuspiciousPerson
  sameAsOtherPerson?: SameAsOtherPerson
  other?: OtherPerson
  sendingInstitution?: SendingInstitution
  [k: string]: unknown
}
/**
 * Use this when the sender/drawer/issuer is a person or organisation to which this suspicious matter relates.
 */
export interface SameAsSuspiciousPerson {
  'Reference Id': ReferenceId
  [k: string]: unknown
}
/**
 * Use this when the sender/drawer/issuer is another party involved in this suspicious matter.
 */
export interface SameAsOtherPerson {
  'Reference Id': ReferenceId1
  [k: string]: unknown
}
/**
 * Use this sequence when the sender/drawer/issuer is neither a person or organisation to which this suspicious matter relates or another party involved in this suspicious matter.
 */
export interface OtherPerson {
  fullName?: Name
  mainAddress?: MainAddress2
  postalAddress?: OtherAddress2
  phone?: PhoneNumber
  email?: EmailAddress
  account?: Accounts2
  digitalCurrencyWallet?: DigitalCurrencyWalletAddresses2
  [k: string]: unknown
}
/**
 * The full street address of the person's residential address ororganisation's business address; or as much of the address as known. This address cannot be a post box or similar address.
 */
export interface MainAddress2 {
  addr?: StreetAddress
  suburb?: SuburbTownCity
  state?: StateOrProvince
  postcode?: Postcode
  country?: CountryName
  [k: string]: unknown
}
/**
 * Any other address associated with the person or organisation; or as much of the address as known. This address can be a street or post box address.
 */
export interface OtherAddress2 {
  addr?: StreetAddress
  suburb?: SuburbTownCity
  state?: StateOrProvince
  postcode?: Postcode
  country?: CountryName
  [k: string]: unknown
}
/**
 * Details of an institution and its branch location.
 */
export interface InstitutionWithBranch {
  name: InstitutionName
  branch: BranchName
  country?: InstitutionCountry
  [k: string]: unknown
}
/**
 * Details of the destination of the funds in relation to a payee, if any.
 */
export interface Payee1 {
  sameAsSuspPerson?: SameAsSuspiciousPerson1
  sameAsOtherPerson?: SameAsOtherPerson1
  other?: OtherPerson1
  receivingInstitution?: ReceivingInstitution
  [k: string]: unknown
}
/**
 * Use this when the sender/drawer/issuer is a person or organisation to which this suspicious matter relates.
 */
export interface SameAsSuspiciousPerson1 {
  'Reference Id': ReferenceId2
  [k: string]: unknown
}
/**
 * Use this when the sender/drawer/issuer is another party involved in this suspicious matter.
 */
export interface SameAsOtherPerson1 {
  'Reference Id': ReferenceId3
  [k: string]: unknown
}
/**
 * Use this sequence when the sender/drawer/issuer is neither a person or organisation to which this suspicious matter relates or another party involved in this suspicious matter.
 */
export interface OtherPerson1 {
  fullName?: Name
  mainAddress?: MainAddress3
  postalAddress?: OtherAddress3
  phone?: PhoneNumber
  email?: EmailAddress
  account?: Accounts3
  digitalCurrencyWallet?: DigitalCurrencyWalletAddresses3
  [k: string]: unknown
}
/**
 * The full street address of the person's residential address ororganisation's business address; or as much of the address as known. This address cannot be a post box or similar address.
 */
export interface MainAddress3 {
  addr?: StreetAddress
  suburb?: SuburbTownCity
  state?: StateOrProvince
  postcode?: Postcode
  country?: CountryName
  [k: string]: unknown
}
/**
 * Any other address associated with the person or organisation; or as much of the address as known. This address can be a street or post box address.
 */
export interface OtherAddress3 {
  addr?: StreetAddress
  suburb?: SuburbTownCity
  state?: StateOrProvince
  postcode?: Postcode
  country?: CountryName
  [k: string]: unknown
}
/**
 * Details of the destination of the funds in relation to a beneficiary, if any.
 */
export interface Beneficiary1 {
  sameAsSuspPerson?: SameAsSuspiciousPerson2
  sameAsOtherPerson?: SameAsOtherPerson2
  other?: OtherPerson2
  receivingInstitution?: ReceivingInstitution1
  [k: string]: unknown
}
/**
 * Use this when the sender/drawer/issuer is a person or organisation to which this suspicious matter relates.
 */
export interface SameAsSuspiciousPerson2 {
  'Reference Id': ReferenceId4
  [k: string]: unknown
}
/**
 * Use this when the sender/drawer/issuer is another party involved in this suspicious matter.
 */
export interface SameAsOtherPerson2 {
  'Reference Id': ReferenceId5
  [k: string]: unknown
}
/**
 * Use this sequence when the sender/drawer/issuer is neither a person or organisation to which this suspicious matter relates or another party involved in this suspicious matter.
 */
export interface OtherPerson2 {
  fullName?: Name
  mainAddress?: MainAddress4
  postalAddress?: OtherAddress4
  phone?: PhoneNumber
  email?: EmailAddress
  account?: Accounts4
  digitalCurrencyWallet?: DigitalCurrencyWalletAddresses4
  [k: string]: unknown
}
/**
 * The full street address of the person's residential address ororganisation's business address; or as much of the address as known. This address cannot be a post box or similar address.
 */
export interface MainAddress4 {
  addr?: StreetAddress
  suburb?: SuburbTownCity
  state?: StateOrProvince
  postcode?: Postcode
  country?: CountryName
  [k: string]: unknown
}
/**
 * Any other address associated with the person or organisation; or as much of the address as known. This address can be a street or post box address.
 */
export interface OtherAddress4 {
  addr?: StreetAddress
  suburb?: SuburbTownCity
  state?: StateOrProvince
  postcode?: Postcode
  country?: CountryName
  [k: string]: unknown
}
/**
 * Most likely offence linked to the matter, plus previous or other agency reports.
 */
export interface AdditionalDetails {
  offence: OffenceType
  prevReported?: PreviousOrOtherAgencyReports
  otherAusGov?: OtherAustralianGovernmentAgency
  [k: string]: unknown
}
/**
 * List the date and reference number of any previous suspicious matter reports given to AUSTRAC relating to the person(s) or organisation(s) in which the suspicious matter relates.
 */
export interface PreviousOrOtherAgencyReports1 {
  prevReportDate: PreviousReportDate
  prevReportRef?: PreviousReportReference
  [k: string]: unknown
}
/**
 * List other Australian government bodies the suspicious matter has been or will be reported to.
 */
export interface OtherAustralianGovernmentAgency1 {
  name: Name
  address: AddressWithoutCountry
  dateReported: AustracDate
  infoProvided: InformationProvided
  [k: string]: unknown
}
/**
 * Details of a single suspicious matter, including parties, activities, and reasons.
 */
export interface SuspiciousMatterReport1 {
  header: ReportHeader
  smDetails: SuspiciousMatterDetails
  suspGrounds: SuspGrounds
  suspPerson?: SuspiciousPersonOrOrganisation[]
  otherPerson?: OtherRelatedPersonOrOrganisation[]
  unidentPerson?: UnidentifiedPerson[]
  txnDetail?: TransactionOrActivityDetail[]
  additionalDetails: AdditionalDetails
  [k: string]: unknown
}
/**
 * Administrative and submission handling information for the SMR.
 */
export interface ReportHeader1 {
  reReportRef?: ReportingEntityReference
  interceptFlag?: InterceptFlag
  reportingBranch: ReportingBranchInformation
  [k: string]: unknown
}
/**
 * Summary of services related to the suspicious activity and reasons for suspicion.
 */
export interface SuspiciousMatterDetails1 {
  designatedSvc: DesignatedServices
  designatedSvcProvided?: DesignatedServicesProvided
  designatedSvcRequested?: DesignatedServicesRequested
  designatedSvcEnquiry?: DesignatedServicesEnquiry
  suspReasons: SuspicionReason
  grandTotal: TotalValue
  [k: string]: unknown
}
/**
 * Details of the main person or organisation to which the suspicious matter relates.
 */
export interface SuspiciousPersonOrOrganisation1 {
  fullName?: Name
  altName?: AlternativeName
  mainAddress?: MainAddress
  postalAddress?: OtherAddress
  phone?: PhoneNumbers
  email?: EmailAddresses
  account?: Accounts
  digitalCurrencyWallet?: DigitalCurrencyWalletAddresses
  indOcc?: IndustryOrOccupation
  abn?: AustralianBusinessNumber
  acn?: AustralianCompanyNumber
  arbn?: AustralianRegisteredBodyNumber
  businessDetails?: BusinessDetails
  individualDetails?: IndividualDetails
  identification?: IdentificationDocument
  electDataSrc?: ElectronicDataSource
  deviceIdentifier?: DeviceIdentifier
  personIsCustomer?: PersonIsCustomer
  [k: string]: unknown
}
/**
 * Details of other parties related to the suspicious matter.
 */
export interface OtherRelatedPersonOrOrganisation1 {
  fullName?: Name
  altName?: AlternativeName1
  mainAddress?: MainAddress1
  postalAddress?: OtherAddress1
  phone?: PhoneNumbers1
  email?: EmailAddresses1
  account?: Accounts1
  digitalCurrencyWallet?: DigitalCurrencyWalletAddresses1
  indOcc?: IndustryOrOccupation
  abn?: AustralianBusinessNumber
  acn?: AustralianCompanyNumber
  arbn?: AustralianRegisteredBodyNumber
  businessDetails?: BusinessDetails1
  individualDetails?: IndividualDetails1
  identification?: IdentificationDocument2
  electDataSrc?: ElectronicDataSource2
  deviceIdentifier?: DeviceIdentifier2
  personIsCustomer?: PersonIsCustomer1
  partyIsCustomer?: PartyIsCustomer
  partyIsAgent?: PartyIsAgent
  relationship?: RelationshipToSuspiciousPerson
  evidence?: EvidenceOfRelationship
  [k: string]: unknown
}
/**
 * Details of individuals whose identity could not be confirmed.
 */
export interface UnidentifiedPerson1 {
  descOfPerson: DescriptionOfUnidentifiedPerson
  descOfDocs?: Documentations1
  [k: string]: unknown
}
/**
 * List the date and reference number of any previous suspicious matter reports given to AUSTRAC relating to the person(s) or organisation(s) in which the suspicious matter relates.
 */
export interface PreviousOrOtherAgencyReports2 {
  prevReportDate: PreviousReportDate
  prevReportRef?: PreviousReportReference
  [k: string]: unknown
}
/**
 * List other Australian government bodies the suspicious matter has been or will be reported to.
 */
export interface OtherAustralianGovernmentAgency2 {
  name: Name
  address: AddressWithoutCountry
  dateReported: AustracDate
  infoProvided: InformationProvided
  [k: string]: unknown
}
/**
 * Most likely offence linked to the matter, plus previous or other agency reports.
 */
export interface AdditionalDetails1 {
  offence: OffenceType
  prevReported?: PreviousOrOtherAgencyReports
  otherAusGov?: OtherAustralianGovernmentAgency
  [k: string]: unknown
}
/**
 * Details of a transaction or activity related to the suspicious matter.
 */
export interface TransactionOrActivityDetail1 {
  txnDate: TransactionDate
  txnType: TransactionTypeCode
  txnTypeOther?: OtherTransactionType
  tfrType?: TransferType
  txnCompleted?: TransactionCompleted
  txnRefNo?: TransactionReferenceNumber
  txnAmount: TotalTransactionAmount
  cashAmount?: CashAmount
  foreignCurr?: ForeignCurrency
  digitalCurrency?: DigitalCurrency
  senderDrawerIssuer?: SenderDrawerIssuer
  payee?: Payee
  beneficiary?: Beneficiary
  otherInstitution?: OtherInstitution
  [k: string]: unknown
}
/**
 * Details of the source of the funds involved in a suspicious transaction or activity, if any
 */
export interface SenderDrawerIssuer2 {
  sameAsSuspPerson?: SameAsSuspiciousPerson
  sameAsOtherPerson?: SameAsOtherPerson
  other?: OtherPerson
  sendingInstitution?: SendingInstitution
  [k: string]: unknown
}
/**
 * Details of the destination of the funds in relation to a payee, if any.
 */
export interface Payee2 {
  sameAsSuspPerson?: SameAsSuspiciousPerson1
  sameAsOtherPerson?: SameAsOtherPerson1
  other?: OtherPerson1
  receivingInstitution?: ReceivingInstitution
  [k: string]: unknown
}
/**
 * Details of the destination of the funds in relation to a beneficiary, if any.
 */
export interface Beneficiary2 {
  sameAsSuspPerson?: SameAsSuspiciousPerson2
  sameAsOtherPerson?: SameAsOtherPerson2
  other?: OtherPerson2
  receivingInstitution?: ReceivingInstitution1
  [k: string]: unknown
}
/**
 * Information on the organisation’s structure, beneficial owners, office holders, and incorporation country.
 */
export interface BusinessDetails2 {
  businessStruct?: BusinessStructure
  benName?: BeneficialOwners
  holderName?: OfficeHolders
  incorpCountry?: CountryName
  documentation?: Documentations
  [k: string]: unknown
}
/**
 * Date of birth and citizenship country or countries.
 */
export interface IndividualDetails2 {
  dob?: DateOfBirth
  citizenCountry?: CitizenshipCountries
  [k: string]: unknown
}
export interface Address {
  addr: StreetAddress
  suburb: SuburbTownCity
  state?: StateOrProvince
  postcode?: Postcode
  country: CountryName
  [k: string]: unknown
}
export interface AddressBasic {
  addr: StreetAddress
  suburb?: SuburbTownCity
  state?: StateOrProvince
  postcode?: Postcode
  country?: CountryName
  [k: string]: unknown
}
/**
 * Flexible address format allowing partial or complete address details.
 */
export interface Address1 {
  addr?: StreetAddress
  suburb?: SuburbTownCity
  state?: StateOrProvince
  postcode?: Postcode
  country?: CountryName
  [k: string]: unknown
}
export interface AddressWithType {
  type: AddrType
  addr: StreetAddress
  suburb?: SuburbTownCity
  state?: StateOrProvince
  postcode?: Postcode
  country: CountryName
  [k: string]: unknown
}
/**
 * Australian domestic address details where the country is assumed to be Australia.
 */
export interface AddressWithoutCountry1 {
  addr: StreetAddress
  suburb: SuburbTownCity
  state: StateOrProvince
  postcode: Postcode
  [k: string]: unknown
}
export interface AccountOptBSB {
  title: AccountTitle
  bsb?: BankStateBranchNumber
  number: AccountNumber
  [k: string]: unknown
}
/**
 * Basic details of an account involved in a suspicious transaction or activity where all fields are optional.
 */
export interface AccountAllOptionalFields1 {
  title?: AccountTitle
  bsb?: BankStateBranchNumber
  number?: AccountNumber
  [k: string]: unknown
}
export interface AccountNoBSB {
  title: AccountTitle
  number: AccountNumber
  [k: string]: unknown
}
export interface AccountNoTitle {
  bsb?: BankStateBranchNumber
  number: AccountNumber
  [k: string]: unknown
}
export interface AccountBrief {
  bsb?: BankStateBranchNumber
  number?: AccountNumber
  [k: string]: unknown
}
export interface IdentificationMandatoryNumber {
  type: IdentificationType3
  typeOther?: OtherDescription2
  number: IdentificationNumber
  issuer?: IdentificationIssuer
  country?: CountryName
  [k: string]: unknown
}
export interface IdentificationNoCountry {
  type: IdentificationType4
  typeOther?: OtherDescription3
  number?: IdentificationNumber
  issuer?: IdentificationIssuer
  [k: string]: unknown
}
/**
 * Codes or descriptions for an individual's occupation or an organisation's industry.
 */
export interface IndustryOrOccupation1 {
  type: IndustryOccupationType
  code?: IndustryOccupationCode
  description?: IndustryOccupationDescription
  [k: string]: unknown
}
/**
 * Type and unique identifier of a device or system used.
 */
export interface DeviceIdentifier3 {
  type: DeviceType
  typeOther?: OtherDescription1
  identifier: IdentificationNumber
  [k: string]: unknown
}
export interface PlaceOfBirth {
  town?: SuburbTownCity
  country?: CountryName
  [k: string]: unknown
}
/**
 * A currency code paired with an amount in its native currency.
 */
export interface CurrencyAndAmount1 {
  currency: CurrencyCode
  amount: Amount
  [k: string]: unknown
}
export interface AudAmount {
  currency: CurrencyCode
  amount: Amount
  [k: string]: unknown
}
export interface InstitutionFull {
  code: InstnCode
  name: InstitutionName
  addr: StreetAddress
  acctNumber: AccountNumber
  branchId: BranchIdentifier
  [k: string]: unknown
}
export interface InstitutionBrief {
  /**
   * Mutually exclusive: Either 'code' OR ('name', 'city', 'country') may be provided, but not both options together.
   */
  code?: string
  name?: InstitutionName2
  /**
   * May only be provided when 'code' is absent.
   */
  city?: string
  country?: InstitutionCountry2
  [k: string]: unknown
}
export interface InstitutionWithAccount {
  acctNumber?: AccountNumber
  name: InstitutionName
  city: InstnCity
  country?: InstitutionCountry
  [k: string]: unknown
}
/**
 * Details of an institution and its branch location.
 */
export interface InstitutionWithBranch1 {
  name: InstitutionName
  branch: BranchName
  country?: InstitutionCountry
  [k: string]: unknown
}
export interface Branch {
  branchId?: BranchIdentifier
  name: BranchName
  address: AddressWithoutCountry
  [k: string]: unknown
}
/**
 * Branch, office, outlet, or location details of the reporting entity.
 */
export interface BranchOrLocation {
  branchId?: BranchIdentifier
  name: BranchName
  address?: AddressWithoutCountry
  [k: string]: unknown
}
export interface BranchOptCountry {
  branchId?: BranchIdentifier
  fullName?: BranchName
  mainAddress?: MainAddress5
  [k: string]: unknown
}
/**
 * The full street address of the person's residential address ororganisation's business address; or as much of the address as known. This address cannot be a post box or similar address.
 */
export interface MainAddress5 {
  addr: StreetAddress
  suburb?: SuburbTownCity
  state?: StateOrProvince
  postcode?: Postcode
  country?: CountryName
  [k: string]: unknown
}
export interface AusBranch {
  bsb?: BankStateBranchNumber2
  branchId?: BranchIdentifier2
  name?: BranchName
  [k: string]: unknown
}
/**
 * Indicates if the transfer involved money or property.
 */
export interface TransferType1 {
  money?: Money
  property?: Property
  [k: string]: unknown
}
export interface NonCashAmount {
  amount: Amount
  [k: string]: unknown
}
export interface NonCashAmountCheque {
  amount: Amount
  cheque: Cheque
  [k: string]: unknown
}
export interface Cheque {
  drawerName: Name
  payeeName: Name
  [k: string]: unknown
}
export interface NonCashAmountChequeOptional {
  amount: Amount
  cheque?: Cheque
  [k: string]: unknown
}
export interface NonCashAmountECurrency {
  amount: Amount
  eCurrency: ECurrency[]
  [k: string]: unknown
}
export interface ECurrency {
  description: string
  denomination?: {
    currencyDesc: string
    amount: Amount
    [k: string]: unknown
  }
  backingAsset?: BackingAsset1
  [k: string]: unknown
}
/**
 * The asset or currency that the digital currency is backed by, e.g. USD, EUR.
 */
export interface BackingAsset1 {
  /**
   * Mutually exclusive: Either 'assetType' or 'otherDesc' may be provided, but not both at the same time.
   */
  assetType?: 'B' | 'P'
  /**
   * May only be provided when 'assetType' is absent.
   */
  otherDesc?: string
  [k: string]: unknown
}
export interface NonCashAmountOther {
  amount: Amount
  desc: string
  cheque?: Cheque[]
  [k: string]: unknown
}
/**
 * Details of a digital currency, including code, name, units, backing asset, fiat value, and optional blockchain transaction ID.
 */
export interface DigitalCurrencyDetail1 {
  code: Code
  description: Description
  numberOfUnits: NumberOfUnits
  backingAsset?: BackingAsset
  fiatCurrencyAmount?: CurrencyAndAmount
  blockchainTransactionId?: BlockchainTransactionId
  [k: string]: unknown
}
/**
 * Reference to another party already described in the report.
 */
export interface PartyReference {
  '@refId': string
  [k: string]: unknown
}
