{
  "name": "tarpon",
  "version": "1.0.0",
  "description": "![tarpons](https://github.com/flagright/tarpon/blob/main/tarpons.png)",
  "main": "index.js",
  "scripts": {
    "preinstall": "cd ../lib && corepack enable && yarn",
    "all": "npm-run-all -l -s",
    "parallel": "npm-run-all -l -p",
    "aws-login": "npx ts-node ../lib/scripts/aws-login.ts",
    "build": "yarn openapi:build && yarn cdktf:init && node scripts/esbuild.js",
    "build:local": "ENV=local && yarn build",
    "build:fincen": "ts-node src/services/sar/generators/US/SAR/scripts/build-fincen.ts",
    "clear": "rm -rf ./dist cdk.out",
    "synth": "cdk synth --quiet",
    "cdktf:init": "([ -d \".gen\" ] && echo \"CDKTF already initialised\" || cdktf get --quiet)",
    "synth:ci": "INFRA_CI=true; ENV=local && cdk synth --quiet local-tarpon && yarn cdktf:init",
    "synth:local": "ENV=local && yarn openapi:augment && cdk synth --quiet local-tarpon && yarn cdktf:init",
    "synth:dev": "ENV=dev && yarn openapi:augment && cdk synth --quiet dev-tarpon && yarn cdktf:init",
    "synth:dev:user": "ENV=dev:user && yarn openapi:augment && cdk synth --quiet dev-tarpon-$QA_SUBDOMAIN",
    "synth:sandbox": "ENV=sandbox && yarn openapi:augment && cdk synth --quiet sandbox-tarpon",
    "synth:prod:asia-1": "ENV=prod:asia-1 && yarn openapi:augment && cdk synth --quiet prod-tarpon",
    "synth:prod:asia-2": "ENV=prod:asia-2 && yarn openapi:augment && cdk synth --quiet prod-tarpon",
    "synth:prod:eu-1": "ENV=prod:eu-1 && yarn openapi:augment && cdk synth --quiet prod-tarpon",
    "synth:prod:eu-2": "ENV=prod:eu-2 && yarn openapi:augment && cdk synth --quiet prod-tarpon",
    "synth:prod:au-1": "ENV=prod:au-1 && yarn openapi:augment && cdk synth --quiet prod-tarpon",
    "synth:prod:me-1": "ENV=prod:me-1 && yarn openapi:augment && cdk synth --quiet prod-tarpon",
    "synth:prod:us-1": "ENV=prod:us-1 && yarn openapi:augment && cdk synth --quiet prod-tarpon",
    "deploy:dev": "ENV=dev && cdk deploy dev-tarpon --require-approval=never && yarn cdktf:init && cdktf deploy --quiet dev-tarpon --auto-approve",
    "deploy:dev:clean": "yarn clear && yarn && ENV=dev yarn build && yarn synth:dev && yarn deploy:dev",
    "deploy:qa": "QA_SUBDOMAIN=${QA_SUBDOMAIN:-qa$(git rev-parse --abbrev-ref HEAD | shasum | head -c5)} && yarn clear && yarn && ENV=dev yarn build && yarn synth:dev:user && ENV=dev:user cdk deploy dev-tarpon-$QA_SUBDOMAIN --require-approval never",
    "destroy:qa": "yarn clear && yarn && ENV=dev yarn build && ENV=dev yarn openapi:augment && ENV=dev:user cdk destroy dev-tarpon-$QA_SUBDOMAIN --require-approval never -f",
    "deploy:sandbox": "ENV=sandbox && cdk deploy sandbox-tarpon --require-approval=never && yarn cdktf:init && cdktf deploy --quiet sandbox-tarpon --auto-approve",
    "deploy:sandbox:clean": "yarn clear && yarn && yarn build && yarn synth:sandbox && yarn deploy:sandbox",
    "deploy:prod:asia-1": "ENV=prod:asia-1 && cdk deploy prod-tarpon  --require-approval=never",
    "deploy:prod:asia-1:clean": "yarn clear && yanr && yarn build && yarn synth:prod:asia-1 && yarn deploy:prod:asia-1",
    "deploy:prod:asia-2": "ENV=prod:asia-2 && cdk deploy prod-tarpon  --require-approval=never",
    "deploy:prod:asia-2:clean": "yarn clear && yarn && yarn build && yarn synth:prod:asia-2 && yarn deploy:prod:asia-2",
    "deploy:prod:eu-1": "ENV=prod:eu-1 && cdk deploy prod-tarpon  --require-approval=never && yarn cdktf:init && cdktf deploy --quiet prod-tarpon --auto-approve",
    "deploy:prod:eu-1:clean": "yarn clear && yarn && yarn build && yarn synth:prod:eu-1 && yarn deploy:prod:eu-1",
    "deploy:prod:eu-2": "ENV=prod:eu-2 && cdk deploy prod-tarpon --require-approval=never",
    "deploy:prod:eu-2:clean": "yarn clear && yarn && yarn build && yarn synth:prod:eu-2 && yarn deploy:prod:eu-2",
    "deploy:prod:au-1": "ENV=prod:au-1 && cdk deploy prod-tarpon  --require-approval=never",
    "deploy:prod:au-1:clean": "yarn clear && yarn && yarn build && yarn synth:prod:au-1 && yarn deploy:prod:au-1",
    "deploy:prod:me-1": "ENV=prod:me-1 && cdk deploy prod-tarpon  --require-approval=never",
    "deploy:prod:me-1:clean": "yarn clear && yarn && yarn build && yarn synth:prod:me-1 && yarn deploy:prod:me-1",
    "deploy:prod:us-1": "ENV=prod:us-1 && cdk deploy prod-tarpon  --require-approval=never",
    "deploy:prod:us-1:clean": "yarn clear && yarn && yarn build && yarn synth:prod:us-1 && yarn deploy:prod:us-1",
    "deploy:test:canary": "ENV=dev && TYPE=canary && yarn clear && yarn && yarn build && cdk synth --quiet dev-tarpon-test-canary && cdk deploy --quiet dev-tarpon-test-canary --auto-approve --require-approval=never",
    "delete:test:canary": "ENV=dev && TYPE=canary && cdk destroy --quiet dev-tarpon-test-canary --force",
    "test": "jest --forceExit --config jest.config.ts",
    "test:coverage:comment": " ts-node scripts/coverage-report/index.ts",
    "test:ci": "EXEC_SOURCE=CI NODE_OPTIONS='--max-old-space-size=12288' npm run test -- --silent --ci --coverage --cacheDirectory ~/.jest-cache",
    "test:llm": "EXEC_SOURCE=CI ENABLE_SECRETS_MANAGER=true AWS_REGION=eu-central-1 npm run test -- --testMatch '<rootDir>/**/__tests__/**/*.llm.ts?(x)' --ci",
    "test:silent": "yarn test -- --silent",
    "test:watch": "yarn test -- --watch",
    "format": "prettier --write . && yarn openapi:format",
    "format:check": "prettier --check .",
    "lint": "NODE_OPTIONS='--max-old-space-size=6144' eslint .",
    "lint:ci": "NODE_OPTIONS='--max-old-space-size=12288' eslint .",
    "tsc": "NODE_OPTIONS='--max-old-space-size=6144' tsc --noEmit",
    "tsc:ci": "NODE_OPTIONS='--max-old-space-size=12288' tsc --noEmit",
    "tsc:watch": "NODE_OPTIONS='--max-old-space-size=8192' tsc --noEmit --watch",
    "lint:fix": "eslint --fix .",
    "lint-staged": "lint-staged",
    "openapi:build": "scripts/openapi/openapi_generate_sdk.ts",
    "openapi:format": "scripts/openapi/openapi_format.js && prettier --write lib/openapi/**/*.yaml",
    "openapi:prepare": "yarn openapi:format && scripts/openapi/openapi_prepare.js",
    "openapi:publish": "yarn openapi:prepare && scripts/openapi/openapi_publish.js",
    "openapi:augment": "yarn openapi:prepare && lib/openapi/openapi-public-augmentor.ts && lib/openapi/openapi-public-management-augmentor.ts && lib/openapi/openapi-public-device-data-augmentor.ts && lib/openapi/openapi-public-sanctions-augmentor.ts && lib/openapi/openapi-internal-augmentor.ts",
    "start-local-api": "yarn openapi:build && yarn openapi:augment && ENV=local ts-node-dev --transpile-only --inspect=4321 -r tsconfig-paths/register local-api-server.ts --exit-child",
    "recreate-local-ddb": "npm run delete-local-ddb --table=$npm_config_table; npm run create-local-ddb --table=$npm_config_table",
    "create-local-ddb": "aws dynamodb create-table --endpoint-url http://localhost:8000 --table-name $npm_config_table --attribute-definitions AttributeName=PartitionKeyID,AttributeType=S AttributeName=SortKeyID,AttributeType=S --key-schema AttributeName=PartitionKeyID,KeyType=HASH AttributeName=SortKeyID,KeyType=RANGE --provisioned-throughput ReadCapacityUnits=1,WriteCapacityUnits=1 --region=us-east-2",
    "delete-local-ddb": "aws dynamodb delete-table --endpoint-url http://localhost:8000 --table-name $npm_config_table",
    "dev:databases": "docker-compose up",
    "dev:databases:init": "AUTH0_DOMAIN=dev-flagright.eu.auth0.com ENV=local AWS_REGION=eu-central-1 ts-node ./scripts/init-local-db.ts",
    "dev:databases:reset": "rm -rf .local-mongodb-data/ .local-dynamodb-data/ && mkdir .local-mongodb-data && mkdir .local-dynamodb-data",
    "dev:api": "yarn start-local-api",
    "dev:api:public": "API=PUBLIC yarn start-local-api",
    "dev:api:public-management": "API=PUBLIC_MANAGEMENT yarn start-local-api",
    "dev:api:public-device-data": "API=PUBLIC_DEVICE_DATA yarn start-local-api",
    "dev:api:public-sanctions": "API=PUBLIC_SANCTIONS yarn start-local-api",
    "dev:api:console": "API=CONSOLE yarn start-local-api",
    "dev": "ENV=local yarn parallel dev:databases dev:api",
    "_migrator": "ts-node --transpileOnly scripts/migrations/migrator.ts",
    "migration:pre:create": "MIGRATION_TYPE=PRE_DEPLOYMENT ENV=local yarn _migrator create --name $npm_config_name.ts --allow-extension .ts",
    "migration:pre:up": "MIGRATION_TYPE=PRE_DEPLOYMENT yarn _migrator up",
    "migration:pre:down": "MIGRATION_TYPE=PRE_DEPLOYMENT yarn _migrator down",
    "migration:post:create": "MIGRATION_TYPE=POST_DEPLOYMENT ENV=local yarn _migrator create --name $npm_config_name.ts --allow-extension .ts",
    "migration:post:up": "MIGRATION_TYPE=POST_DEPLOYMENT yarn _migrator up",
    "migration:post:down": "MIGRATION_TYPE=POST_DEPLOYMENT yarn _migrator down",
    "migration:sync": "yarn _migrator sync",
    "db:export": "ENV=dev ts-node --transpileOnly scripts/export-anon-tenant-data.ts",
    "qa:clean": "ENV=local ts-node --transpileOnly scripts/qa-stack-cleanup.ts",
    "verify-remote-transactions": "ts-node scripts/debug-rule/verify-remote-transactions.ts",
    "get-qa-api-key": "ts-node --transpileOnly scripts/print-qa-key.ts",
    "get-qa-integration-test-api-key": "ts-node --transpileOnly scripts/print-qa-integration-test-key.ts",
    "cross-tenant-query:dev": "ts-node scripts/cross-tenant-query.ts --env dev",
    "cross-tenant-query:sandbox": "ts-node scripts/cross-tenant-query.ts --env sandbox",
    "cross-tenant-query:prod": "ts-node scripts/cross-tenant-query.ts --env prod",
    "dangerous-nuke-tenant-data": "ts-node scripts/dangerous-nuke-tenant-data.ts",
    "playground": "touch scripts/playground.ts && ENV=local AWS_REGION=eu-central-1 ts-node --transpileOnly scripts/playground.ts",
    "validate:lithuania:str": "SAR_TYPE=STR ts-node --transpileOnly src/services/sar/generators/LT/scripts/validate.ts",
    "validate:lithuania:ctr": "SAR_TYPE=CTR ts-node --transpileOnly src/services/sar/generators/LT/scripts/validate.ts",
    "semgrep": "semgrep scan --config ../rule.yaml --error"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/flagright/tarpon.git"
  },
  "author": "Flagright Data Technologies Inc.",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/flagright/tarpon/issues"
  },
  "homepage": "https://github.com/flagright/tarpon#readme",
  "devDependencies": {
    "@aws-sdk/client-cloudformation": "^3.245.0",
    "@aws-sdk/credential-providers": "^3.382.0",
    "@faker-js/faker": "^7.6.0",
    "@openapitools/openapi-generator-cli": "^2.7.0",
    "@sentry/cli": "^2.28.6",
    "@slack/types": "^2.7.0",
    "@stoplight/cli": "^5.0.722",
    "@tsconfig/node18": "^18.2.1",
    "@types/ajv": "^1.0.0",
    "@types/aws-lambda": "^8.10.89",
    "@types/command-line-args": "^5.2.0",
    "@types/ejs": "^3.1.1",
    "@types/fast-levenshtein": "^0.0.2",
    "@types/fs-extra": "^11.0.1",
    "@types/google-spreadsheet": "^3.3.1",
    "@types/http-errors": "^1.8.2",
    "@types/jest": "^28.1.8",
    "@types/js-yaml": "^4.0.5",
    "@types/jsonwebtoken": "^8.5.8",
    "@types/lodash": "^4.14.180",
    "@types/mkdirp": "^1.0.2",
    "@types/node": "^18.17.14",
    "@types/node-fetch": "^2.6.4",
    "@types/pluralize": "^0.0.30",
    "@types/unidecode": "^0.1.1",
    "@types/uuid": "^8.3.4",
    "@typescript-eslint/eslint-plugin": "^6.6.0",
    "@typescript-eslint/parser": "^6.6.0",
    "aws-cdk": "~2.132.1",
    "aws-cdk-lib": "~2.132.1",
    "aws-sdk-client-mock": "^2.0.1",
    "aws-sdk-client-mock-jest": "^2.0.1",
    "body-parser": "^1.20.0",
    "builtin-modules": "^3.3.0",
    "chalk": "^4.1.2",
    "command-line-args": "^5.2.0",
    "commander": "^9.2.0",
    "constructs": "^10.3.0",
    "dotenv": "^16.0.1",
    "esbuild": "^0.15.13",
    "eslint": "^8.6.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-import": "^2.25.4",
    "eslint-plugin-prettier": "^4.0.0",
    "express": "^4.18.1",
    "express-openapi-validator": "^4.13.8",
    "fs-extra": "^10.1.0",
    "get-port": "^5.1.1",
    "husky": "^8.0.1",
    "jest": "^28.1.3",
    "js-yaml": "^4.1.0",
    "json-schema-to-typescript": "^13.0.1",
    "libxmljs": "^1.0.9",
    "lint-staged": "^13.0.3",
    "mkdirp": "^1.0.4",
    "mockdate": "^3.0.5",
    "npm-run-all": "^4.1.5",
    "octokit": "^2.1.0",
    "prettier": "^2.5.1",
    "prettyjson": "^1.2.5",
    "simple-git": "^3.13.0",
    "source-map-support": "^0.5.21",
    "swagger-routes-express": "^3.3.2",
    "ts-jest": "^28.0.8",
    "ts-loader": "^9.2.6",
    "ts-node": "^10.9.1",
    "ts-node-dev": "^2.0.0",
    "tsconfig-paths": "^4.1.2",
    "typescript": "^5.2.2",
    "typescript-json-schema": "^0.58.1",
    "xsd2jsonschema": "^0.3.7",
    "yaml": "^2.1.1"
  },
  "dependencies": {
    "@actions/core": "^1.10.1",
    "@actions/github": "^6.0.0",
    "@aws-sdk/client-api-gateway": "^3.262.0",
    "@aws-sdk/client-cloudwatch": "^3.301.0",
    "@aws-sdk/client-dynamodb": "^3.535.0",
    "@aws-sdk/client-s3": "^3.481.0",
    "@aws-sdk/client-secrets-manager": "^3.145.0",
    "@aws-sdk/client-sfn": "^3.229.0",
    "@aws-sdk/client-sns": "^3.202.0",
    "@aws-sdk/client-sqs": "^3.145.0",
    "@aws-sdk/client-sts": "^3.382.0",
    "@aws-sdk/lib-dynamodb": "^3.183.0",
    "@aws-sdk/lib-storage": "^3.382.0",
    "@aws-sdk/middleware-retry": "^3.374.0",
    "@aws-sdk/s3-request-presigner": "^3.382.0",
    "@aws-sdk/signature-v4-crt": "^3.378.0",
    "@aws-sdk/util-arn-parser": "^3.47.1",
    "@aws-sdk/util-dynamodb": "^3.382.0",
    "@databricks/sql": "1.7.0",
    "@fast-csv/format": "^4.3.5",
    "@fast-csv/parse": "^4.3.6",
    "@flagright/lib": "link:../lib",
    "@mergeapi/merge-sdk-typescript": "^3.0.10",
    "@react-awesome-query-builder/core": "^6.4.2",
    "@sentry/esbuild-plugin": "^2.10.2",
    "@sentry/integrations": "^7.83.0",
    "@sentry/node": "^7.91.0",
    "@sentry/serverless": "^7.91.0",
    "@slack/web-api": "^6.7.2",
    "@slack/webhook": "^6.1.0",
    "@smithy/util-retry": "^2.0.5",
    "@types/aws-synthetics-puppeteer": "^3.1.9",
    "@types/faker": "^6.6.9",
    "@types/flat": "^5.0.2",
    "@types/html-to-text": "^9.0.0",
    "@types/isomorphic-fetch": "^0.0.36",
    "@types/newman": "^5.3.1",
    "@types/progress": "^2.0.5",
    "@types/stopword": "^2.0.3",
    "abortcontroller-polyfill": "^1.7.5",
    "ajv": "8.11.0",
    "auth0": "^4.2.0",
    "aws-sdk": "^2.1492.0",
    "aws-xray-sdk": "^3.5.0",
    "aws-xray-sdk-core": "^3.3.8",
    "axios": "^1.6.0",
    "base-x": "^3.0.9",
    "cdktf": "^0.18.2",
    "cdktf-cli": "^0.18.2",
    "coverage-diff": "^3.2.0",
    "currency-symbol-map": "^5.1.0",
    "dataloader": "^2.2.2",
    "deep-object-diff": "^1.1.7",
    "deepmerge": "^4.3.1",
    "ejs": "^3.1.8",
    "exponential-backoff": "^3.1.1",
    "fast-geoip": "^1.1.67",
    "fast-levenshtein": "^3.0.0",
    "fast-xml-parser": "^4.2.5",
    "fetch-retry": "^5.0.6",
    "flat": "^5.0.2",
    "fp-ts": "^2.11.8",
    "google-spreadsheet": "^3.3.0",
    "handlebars": "^4.7.7",
    "html-to-text": "^9.0.5",
    "http-errors": "^2.0.0",
    "ibankit": "^1.5.0",
    "ibantools": "^4.2.2",
    "io-ts": "^2.2.16",
    "io-ts-reporters": "^2.0.1",
    "isomorphic-fetch": "^3.0.0",
    "json-logic-engine": "^1.3.1",
    "jsonwebtoken": "^9.0.2",
    "jwks-rsa": "^2.0.5",
    "lodash": "^4.17.21",
    "memoize-one": "^6.0.0",
    "mongodb": "5.9.2",
    "nanoid": "^3.3.4",
    "newman": "^5.3.2",
    "node-fetch": "^2.6.12",
    "openai": "^3.2.1",
    "p-limit": "^3.0.0",
    "p-map": "^4.0.0",
    "pluralize": "^8.0.0",
    "postman-collection": "^4.1.6",
    "safe-stable-stringify": "^2.4.3",
    "ssh2-sftp-client": "^10.0.3",
    "stopword": "^3.0.1",
    "timeout-signal": "^1.1.0",
    "umzug": "^3.2.1",
    "unidecode": "^0.1.8",
    "unique-names-generator": "^4.6.0",
    "uuid": "^8.3.2",
    "winston": "^3.8.1"
  },
  "lint-staged": {
    "**/*.{js,ts}": [
      "prettier --write",
      "eslint --fix",
      "yarn run semgrep"
    ],
    "**/*.yaml": [
      "yarn run openapi:format"
    ],
    "!(**/*.{js,ts,yaml,lock})": [
      "prettier --write"
    ]
  },
  "engines": {
    "node": "18.x",
    "yarn": "4.x"
  },
  "packageManager": "yarn@4.0.2"
}
