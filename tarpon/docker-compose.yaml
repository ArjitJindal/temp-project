services:
  dynamodb:
    image: amazon/dynamodb-local
    container_name: local-dynamodb
    hostname: dynamodb
    restart: always
    volumes:
      - dynamo_data:/home/dynamodblocal/data
    ports:
      - 8000:8000
    user: root # data folder is owned by root user - this is the simplest work-around
    command: '-jar DynamoDBLocal.jar -sharedDb -dbPath /home/dynamodblocal/data'

  mongodb:
    image: mongodb/mongodb-atlas-local:8.0
    container_name: local-mongodb
    hostname: mongodb
    restart: always
    volumes:
      - mongo_data:/data/db
      - mongo_conf:/data/configdb
    ports:
      - 27018:27017

  clickhouse-server:
    image: clickhouse/clickhouse-server:25.1.2
    container_name: local-clickhouse-server
    ports:
      - '8123:8123'
      - '9000:9000'
    volumes:
      - clickhouse_data:/var/lib/clickhouse-server
    privileged: true

  swagger-ui:
    image: swaggerapi/swagger-ui
    container_name: local-swagger-ui
    ports:
      - '8080:8080'
    environment:
      - SWAGGER_JSON=/openapi.yaml
      - SWAGGER_UI_PERSIST_AUTHORIZATION=true
      - SWAGGER_UI_WATCH=true # Enable auto-reload
      - QUERY_CONFIG_ENABLED=true
      - WITH_CREDENTIALS=true
      - PERSIST_AUTHORIZATION=true
      - CORS=true
      - CORS_ALLOWED_ORIGINS=*
      - CORS_ALLOW_CREDENTIALS=true
    volumes:
      - ./lib/openapi/internal/temp-merged-spec.yaml:/openapi.yaml:ro
  opensearch-node1:
    image: opensearchproject/opensearch:latest
    container_name: opensearch-node1
    environment:
      - cluster.name=opensearch-cluster # Name the cluster
      - node.name=opensearch-node1 # Name the node that will run in this container
      - discovery.seed_hosts=opensearch-node1,opensearch-node2,opensearch-node3
      - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2,opensearch-node3
      - bootstrap.memory_lock=true # Disable JVM heap memory swapping
      - 'OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m' # Set min and max JVM heap sizes to at least 50% of system RAM
      - 'DISABLE_INSTALL_DEMO_CONFIG=true' # Prevents execution of bundled demo script which installs demo certificates and security configurations to OpenSearch
      - 'DISABLE_SECURITY_PLUGIN=true' # Disables Security plugin
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    volumes:
      - opensearch-data1:/usr/share/opensearch/data # Creates volume called opensearch-data1 and mounts it to the container
    ports:
      - 9200:9200 # REST API
      - 9600:9600 # Performance Analyzer
    networks:
      - opensearch-net # All of the containers will join the same Docker bridge network
  opensearch-node2:
    image: opensearchproject/opensearch:latest
    container_name: opensearch-node2
    environment:
      - cluster.name=opensearch-cluster # Name the cluster
      - node.name=opensearch-node2 # Name the node that will run in this container
      - discovery.seed_hosts=opensearch-node1,opensearch-node2,opensearch-node3
      - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2,opensearch-node3
      - bootstrap.memory_lock=true # Disable JVM heap memory swapping
      - 'OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m' # Set min and max JVM heap sizes to at least 50% of system RAM
      - 'DISABLE_INSTALL_DEMO_CONFIG=true' # Prevents execution of bundled demo script which installs demo certificates and security configurations to OpenSearch
      - 'DISABLE_SECURITY_PLUGIN=true' # Disables Security plugin
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    volumes:
      - opensearch-data2:/usr/share/opensearch/data # Creates volume called opensearch-data2 and mounts it to the container
    networks:
      - opensearch-net # All of the containers will join the same Docker bridge network

  opensearch-node3:
    image: opensearchproject/opensearch:latest
    container_name: opensearch-node3
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node3
      - discovery.seed_hosts=opensearch-node1,opensearch-node2,opensearch-node3
      - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2,opensearch-node3
      - bootstrap.memory_lock=true
      - 'OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m'
      - 'DISABLE_INSTALL_DEMO_CONFIG=true'
      - 'DISABLE_SECURITY_PLUGIN=true'
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch-data3:/usr/share/opensearch/data
    networks:
      - opensearch-net
  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:latest
    container_name: opensearch-dashboards
    ports:
      - 5601:5601 # Map host port 5601 to container port 5601
    expose:
      - '5601' # Expose port 5601 for web access to OpenSearch Dashboards
    environment:
      - 'OPENSEARCH_HOSTS=["http://opensearch-node1:9200","http://opensearch-node2:9200"]'
      - 'DISABLE_SECURITY_DASHBOARDS_PLUGIN=true' # disables security dashboards plugin in OpenSearch Dashboards
    networks:
      - opensearch-net

networks:
  opensearch-net:

volumes:
  dynamo_data:
  mongo_data:
  mongo_conf:
  clickhouse_data:
  opensearch-data1:
  opensearch-data2:
  opensearch-data3:
