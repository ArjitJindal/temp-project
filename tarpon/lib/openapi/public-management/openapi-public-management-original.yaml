openapi: 3.0.0
info:
  title: Flagright Management API
  version: '1.0'
  description: Flagright is a fully-managed, API-first compliance-as-a-service
    solution. This API provides for programmatic access to the Flagright no-code
    back office portal. The Flagright Management API is organized around REST.
    Our API has predictable resource-oriented URLs, accepts JSON-encoded request
    bodies, returns JSON-encoded responses, and uses standard HTTP response
    codes, authentication, and verbs.  API keys are used to authenticate the
    requests. Your API keys carry many privileges, so be sure to keep them
    secure! Do not share your secret API keys in publicly accessible areas such
    as GitHub, client-side code, and so forth.
servers:
  - url: https://sandbox.api.flagright.com/management
paths:
  /rules:
    get:
      security:
        - x-api-key: []
      summary: Rule - List
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rule'
              examples:
                example-1:
                  value:
                    - id: R-1
                      type: TRANSACTION
                      name: First payment by customer
                      description: First Payment by customer
                      defaultParameters: {}
                      defaultRiskLevelParameters:
                        VERY_HIGH: {}
                        HIGH: {}
                        MEDIUM: {}
                        LOW: {}
                        VERY_LOW: {}
                      defaultAction: FLAG
                      defaultRiskLevelActions:
                        VERY_HIGH: FLAG
                        HIGH: FLAG
                        MEDIUM: FLAG
                        LOW: FLAG
                        VERY_LOW: FLAG
                      labels:
                        - string
                      defaultCasePriority: P1
      operationId: get-rules
      description: >-
        ### Rules List


        `GET /rules` endpoint returns a lot of all rule templates supported by flagright. You can use [GET /rules/{ruleId}](/management/api-reference/api-reference/get-rules-rule-id) endpoint to fetch the details of any particular rule. 


        Each rule is identified by the unique `id` which is of the form `R-{X}` where `X` is an integer. 


        Rules have a `parametersSchema` which is a [JSON Schema](https://json-schema.org/) that contains the schema of the parameters supported by the rule. When you create a [ruleInstance](/management/api-reference/api-reference/post-rule-instances), you need to provide the values in accordance with the `parametersSchema`. 


        All the rules come with default values for all required attributes. 


        Rules come with default `name`, `description`. Each rule may take multiple rule parameters, by default they have a `defaultParameters` attribute that contains all the required fields. For use cases where the rule parameters are forked based on customer dynamic risk score, `defaultRiskLevelParameters` are set. 


        Rules also come with a `defaultAction` and `defaultRiskLevelActions` for rule actions for the rule. 


        All of the above should be configured at the [rule instance](/management/api-reference/api-reference/post-rule-instances) level when creating a rule instance. Rules are read only and provided by flagright. You can only manipulate rules instances, not rule templates themselves. 


        If you need an update to a rule or a new rule, you can always contact the Flagright team.
      parameters: []
  /rules/{ruleId}:
    parameters:
      - schema:
          type: string
        name: ruleId
        in: path
        required: true
    get:
      security:
        - x-api-key: []
      summary: Rule - Get
      operationId: get-rules-ruleId
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      description: >-
        ### Retrieve a Rule 


        `GET /rules/{ruleId}` endpoint returns a rule template supported by flagright.
  /rule-instances:
    post:
      security:
        - x-api-key: []
      summary: Rule Instance - Create
      operationId: post-rule_instances
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleInstance'
              examples:
                example-1:
                  value:
                    id: string
                    type: TRANSACTION
                    ruleId: string
                    action: FLAG
                    parameters: {}
                    status: ACTIVE
                    casePriority: P1
                    createdAt: 0
                    updatedAt: 0
                    runCount: 0
                    hitCount: 0
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleInstanceUpdatable'
      description: >-
        ### Create Rule Instance


        `POST /rule-instances` endpoint is used to create a new rule instance. A rule instance can be thought of as a live entity, that runs checks for for transactions. Rule instances use `Rule` templates as the blueprint. 


        Every rule instance has an associated `ruleId` of the rule from which it is derived. The details of the rule and the required parameters is found by `GET /rules` endpoint. 


        Once a rule instance is created, flagright generates an ID for the rule instance and also stores related metadata like:


        - `id` - unique identifier for the rule instance

        - `runCount` - how many times the rule instance was run

        - `hitCount` - how many times a rule was hit

        - `createdAt` & `updatedAt` - timestamps


        They are generated and maintained by the flagright system and are not updatable by the API.
    get:
      security:
        - x-api-key: []
      summary: Rule Instance - List
      operationId: get-rule_instances
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RuleInstance'
      description: >-
        ### Retrieve Rule Instances


        `GET /rule-instances` endpoint returns a list of all rule instances created by your account on flagright.
  /rule-instances/{ruleInstanceId}:
    parameters:
      - schema:
          type: string
        name: ruleInstanceId
        in: path
        required: true
    delete:
      security:
        - x-api-key: []
      summary: Rule Instance - Delete
      operationId: delete-rule_instances-ruleInstanceId
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      description:
        You can *permanently* delete a rule instance using the `DELETE
        /rule-instances/{ruleInstanceId}` endpoint. If you want to deactive a
        rule instance, you can update the status on the rule instance using the
        [POST
        /rule-instances/{ruleInstanceId}](/management/api-reference/api-reference/post-rule-instances-rule-instance-id)
        endpoint
    post:
      security:
        - x-api-key: []
      summary: Rule Instance - Update
      operationId: post-rule-instances-ruleInstanceId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleInstance'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleInstanceUpdatable'
      description: >
        ### Update Rule Instance


        Created rule instances can be idempotently updated with the `POST /rule-instances/{ruleInstanceId}`.
  /rule-filters-schema:
    get:
      security:
        - x-api-key: []
      summary: Rule Filters Schema - Get
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
              examples:
                example-1:
                  value:
                    type: object
                    properties:
                      paymentMethod:
                        type: string
                        ui:schema:
                          ui:group: transaction
                          ui:subtype: PAYMENT_METHOD
                        title: Payment Method
                        enum:
                          - ACH
                          - CARD
                          - IBAN
                          - SWIFT
                          - UPI
                          - WALLET
                          - MPESA
                          - GENERIC_BANK_ACCOUNT
                          - CHECK
                        nullable: true
      operationId: get-rule-filters-schema
      description: >-
        ### Retrieve Rule Filters Schema


        `GET /rule-filteres-schema` endpoint returns the rule filters supported by flagright as [JSON Schema](https://json-schema.org/). 


        When you create a [rule instance](/management/api-reference/api-reference/post-rule-instances), you can use the schema returned by this endpoint to construct `filters` field for a rule instance.


        If you need an update to a rule filter or a new rule filter, you can always contact the Flagright team.
      parameters: []
    parameters: []
  /cases:
    post:
      security:
        - x-api-key: []
      summary: Case - Create
      operationId: post-cases
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Case'
              examples:
                example-1:
                  value:
                    caseId: string
                    entityDetails:
                      userId: string
                      type: USER
                    caseStatus: OPEN
                    priority: P1
                    createdTimestamp: 1713177955000
                    updatedAt: 1713177955000
                    relatedCases:
                      - string
                    tags:
                      - $ref: ../public/openapi-public-original.yaml#/components/schemas/Tag
                    assignments:
                      - $ref: '#/components/schemas/Assignment'
                    creationReason:
                      reasons:
                        - string
                      comment: string
                      timestamp: 1713177955000
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaseCreationRequest'
  /cases/{caseId}:
    parameters:
      - schema:
          type: string
        name: caseId
        in: path
        required: true
    get:
      security:
        - x-api-key: []
      summary: Case - Get
      operationId: get-cases-caseId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Case'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      description: '### Retrieve a Case'
    patch:
      security:
        - x-api-key: []
      summary: Case - Update
      operationId: patch-cases-caseId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Case'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaseUpdateable'
      description: '### Update Case'
  /alerts:
    post:
      security:
        - x-api-key: []
      summary: Alert - Create
      operationId: post-alerts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
              examples:
                example-1:
                  value:
                    alertId: string
                    entityDetails:
                      type: TRANSACTION
                      transactionIds:
                        - string
                    alertStatus: OPEN
                    priority: P1
                    createdTimestamp: 1713177955000
                    updatedAt: 1713177955000
                    tags:
                      - $ref: ../public/openapi-public-original.yaml#/components/schemas/Tag
                    assignments:
                      - $ref: '#/components/schemas/Assignment'
                    creationReason:
                      reasons:
                        - string
                      comment: string
                      timestamp: 1713177955000
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertCreationRequest'
  /alerts/{alertId}:
    parameters:
      - schema:
          type: string
        name: alertId
        in: path
        required: true
    get:
      security:
        - x-api-key: []
      summary: Alert - Get
      operationId: get-alerts-alertId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      description: '### Retrieve an Alert'
    patch:
      security:
        - x-api-key: []
      summary: Alert - Update
      operationId: patch-alerts-alertId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertUpdatable'
      description: '### Update Alert'
components:
  schemas:
    RuleInstance:
      title: RuleInstance
      allOf:
        - $ref: '#/components/schemas/RuleInstanceBase'
        - $ref: '#/components/schemas/RuleInstanceUpdatable'
      additionalProperties: false
    RuleInstanceBase:
      title: RuleInstanceBase
      type: object
      description: ''
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/RuleType'
        ruleId:
          type: string
        runCount:
          type: number
        hitCount:
          type: integer
        createdAt:
          type: number
        updatedAt:
          type: number
        checksFor:
          type: array
          items:
            type: string
      required:
        - id
        - type
        - ruleId
        - checksFor
    RuleInstanceUpdatable:
      title: RuleInstanceUpdatable
      type: object
      properties:
        ruleId:
          type: string
        filters:
          type: object
          description:
            Rule filters. A key-value json object corresponding to the json
            schema returned by /rule-filters-schema endpoint.
        parameters:
          type: object
        ruleNameAlias:
          type: string
        riskLevelParameters:
          $ref: '#/components/schemas/RiskLevelRuleParameters'
        action:
          $ref: '#/components/schemas/RuleAction'
        riskLevelActions:
          $ref: '#/components/schemas/RiskLevelRuleActions'
        triggersOnHit:
          $ref: '#/components/schemas/TriggersOnHit'
        riskLevelsTriggersOnHit:
          $ref: '#/components/schemas/RiskLevelsTriggersOnHit'
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        casePriority:
          $ref: '#/components/schemas/Priority'
    StatusDetails:
      title: StatusDetails
      type: object
      properties:
        description:
          type: string
    UserDirections:
      title: UserDirections
      type: string
      enum:
        - ALL
        - ORIGIN
        - DESTINATION
    UserStateDetailsInternal:
      title: UserStateDetailsInternal
      allOf:
        - $ref: ../public/openapi-public-original.yaml#/components/schemas/UserStateDetails
        - $ref: '#/components/schemas/StatusDetails'
      required:
        - reason
    KYCStatusDetailsInternal:
      title: KYCStatusDetailsInternal
      allOf:
        - $ref: ../public/openapi-public-original.yaml#/components/schemas/KYCStatusDetails
        - $ref: '#/components/schemas/StatusDetails'
      required:
        - reason
    TriggersOnHit:
      title: TriggersOnHit
      type: object
      properties:
        usersToCheck:
          $ref: '#/components/schemas/UserDirections'
        userStateDetails:
          $ref: '#/components/schemas/UserStateDetailsInternal'
        kycStatusDetails:
          $ref: '#/components/schemas/KYCStatusDetailsInternal'
      required:
        - usersToCheck
    RiskLevelsTriggersOnHit:
      title: RiskLevelsTriggersOnHit
      type: object
      properties:
        VERY_HIGH:
          $ref: '#/components/schemas/TriggersOnHit'
        HIGH:
          $ref: '#/components/schemas/TriggersOnHit'
        MEDIUM:
          $ref: '#/components/schemas/TriggersOnHit'
        LOW:
          $ref: '#/components/schemas/TriggersOnHit'
        VERY_LOW:
          $ref: '#/components/schemas/TriggersOnHit'
      required:
        - VERY_HIGH
        - HIGH
        - MEDIUM
        - LOW
        - VERY_LOW
    RuleAction:
      type: string
      title: RuleAction
      enum:
        - ALLOW
        - FLAG
        - BLOCK
        - SUSPEND
      x-examples:
        example-1: SUSPEND
      description:
        Model for rule action if a rule is hit. This is returned in the API
        response and can be configured on Console by operational accounts like a
        Compliance Analyst
    RuleActionAlias:
      type: object
      title: RuleActionAlias
      properties:
        action:
          $ref: '#/components/schemas/RuleAction'
        alias:
          type: string
      required:
        - action
        - alias
      additionalProperties: false
    Priority:
      type: string
      title: Priority
      enum:
        - P1
        - P2
        - P3
        - P4
    RuleLabels:
      type: string
      title: RuleLabels
      enum:
        - UNEXPECTED_BEHAVIOR
        - ILLICIT_GAINS_CHECK
        - RFI_TRIGGER
        - EDD_TRIGGER
        - KYC_TRIGGER
        - SCAM
        - ABUSE
        - ACCOUNT_TAKEOVER
        - DISPUTE
        - SANCTIONS
        - SANCTIONS_PEP
        - SANCTIONS_PEP_ADVERSE_MEDIA
    RiskLevelRuleActions:
      title: RiskLevelRuleActions
      type: object
      properties:
        VERY_HIGH:
          $ref: '#/components/schemas/RuleAction'
        HIGH:
          $ref: '#/components/schemas/RuleAction'
        MEDIUM:
          $ref: '#/components/schemas/RuleAction'
        LOW:
          $ref: '#/components/schemas/RuleAction'
        VERY_LOW:
          $ref: '#/components/schemas/RuleAction'
      required:
        - VERY_HIGH
        - HIGH
        - MEDIUM
        - LOW
        - VERY_LOW
    RiskLevelRuleParameters:
      title: RiskLevelRuleParameters
      type: object
      properties:
        VERY_HIGH:
          type: object
        HIGH:
          type: object
        MEDIUM:
          type: object
        LOW:
          type: object
        VERY_LOW:
          type: object
      required:
        - VERY_HIGH
        - HIGH
        - MEDIUM
        - LOW
        - VERY_LOW
    RuleType:
      title: RuleType
      type: string
      enum:
        - TRANSACTION
        - USER
        - USER_ONGOING_SCREENING
    Rule:
      title: Rule
      type: object
      x-examples:
        example-1:
          id: R-1
          name: Rule name
          description: Rule description
          defaultParameters:
            threshold: 3
          defaultAction: FLAG
          ruleImplementationName: code-filename
          createdAt: 0
          updatedAt: 0
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/RuleType'
        name:
          type: string
        types:
          type: array
          items:
            type: string
        description:
          type: string
        parametersSchema:
          type: object
        defaultParameters:
          type: object
        defaultRiskLevelParameters:
          $ref: '#/components/schemas/RiskLevelRuleParameters'
        defaultAction:
          $ref: '#/components/schemas/RuleAction'
        defaultRiskLevelActions:
          $ref: '#/components/schemas/RiskLevelRuleActions'
        labels:
          type: array
          items:
            $ref: '#/components/schemas/RuleLabels'
        defaultCasePriority:
          $ref: '#/components/schemas/Priority'
        defaultNature:
          $ref: ../public/openapi-public-original.yaml#/components/schemas/RuleNature
        checksFor:
          type: array
          items:
            type: string
        typologies:
          type: array
          items:
            type: string
        sampleUseCases:
          type: string
      required:
        - id
        - type
        - name
        - description
        - defaultParameters
        - defaultAction
        - labels
        - defaultCasePriority
        - defaultNature
        - checksFor
        - types
        - typologies
        - sampleUseCases
    CaseCreationRequest:
      title: CaseCreationRequest
      allOf:
        - $ref: '#/components/schemas/CaseBase'
        - $ref: '#/components/schemas/CaseUpdateable'
      required:
        - caseId
        - entityDetails
        - priority
    AlertCreationRequest:
      title: AlertCreationRequest
      allOf:
        - $ref: '#/components/schemas/AlertBase'
        - $ref: '#/components/schemas/AlertUpdatable'
      required:
        - alertId
        - entityDetails
        - priority
        - caseId
    CaseBase:
      title: CaseBase
      type: object
      description: ''
      properties:
        caseId:
          type: string
        createdTimestamp:
          type: number
          minimum: 1262300400000
          maximum: 4133890801000
      required:
        - caseId
        - createdTimestamp
    AlertBase:
      title: AlertBase
      type: object
      description: ''
      properties:
        alertId:
          type: string
        createdTimestamp:
          type: number
          minimum: 1262300400000
          maximum: 4133890801000
        caseId:
          type: string
      required:
        - alertId
        - createdTimestamp
        - caseId
    TransactionHitDetails:
      title: TransactionHitDetails
      type: object
      description: ''
      properties:
        type:
          type: string
          enum:
            - TRANSACTION
        transactionIds:
          type: array
          items:
            type: string
      required:
        - type
        - transactionIds
    SanctionsHitDetails:
      title: SanctionsHitDetails
      type: object
      description: ''
      properties:
        type:
          type: string
          enum:
            - SANCTIONS
      required:
        - type
        - sanctionIds
    AlertUpdatable:
      title: AlertUpdateable
      type: object
      description: ''
      properties:
        priority:
          $ref: '#/components/schemas/Priority'
        tags:
          type: array
          items:
            $ref: ../public/openapi-public-original.yaml#/components/schemas/Tag
        creationReason:
          $ref: '#/components/schemas/ActionReason'
        entityDetails:
          oneOf:
            - $ref: '#/components/schemas/TransactionHitDetails'
            - $ref: '#/components/schemas/SanctionsHitDetails'
        assignments:
          type: array
          items:
            $ref: '#/components/schemas/Assignment'
    AlertDerived:
      title: AlertDerived
      type: object
      description: ''
      properties:
        alertStatus:
          $ref: '#/components/schemas/Status'
        updatedAt:
          type: number
    Alert:
      title: Alert
      type: object
      allOf:
        - $ref: '#/components/schemas/AlertBase'
        - $ref: '#/components/schemas/AlertUpdatable'
        - $ref: '#/components/schemas/AlertDerived'
      required:
        - alertId
        - entityDetails
        - alertStatus
        - priority
        - createdTimestamp
        - updatedAt
        - caseId
    RuleDetails:
      title: RuleDetails
      type: object
      description: ''
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        instanceId:
          type: string
        nature:
          $ref: ../public/openapi-public-original.yaml#/components/schemas/RuleNature
        action:
          $ref: '#/components/schemas/RuleAction'
      required:
        - id
        - name
        - description
    CaseUpdateable:
      title: CasePatchRequest
      type: object
      description: ''
      properties:
        priority:
          $ref: '#/components/schemas/Priority'
        tags:
          type: array
          items:
            $ref: ../public/openapi-public-original.yaml#/components/schemas/Tag
        creationReason:
          $ref: '#/components/schemas/ActionReason'
        entityDetails:
          oneOf:
            - $ref: '#/components/schemas/UserEntityDetails'
            - $ref: '#/components/schemas/PaymentEntityDetails'
        relatedCases:
          type: array
          items:
            type: string
        assignments:
          type: array
          items:
            $ref: '#/components/schemas/Assignment'
    CaseDerived:
      title: CaseDerived
      type: object
      description: ''
      properties:
        caseStatus:
          $ref: '#/components/schemas/Status'
        updatedAt:
          type: number
    Status:
      title: Status
      type: string
      enum:
        - OPEN
        - CLOSED
        - REOPENED
        - IN_REVIEW
        - ESCALATED
        - IN_PROGRESS
        - ON_HOLD
    Case:
      title: Case
      type: object
      allOf:
        - $ref: '#/components/schemas/CaseBase'
        - $ref: '#/components/schemas/CaseDerived'
        - $ref: '#/components/schemas/CaseUpdateable'
      required:
        - caseId
        - entityDetails
        - caseStatus
        - priority
        - createdTimestamp
        - updatedAt
    UserEntityDetails:
      title: UserEntityDetails
      type: object
      description: ''
      properties:
        userId:
          type: string
        type:
          type: string
          enum:
            - USER
      required:
        - userId
        - type
    PaymentEntityDetails:
      title: PaymentEntityDetails
      type: object
      description: ''
      properties:
        type:
          type: string
          enum:
            - PAYMENT
        paymentDetails:
          oneOf:
            - $ref: ../public/openapi-public-original.yaml#/components/schemas/CardDetails
            - $ref: ../public/openapi-public-original.yaml#/components/schemas/GenericBankAccountDetails
            - $ref: ../public/openapi-public-original.yaml#/components/schemas/IBANDetails
            - $ref: ../public/openapi-public-original.yaml#/components/schemas/ACHDetails
            - $ref: ../public/openapi-public-original.yaml#/components/schemas/SWIFTDetails
            - $ref: ../public/openapi-public-original.yaml#/components/schemas/MpesaDetails
            - $ref: ../public/openapi-public-original.yaml#/components/schemas/UPIDetails
            - $ref: ../public/openapi-public-original.yaml#/components/schemas/WalletDetails
            - $ref: ../public/openapi-public-original.yaml#/components/schemas/CheckDetails
      required:
        - type
        - paymentDetails
    ActionReason:
      title: ActionReason
      type: object
      properties:
        reasons:
          type: array
          items:
            type: string
        comment:
          type: string
        timestamp:
          type: number
          minimum: 1262300400000
          maximum: 4133890801000
      required:
        - reasons
        - comment
    Assignment:
      title: Assignment
      type: object
      properties:
        assigneeEmail:
          type: string
        assignedByEmail:
          type: string
        timestamp:
          type: number
          minimum: 1262300400000
          maximum: 4133890801000
      required:
        - assigneeEmail
    ErrorMessage:
      title: ErrorMessage
      type: object
      properties:
        error:
          type: string
        message:
          type: string
      required:
        - error
        - message
  securitySchemes:
    x-api-key:
      name: x-api-key
      type: apiKey
      in: header
      description: API keys are used to authenticate the requests.
