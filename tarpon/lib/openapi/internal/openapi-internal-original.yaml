openapi: 3.0.0
info:
  title: Tarpon Console API
  version: '1.0'
servers:
  - url: http://localhost:3000
paths:
  /apikey:
    parameters: []
    get:
      summary: Tarpon API Key - Create
      operationId: post-apikey
      responses:
        '200':
          description: New API Key
      parameters:
        - schema:
            type: string
          in: query
          name: tenantId
          description: Tenant ID
        - schema:
            type: string
          in: query
          name: usagePlanId
          description: AWS Gateway usage plan ID
      description: Generate a new Tarpon API key for a tenant
  /rule-logic-config:
    get:
      summary: Rule logic config - Get
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleLogicConfigResponse'
      operationId: get-rule-logic-config
      description: ''
    parameters: []
  /rules:
    get:
      summary: Rules - List
      tags: []
      x-flagright:
        permissions:
          - rules:library:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rule'
              examples: {}
      operationId: get-rules
      description: ''
      parameters:
        - schema:
            type: string
          in: query
          name: ruleId
    parameters: []
    post:
      summary: Rules - Create
      operationId: post-rules
      x-flagright:
        permissions:
          - rules:my-rules:write
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rule'
        required: true
  /rules-search:
    get:
      summary: Rules - Search
      tags: []
      x-flagright:
        permissions:
          - rules:library:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RulesSearchResponse'
      operationId: get-rules-search
      description: ''
      parameters:
        - schema:
            type: string
          in: query
          name: queryStr
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterTypology
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterChecksFor
        - schema:
            type: array
            items:
              $ref: ../public/openapi-public-original.yaml#/components/schemas/RuleNature
          in: query
          name: filterNature
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterTypes
        - schema:
            type: boolean
          in: query
          name: isAISearch
        - schema:
            type: boolean
          in: query
          name: disableGptSearch
  /rule-filters:
    get:
      summary: Rule Filters - List
      tags: []
      x-flagright:
        permissions:
          - rules:library:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleFilters'
              examples: {}
      operationId: get-rule-filters
      description: ''
      parameters:
        - schema:
            type: string
          in: query
          name: ruleId
    parameters: []
  /rules/{ruleId}:
    parameters:
      - schema:
          type: string
        name: ruleId
        in: path
        required: true
    get:
      summary: Rule - Get
      operationId: get-rule
      x-flagright:
        permissions:
          - rules:my-rules:write
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
          description: OK
    put:
      summary: Rule - Update
      operationId: put-rule-ruleId
      x-flagright:
        permissions:
          - rules:my-rules:write
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rule'
        required: true
    delete:
      summary: Rule - Delete
      operationId: delete-rules-ruleId
      x-flagright:
        permissions:
          - rules:my-rules:write
      responses:
        '200':
          description: OK
  /rule_instances/{ruleInstanceId}/stats:
    parameters:
      - schema:
          type: string
        name: ruleInstanceId
        in: path
        required: true
    get:
      summary: Rule Instance - Stats
      operationId: get-rule_instances-ruleInstanceId-stats
      x-flagright:
        permissions:
          - rules:my-rules:read
      parameters:
        - schema:
            type: number
          in: query
          name: afterTimestamp
          required: true
        - schema:
            type: number
          in: query
          name: beforeTimestamp
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleInstanceStats'
              examples: {}
  /rule_instances:
    post:
      summary: Rule Instance - Create
      operationId: post-rule_instances
      x-flagright:
        permissions:
          - rules:my-rules:write
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleInstance'
              examples:
                example-1:
                  value:
                    id: string
                    ruleId: string
                    action: FLAG
                    parameters: {}
                    status: ACTIVE
                    createdAt: 0
                    updatedAt: 0
                    runCount: 0
                    hitCount: 0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleInstance'
        required: true
    get:
      summary: Rule Instance - List
      operationId: get-rule_instances
      parameters:
        - schema:
            $ref: '#/components/schemas/RuleMode'
          in: query
          name: mode
      x-flagright:
        permissions:
          - rules:my-rules:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RuleInstance'
  /rule_instances/{ruleInstanceId}:
    parameters:
      - schema:
          type: string
        name: ruleInstanceId
        in: path
        required: true
    delete:
      summary: Rule Instance - Delete
      operationId: delete-rule_instances-ruleInstanceId
      x-flagright:
        permissions:
          - rules:my-rules:write
      responses:
        '200':
          description: OK
    put:
      summary: Rule Instance - Update
      operationId: put-rule_instances-ruleInstanceId
      x-flagright:
        permissions:
          - rules:my-rules:write
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleInstance'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleInstance'
        required: true
    get:
      summary: Rule Instance - Get
      operationId: get-rule-instances-item
      x-flagright:
        permissions:
          - rules:my-rules:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleInstance'
  /rule-instances/new-rule-id:
    parameters: []
    get:
      summary: Rule instances - New rule ID
      operationId: get-rule-instances-new-rule-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewRuleInstanceIdResponse'
      parameters:
        - schema:
            type: string
          in: query
          name: ruleId
          description: Rule ID
      description: Get a new rule instance ID
  /rule-instances/{ruleInstanceId}/transaction-users-hit:
    parameters:
      - schema:
          type: string
        name: ruleInstanceId
        in: path
        required: true
    get:
      summary: Rule Instance - Transaction Users Hit
      operationId: get-rule-instances-transaction-users-hit
      parameters:
        - schema:
            $ref: '#/components/schemas/PageSize'
          in: query
          name: pageSize
        - schema:
            type: number
          in: query
          name: txAfterTimestamp
        - schema:
            type: number
          in: query
          name: txBeforeTimestamp
        - schema:
            type: string
          in: query
          name: start
        - schema:
            type: string
            enum:
              - asc
              - desc
          in: query
          name: order
        - schema:
            type: number
          in: query
          name: afterTimestamp
        - schema:
            type: number
          in: query
          name: beforeTimestamp
        - schema:
            type: string
          in: query
          name: filterId
        - schema:
            type: string
          in: query
          name: filterName
        - schema:
            $ref: '#/components/schemas/FilterOperator'
          in: query
          name: filterOperator
        - schema:
            type: string
          in: query
          name: filterTagKey
        - schema:
            type: string
          in: query
          name: filterTagValue
        - schema:
            type: array
            items:
              $ref: '#/components/schemas/RiskLevel'
          in: query
          name: filterRiskLevel
        - schema:
            type: boolean
          in: query
          name: includeCasesCount
        - schema:
            type: string
          in: query
          name: sortField
        - schema:
            type: string
          in: query
          name: filterRiskLevelLocked
        - schema:
            $ref: '#/components/schemas/SortOrder'
          in: query
          name: sortOrder
        - schema:
            type: boolean
          in: query
          name: filterShadowHit
      x-flagright:
        permissions:
          - rules:my-rules:read
          - users:user-overview:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllUsersListResponse'
  /import/users:
    parameters: []
    post:
      summary: Import - Start to Import
      operationId: post-import-users
      responses:
        '200':
          description: OK
      x-flagright:
        permissions:
          - users:import:write
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportRequest'
            examples:
              example-1:
                value:
                  type: USER
                  format: flagright
                  filename: filename
                  s3Key: s3-key-in-a-bucket
        required: true
  /import/transactions:
    parameters: []
    post:
      summary: Import - Start to Import
      operationId: post-import-transactions
      responses:
        '200':
          description: OK
      x-flagright:
        permissions:
          - transactions:import:write
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportRequest'
            examples:
              example-1:
                value:
                  type: TRANSACTION
                  format: flagright
                  filename: filename
                  s3Key: s3-key-in-a-bucket
        required: true
  /imports/{importId}:
    parameters:
      - schema:
          type: string
        name: importId
        in: path
        required: true
    get:
      summary: Import - Get Import Info
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileImport'
      operationId: get-import-importId
  /files/getPresignedUrl:
    parameters: []
    get:
      summary: Files - Get Presigned URL
      operationId: post-getPresignedUrl
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PresignedUrlResponse'
              examples: {}
      description: Get a presigned URL for uploading a file
  /lists:
    get:
      summary: Lists - Get All By Type
      tags: []
      x-flagright:
        permissions:
          - lists:all:read
      parameters:
        - schema:
            type: string
          name: listType
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../public/openapi-public-original.yaml#/components/schemas/ListHeader
      operationId: get-lists
    post:
      summary: Lists - Post
      tags: []
      x-flagright:
        permissions:
          - lists:all:write
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewListPayload'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../public/openapi-public-original.yaml#/components/schemas/ListExisted
      operationId: post-list
  /lists/{listId}:
    parameters:
      - schema:
          type: string
        name: listId
        in: path
        required: true
    delete:
      summary: Lists - Delete
      tags: []
      x-flagright:
        permissions:
          - lists:all:write
      responses:
        '200':
          description: OK
      operationId: delete-list
    patch:
      summary: Lists - Patch
      tags: []
      operationId: patch-list
      x-flagright:
        permissions:
          - lists:all:write
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../public/openapi-public-original.yaml#/components/schemas/ListData
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../public/openapi-public-original.yaml#/components/schemas/ListExisted
    get:
      summary: Lists - Item header
      tags: []
      operationId: get-list
      x-flagright:
        permissions:
          - lists:all:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../public/openapi-public-original.yaml#/components/schemas/ListHeader
        '404':
          description: Not found
  /lists/{listId}/items:
    parameters:
      - schema:
          type: string
        name: listId
        in: path
        required: true
    get:
      summary: Lists - Items
      tags: []
      operationId: get-list-items
      x-flagright:
        permissions:
          - lists:all:read
      parameters:
        - schema:
            type: number
          name: page
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../public/openapi-public-original.yaml#/components/schemas/ListItem
        '404':
          description: Not found
    post:
      summary: Lists - Post Item
      tags: []
      operationId: post-list-item
      x-flagright:
        permissions:
          - lists:all:write
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../public/openapi-public-original.yaml#/components/schemas/ListItem
        required: true
      responses:
        '200':
          description: OK
  /lists/{listId}/items/{key}:
    parameters:
      - schema:
          type: string
        name: listId
        in: path
        required: true
      - schema:
          type: string
        name: key
        in: path
        required: true
    delete:
      summary: Lists - Items - delete
      tags: []
      operationId: delete-list-item
      x-flagright:
        permissions:
          - lists:all:write
      responses:
        '200':
          description: OK
  /transactions:
    get:
      summary: Transaction - List
      tags: []
      x-flagright:
        permissions:
          - transactions:overview:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsResponse'
              examples: {}
      operationId: get-transactions-list
      description: ''
      parameters:
        - schema:
            type: string
          in: query
          name: field
        - schema:
            type: string
          in: query
          name: start
        - schema:
            type: string
            enum:
              - asc
              - desc
          in: query
          name: order
        - schema:
            $ref: '#/components/schemas/PageSize'
          in: query
          name: pageSize
        - schema:
            $ref: '#/components/schemas/Page'
          in: query
          name: page
        - schema:
            type: number
          in: query
          name: afterTimestamp
        - schema:
            type: number
          in: query
          name: beforeTimestamp
        - schema:
            type: string
          in: query
          name: filterId
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterIdList
        - schema:
            $ref: '#/components/schemas/RuleAction'
          in: query
          name: filterOutStatus
        - schema:
            $ref: '#/components/schemas/CaseStatus'
          in: query
          name: filterOutCaseStatus
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterRulesExecuted
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterRuleInstancesExecuted
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterRulesHit
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterRuleInstancesHit
        - schema:
            type: boolean
          in: query
          name: filterShadowHit
        - schema:
            type: string
          in: query
          name: transactionType
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterOriginCurrencies
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterDestinationCurrencies
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterOriginCountries
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterDestinationCountries
        - schema:
            type: string
          in: query
          name: sortField
        - schema:
            $ref: '#/components/schemas/SortOrder'
          in: query
          name: sortOrder
        - schema:
            type: string
          in: query
          name: filterUserId
        - schema:
            type: string
          in: query
          name: filterOriginUserId
        - schema:
            type: string
          in: query
          name: filterDestinationUserId
        - schema:
            type: array
            items:
              $ref: '#/components/schemas/RuleAction'
          in: query
          name: filterStatus
        - schema:
            $ref: '#/components/schemas/CaseStatus'
          in: query
          name: filterCaseStatus
        - schema:
            type: string
          in: query
          name: filterTagKey
        - schema:
            type: string
          in: query
          name: filterTagValue
        - schema:
            type: boolean
          in: query
          name: includeUsers
        - schema:
            type: boolean
          in: query
          name: includeEvents
        - schema:
            type: array
            items:
              $ref: ../public/openapi-public-original.yaml#/components/schemas/PaymentMethod
          in: query
          name: filterOriginPaymentMethods
        - schema:
            type: array
            items:
              $ref: ../public/openapi-public-original.yaml#/components/schemas/PaymentMethod
          in: query
          name: filterDestinationPaymentMethods
        - schema:
            type: array
            items:
              $ref: ../public/openapi-public-original.yaml#/components/schemas/TransactionState
          in: query
          name: filterTransactionState
        - schema:
            type: array
            items:
              $ref: ../public/openapi-public-original.yaml#/components/schemas/TransactionType
          in: query
          name: filterTransactionTypes
        - schema:
            type: string
          in: query
          name: filterOriginPaymentMethodId
        - schema:
            type: string
          in: query
          name: filterDestinationPaymentMethodId
        - schema:
            type: array
            items:
              $ref: '#/components/schemas/RuleAction'
          in: query
          name: filterTransactionStatus
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterProductType
        - schema:
            type: string
          in: query
          name: alertId
  /transactions/export:
    get:
      summary: Transaction - Export
      tags: []
      x-flagright:
        permissions:
          - transactions:export:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  downloadUrl:
                    type: string
                required:
                  - downloadUrl
              examples: {}
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                example-1:
                  value: {}
      operationId: get-transactions-list-export
      description: ''
      parameters:
        - schema:
            $ref: '#/components/schemas/PageSize'
          in: query
          name: pageSize
        - schema:
            $ref: '#/components/schemas/Page'
          in: query
          name: page
        - schema:
            type: number
          in: query
          name: afterTimestamp
        - schema:
            type: number
          in: query
          name: beforeTimestamp
          required: true
        - schema:
            type: string
          in: query
          name: filterId
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterRulesExecuted
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterRulesHit
        - schema:
            $ref: '#/components/schemas/RuleAction'
          in: query
          name: filterOutStatus
        - schema:
            type: array
            items:
              $ref: '#/components/schemas/RuleAction'
          in: query
          name: filterStatus
        - schema:
            $ref: '#/components/schemas/CaseStatus'
          in: query
          name: filterCaseStatus
        - schema:
            type: string
          in: query
          name: filterTagKey
        - schema:
            type: string
          in: query
          name: filterTagValue
        - schema:
            type: string
          in: query
          name: sortField
        - schema:
            $ref: '#/components/schemas/SortOrder'
          in: query
          name: sortOrder
      x-internal: false
    parameters: []
  /transactions/uniques:
    get:
      summary: Transaction - Unique values for different fields
      x-flagright:
        permissions:
          - transactions:overview:read
      parameters:
        - schema:
            $ref: '#/components/schemas/TransactionsUniquesField'
          name: field
          in: query
          required: true
        - schema:
            type: string
          name: filter
          in: query
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      operationId: get-transactions-uniques
  /transactions/{transactionId}:
    parameters:
      - schema:
          type: string
        name: transactionId
        in: path
        required: true
    get:
      summary: Transaction - Get
      operationId: get-transaction
      x-flagright:
        permissions:
          - transactions:details:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalTransaction'
        '404':
          description: Not Found
      description: ''
  /transactions/stats/by-types:
    get:
      summary: Transaction - Stats
      tags: []
      x-flagright:
        permissions:
          - transactions:overview:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsStatsByTypesResponse'
              examples: {}
      operationId: get-transactions-stats-by-type
      description: ''
      parameters:
        - schema:
            $ref: '#/components/schemas/PageSize'
          in: query
          name: pageSize
        - schema:
            $ref: '#/components/schemas/Page'
          in: query
          name: page
        - schema:
            type: number
          in: query
          name: afterTimestamp
        - schema:
            type: number
          in: query
          name: beforeTimestamp
        - schema:
            type: string
          in: query
          name: filterId
        - schema:
            $ref: '#/components/schemas/RuleAction'
          in: query
          name: filterOutStatus
        - schema:
            $ref: '#/components/schemas/CaseStatus'
          in: query
          name: filterOutCaseStatus
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterRulesExecuted
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterRulesHit
        - schema:
            type: string
          in: query
          name: transactionType
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterOriginCurrencies
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterDestinationCurrencies
        - schema:
            type: string
          in: query
          name: sortField
        - schema:
            $ref: '#/components/schemas/SortOrder'
          in: query
          name: sortOrder
        - schema:
            type: string
          in: query
          name: filterUserId
        - schema:
            type: string
          in: query
          name: filterOriginUserId
        - schema:
            type: string
          in: query
          name: filterDestinationUserId
        - schema:
            type: array
            items:
              $ref: '#/components/schemas/RuleAction'
          in: query
          name: filterStatus
        - schema:
            $ref: '#/components/schemas/CaseStatus'
          in: query
          name: filterCaseStatus
        - schema:
            type: string
          in: query
          name: filterTagKey
        - schema:
            type: string
          in: query
          name: filterTagValue
        - schema:
            type: boolean
          in: query
          name: includeUsers
        - schema:
            type: boolean
          in: query
          name: includeEvents
        - schema:
            $ref: ../public/openapi-public-original.yaml#/components/schemas/PaymentMethod
          in: query
          name: filterOriginPaymentMethod
        - schema:
            $ref: ../public/openapi-public-original.yaml#/components/schemas/PaymentMethod
          in: query
          name: filterDestinationPaymentMethod
        - schema:
            type: array
            items:
              $ref: ../public/openapi-public-original.yaml#/components/schemas/TransactionState
          in: query
          name: filterTransactionState
        - schema:
            type: string
          in: query
          name: referenceCurrency
  /transactions/stats/by-time:
    get:
      summary: Transaction - Stats
      tags: []
      x-flagright:
        permissions:
          - transactions:overview:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsStatsByTimeResponse'
              examples: {}
      operationId: get-transactions-stats-by-time
      description: ''
      parameters:
        - schema:
            $ref: '#/components/schemas/PageSize'
          in: query
          name: pageSize
        - schema:
            $ref: '#/components/schemas/Page'
          in: query
          name: page
        - schema:
            type: number
          in: query
          name: afterTimestamp
        - schema:
            type: number
          in: query
          name: beforeTimestamp
        - schema:
            type: string
          in: query
          name: filterId
        - schema:
            $ref: '#/components/schemas/RuleAction'
          in: query
          name: filterOutStatus
        - schema:
            $ref: '#/components/schemas/CaseStatus'
          in: query
          name: filterOutCaseStatus
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterRulesExecuted
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterRulesHit
        - schema:
            type: string
          in: query
          name: transactionType
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterOriginCurrencies
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterDestinationCurrencies
        - schema:
            type: string
          in: query
          name: sortField
        - schema:
            $ref: '#/components/schemas/SortOrder'
          in: query
          name: sortOrder
        - schema:
            type: string
          in: query
          name: filterUserId
        - schema:
            type: string
          in: query
          name: filterOriginUserId
        - schema:
            type: string
          in: query
          name: filterDestinationUserId
        - schema:
            type: array
            items:
              $ref: '#/components/schemas/RuleAction'
          in: query
          name: filterStatus
        - schema:
            $ref: '#/components/schemas/CaseStatus'
          in: query
          name: filterCaseStatus
        - schema:
            type: string
          in: query
          name: filterTagKey
        - schema:
            type: string
          in: query
          name: filterTagValue
        - schema:
            type: boolean
          in: query
          name: includeUsers
        - schema:
            type: boolean
          in: query
          name: includeEvents
        - schema:
            $ref: ../public/openapi-public-original.yaml#/components/schemas/PaymentMethod
          in: query
          name: filterOriginPaymentMethod
        - schema:
            $ref: ../public/openapi-public-original.yaml#/components/schemas/PaymentMethod
          in: query
          name: filterDestinationPaymentMethod
        - schema:
            type: array
            items:
              $ref: ../public/openapi-public-original.yaml#/components/schemas/TransactionState
          in: query
          name: filterTransactionState
        - schema:
            type: string
          in: query
          name: referenceCurrency
  /users/{userId}/crm:
    get:
      summary: CRM Account - List
      x-flagright:
        permissions:
          - users:user-overview:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrmAccountResponse'
              examples: {}
      operationId: get-crm-account
      description: ''
      parameters:
        - schema:
            type: string
          name: userId
          in: path
          required: true
  /users/{userId}/entity:
    get:
      summary: Entity
      x-flagright:
        permissions:
          - users:user-overview:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Graph'
              examples: {}
      operationId: get-user-entity
      description: ''
      parameters:
        - schema:
            type: string
          name: userId
          required: true
          in: path
  /users/{userId}/txn-links:
    get:
      summary: Transaction Linking
      x-flagright:
        permissions:
          - users:user-overview:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Graph'
              examples: {}
      operationId: get-txn-linking
      description: ''
      parameters:
        - schema:
            type: string
          name: userId
          required: true
          in: path
  /users/{userId}/screening-status:
    get:
      summary: Screening Status
      x-flagright:
        permissions:
          - users:user-overview:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  isOngoingScreening:
                    type: boolean
                required:
                  - isOngoingScreening
      operationId: get-user-screening-status
      description: ''
      parameters:
        - schema:
            type: string
          name: userId
          in: path
          required: true
  /consumer/users:
    get:
      summary: Consumer Users - List
      tags: []
      x-flagright:
        permissions:
          - users:user-overview:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumerUsersListResponse'
              examples: {}
      operationId: get-consumer-users-list
      description: ''
      parameters:
        - schema:
            $ref: '#/components/schemas/PageSize'
          in: query
          name: pageSize
        - schema:
            type: string
          in: query
          name: start
        - schema:
            type: string
            enum:
              - asc
              - desc
          in: query
          name: order
        - schema:
            type: number
          in: query
          name: afterTimestamp
        - schema:
            type: number
          in: query
          name: beforeTimestamp
        - schema:
            type: string
          in: query
          name: filterId
        - schema:
            type: string
          in: query
          name: filterName
        - schema:
            $ref: '#/components/schemas/FilterOperator'
          in: query
          name: filterOperator
        - schema:
            type: string
          in: query
          name: filterTagKey
        - schema:
            type: string
          in: query
          name: filterTagValue
        - schema:
            type: array
            items:
              $ref: '#/components/schemas/RiskLevel'
          in: query
          name: filterRiskLevel
        - schema:
            type: string
          in: query
          name: sortField
        - schema:
            type: string
          in: query
          name: filterRiskLevelLocked
        - schema:
            $ref: '#/components/schemas/SortOrder'
          in: query
          name: sortOrder
    parameters: []
  /merchant-monitoring/{userId}/update_monitoring_status:
    post:
      summary: Update Monitoring Status
      operationId: post-update-monitoring-status
      x-flagright:
        permissions:
          - users:user-overview:write
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMonitoringStatusRequest'
        required: true
      parameters:
        - schema:
            type: string
          name: userId
          in: path
          required: true
  /merchant-monitoring/stats:
    get:
      summary: Merchant Monitoring Stats
      x-flagright:
        permissions:
          - users:user-overview:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantMonitoringStatsResponse'
              examples: {}
      operationId: get-merchant-monitoring-stats
      description: ''
  /users:
    get:
      summary: All Users - List
      tags: []
      x-flagright:
        permissions:
          - users:user-overview:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllUsersListResponse'
              examples: {}
      operationId: get-all-users-list
      description: ''
      parameters:
        - schema:
            $ref: '#/components/schemas/PageSize'
          in: query
          name: pageSize
        - schema:
            type: string
          in: query
          name: start
        - schema:
            type: string
            enum:
              - asc
              - desc
          in: query
          name: order
        - schema:
            type: number
          in: query
          name: afterTimestamp
        - schema:
            type: number
          in: query
          name: beforeTimestamp
        - schema:
            type: string
          in: query
          name: filterId
        - schema:
            type: string
          in: query
          name: filterName
        - schema:
            $ref: '#/components/schemas/FilterOperator'
          in: query
          name: filterOperator
        - schema:
            type: string
          in: query
          name: filterTagKey
        - schema:
            type: string
          in: query
          name: filterTagValue
        - schema:
            type: array
            items:
              $ref: '#/components/schemas/RiskLevel'
          in: query
          name: filterRiskLevel
        - schema:
            type: boolean
          in: query
          name: includeCasesCount
        - schema:
            type: string
          in: query
          name: sortField
        - schema:
            type: string
          in: query
          name: filterRiskLevelLocked
        - schema:
            $ref: '#/components/schemas/SortOrder'
          in: query
          name: sortOrder
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterRuleInstancesHit
        - schema:
            type: boolean
          in: query
          name: filterShadowHit
    parameters: []
  /users/{userId}/comments:
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
    post:
      summary: Create a User Comment
      operationId: post-user-comments
      x-flagright:
        permissions:
          - users:user-comments:write
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentRequest'
        required: true
  /copilot/narrative:
    post:
      summary: Generate an AI narrative
      operationId: generate-narrative
      x-flagright:
        permissions:
          - copilot:narrative:write
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NarrativeResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NarrativeRequest'
        required: true
  /copilot/format:
    post:
      summary: Format AI narrative
      operationId: format-narrative
      x-flagright:
        permissions:
          - copilot:narrative:write
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NarrativeResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormatRequest'
        required: true
  /copilot/sources:
    get:
      summary: Get an AI sources
      operationId: get-ai-sources
      x-flagright:
        permissions:
          - copilot:narrative:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiSourcesResponse'
  /users/{userId}/comments/{commentId}:
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
      - schema:
          type: string
        name: commentId
        in: path
        required: true
    delete:
      summary: Delete a User Comment
      operationId: delete-users-userId-comments-commentId
      x-flagright:
        permissions:
          - users:user-comments:write
      responses:
        '200':
          description: OK
    post:
      summary: Create a User Comment Reply
      operationId: post-users-comments-reply
      x-flagright:
        permissions:
          - users:user-comments:write
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '404':
          description: Not Found
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentRequest'
        required: true
  /consumer/users/{userId}:
    get:
      summary: Consumer Users - Item - GET
      tags: []
      x-flagright:
        permissions:
          - users:user-overview:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalConsumerUser'
              examples: {}
      operationId: get-consumer-users-item
      description: ''
      parameters: []
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
    post:
      summary: Consumer Users - Item - POST
      operationId: post-consumer-users-userId
      x-flagright:
        permissions:
          - users:user-overview:write
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateRequest'
        required: true
  /business/users:
    get:
      summary: Business Users - List
      tags: []
      x-flagright:
        permissions:
          - users:user-overview:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessUsersListResponse'
              examples: {}
      operationId: get-business-users-list
      description: ''
      parameters:
        - schema:
            $ref: '#/components/schemas/PageSize'
          in: query
          name: pageSize
        - schema:
            type: string
          in: query
          name: start
        - schema:
            type: string
            enum:
              - asc
              - desc
          in: query
          name: order
        - schema:
            type: number
          in: query
          name: afterTimestamp
        - schema:
            type: number
          in: query
          name: beforeTimestamp
        - schema:
            type: string
          in: query
          name: filterId
        - schema:
            type: string
          in: query
          name: filterName
        - schema:
            type: string
          in: query
          name: filterTagKey
        - schema:
            type: string
          in: query
          name: filterTagValue
        - schema:
            $ref: '#/components/schemas/FilterOperator'
          in: query
          name: filterOperator
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterBusinessIndustries
        - schema:
            type: array
            items:
              $ref: ../public/openapi-public-original.yaml#/components/schemas/UserRegistrationStatus
          in: query
          name: filterUserRegistrationStatus
        - schema:
            type: array
            items:
              $ref: '#/components/schemas/RiskLevel'
          in: query
          name: filterRiskLevel
        - schema:
            type: string
          in: query
          name: sortField
        - schema:
            type: string
          in: query
          name: filterRiskLevelLocked
        - schema:
            $ref: '#/components/schemas/SortOrder'
          in: query
          name: sortOrder
    parameters: []
  /users/{userId}:
    get:
      summary: Users - Item - Get
      tags: []
      x-flagright:
        permissions:
          - users:user-overview:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalUser'
              examples: {}
      operationId: get-users-item
      description: ''
      parameters: []
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
  /users/{userId}/events:
    get:
      summary: Events - List
      x-flagright:
        permissions:
          - users:user-overview:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalUserEventsResponse'
              examples: {}
      operationId: get-events-list
      description: ''
      parameters:
        - schema:
            type: string
          name: userId
          in: path
          required: true
        - schema:
            $ref: '#/components/schemas/PageSize'
          in: query
          name: pageSize
        - schema:
            $ref: '#/components/schemas/Page'
          in: query
          name: page
        - schema:
            type: string
          in: query
          name: sortField
        - schema:
            $ref: '#/components/schemas/SortOrder'
          in: query
          name: sortOrder
  /business/users/{userId}:
    get:
      summary: Business Users - Item - Get
      tags: []
      x-flagright:
        permissions:
          - users:user-overview:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalBusinessUser'
              examples: {}
      operationId: get-business-users-item
      description: ''
      parameters: []
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
    post:
      summary: Business Users - Item - POST
      operationId: post-business-users-userId
      x-flagright:
        permissions:
          - users:user-overview:write
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateRequest'
        required: true
  /merchant-monitoring/summary:
    post:
      summary: Merchant Monitoring
      operationId: post-merchant-summary
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantMonitoringSummaryResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantMonitoringSummaryRequest'
        required: true
  /merchant-monitoring/scrape:
    post:
      summary: Merchant Monitoring Scrape
      operationId: post-merchant-scrape
      x-flagright:
        permissions:
          - users:user-overview:write
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantMonitoringSummary'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantMonitoringScrapeRequest'
        required: true
  /merchant-monitoring/history:
    post:
      summary: Merchant Monitoring
      operationId: post-merchant-history
      x-flagright:
        permissions:
          - users:user-overview:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantMonitoringSummaryResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantMonitoringSummaryRequest'
        required: true
  /users/uniques:
    get:
      summary: User - Unique values for different fields
      tags: []
      x-flagright:
        permissions:
          - users:user-overview:read
      parameters:
        - schema:
            $ref: '#/components/schemas/UsersUniquesField'
          name: field
          in: query
          required: true
        - schema:
            type: string
          name: filter
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      operationId: get-users-uniques
  /dashboard_stats/transactions:
    get:
      summary: DashboardStats - Transactions
      tags: []
      x-flagright:
        permissions:
          - dashboard:download-data:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardStatsTransactionsCount'
              examples: {}
      operationId: get-dashboard-stats-transactions
      description: ''
      parameters:
        - schema:
            type: number
          in: query
          name: startTimestamp
        - schema:
            type: number
          in: query
          name: endTimestamp
        - schema:
            type: string
            enum:
              - HOUR
              - MONTH
              - DAY
          in: query
          name: granularity
    parameters: []
  /dashboard_stats/transactions/total:
    get:
      summary: DashboardStats - Transactions - Total
      tags: []
      x-flagright:
        permissions:
          - dashboard:download-data:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/DashboardStatsTransactionsCountItem'
                required:
                  - data
              examples: {}
      operationId: get-dashboard-stats-transactions-total
      description: ''
      parameters:
        - schema:
            type: number
          in: query
          name: startTimestamp
        - schema:
            type: number
          in: query
          name: endTimestamp
    parameters: []
  /dashboard_stats/rule_hit:
    get:
      summary: DashboardStats - Rule hit
      tags: []
      x-flagright:
        permissions:
          - dashboard:download-data:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardStatsRulesCount'
              examples: {}
      operationId: get-dashboard-stats-rule-hit
      description: ''
      parameters:
        - schema:
            type: number
          in: query
          name: startTimestamp
        - schema:
            type: number
          in: query
          name: endTimestamp
    parameters: []
  /dashboard_stats/users/by_time:
    get:
      summary: DashboardStats - Users - By time
      tags: []
      x-flagright:
        permissions:
          - dashboard:download-data:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DashboardStatsUsersStats'
      operationId: get-dashboard-stats-users-by-time
      parameters:
        - schema:
            type: string
            enum:
              - BUSINESS
              - CONSUMER
          in: query
          name: userType
          required: true
        - schema:
            type: number
          in: query
          name: startTimestamp
        - schema:
            type: number
          in: query
          name: endTimestamp
        - schema:
            type: string
            enum:
              - HOUR
              - MONTH
              - DAY
          in: query
          name: granularity
    parameters: []
  /dashboard_stats/hits_per_user:
    get:
      summary: DashboardStats - Hits per user
      tags: []
      x-flagright:
        permissions:
          - dashboard:download-data:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardStatsHitsPerUser'
              examples: {}
      operationId: get-dashboard-stats-hits-per-user
      description: ''
      parameters:
        - schema:
            type: number
          in: query
          name: startTimestamp
        - schema:
            type: number
          in: query
          name: endTimestamp
        - schema:
            type: string
            enum:
              - ORIGIN
              - DESTINATION
          in: query
          name: direction
        - schema:
            type: string
            enum:
              - BUSINESS
              - CONSUMER
          in: query
          name: userType
  /dashboard_stats/team:
    get:
      summary: DashboardStats - Team
      tags: []
      x-flagright:
        permissions:
          - dashboard:download-data:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DashboardTeamStatsItem'
      operationId: get-dashboard-team-stats
      description: ''
      parameters:
        - schema:
            type: string
            enum:
              - CASES
              - ALERTS
          in: query
          name: scope
          required: true
        - schema:
            type: number
          in: query
          name: startTimestamp
        - schema:
            type: number
          in: query
          name: endTimestamp
        - schema:
            type: array
            items:
              $ref: '#/components/schemas/CaseStatus'
          in: query
          name: caseStatus
  /dashboard_stats/latest_team:
    get:
      summary: DashboardStats - Latest Team
      tags: []
      x-flagright:
        permissions:
          - dashboard:download-data:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DashboardLatestTeamStatsItem'
      operationId: get-dashboard-latest-team-stats
      description: ''
      parameters:
        - schema:
            type: string
            enum:
              - CASES
              - ALERTS
          in: query
          name: scope
          required: true
  /dashboard_stats/overview:
    get:
      summary: DashboardStats - Overview
      tags: []
      x-flagright:
        permissions:
          - dashboard:download-data:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardStatsOverview'
              examples: {}
      operationId: get-dashboard-stats-overview
      description: ''
  /dashboard_stats/closing_reason_distribution:
    get:
      summary: DashboardStats - ClosingReasonDistributionStats
      tags: []
      x-flagright:
        permissions:
          - dashboard:download-data:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardStatsClosingReasonDistributionStats'
              examples: {}
      operationId: get-dashboard-stats-closing-reason-distribution-stats
      description: ''
      parameters:
        - schema:
            type: string
            enum:
              - CASE
              - ALERT
          in: query
          name: entity
        - schema:
            type: number
          in: query
          name: startTimestamp
        - schema:
            type: number
          in: query
          name: endTimestamp
  /dashboard_stats/alert_and_case_status_distribution:
    get:
      summary: DashboardStats - AlertAndCaseStatusDistributionStats
      tags: []
      x-flagright:
        permissions:
          - dashboard:download-data:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardStatsAlertAndCaseStatusDistributionStats'
              examples: {}
      operationId: get-dashboard-stats-alert-and-case-status-distribution-stats
      description: ''
      parameters:
        - schema:
            type: number
          in: query
          name: startTimestamp
        - schema:
            type: number
          in: query
          name: endTimestamp
        - schema:
            type: string
            enum:
              - CASE
              - ALERT
          in: query
          name: entity
        - schema:
            type: string
            enum:
              - HOUR
              - MONTH
              - DAY
          in: query
          name: granularity
    parameters: []
  /dashboard_stats/alert_priority_distribution:
    get:
      summary: DashboardStats - AlertPriorityDistributionStats
      tags: []
      x-flagright:
        permissions:
          - dashboard:download-data:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardStatsAlertPriorityDistributionStats'
              examples: {}
      operationId: get-dashboard-stats-alert-priority-distribution-stats
      description: ''
      parameters:
        - schema:
            type: number
          in: query
          name: startTimestamp
        - schema:
            type: number
          in: query
          name: endTimestamp
  /dashboard_stats/qa/alerts-by-rule-hit:
    get:
      summary: DashboardStats - Alerts by rule hit
      tags: []
      x-flagright:
        permissions:
          - dashboard:download-data:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardStatsQaAlertsCountByRule'
              examples: {}
      operationId: get-dashboard-stats-qa-alerts-by-rule-hit
      description: ''
      parameters:
        - schema:
            type: number
          in: query
          name: startTimestamp
        - schema:
            type: number
          in: query
          name: endTimestamp
    parameters: []
  /dashboard_stats/qa/alerts-stats-by-checklist-reason:
    get:
      summary: DashboardStats - Alerts stats by checklist reason
      tags: []
      x-flagright:
        permissions:
          - dashboard:download-data:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardStatsQaAlertsStatsByChecklistReason'
              examples: {}
      operationId: get-dashboard-stats-qa-alerts-stats-by-checklist-reason
      description: ''
      parameters:
        - schema:
            type: number
          in: query
          name: startTimestamp
        - schema:
            type: number
          in: query
          name: endTimestamp
        - schema:
            type: string
          in: query
          name: checklistTemplateId
        - schema:
            type: string
          in: query
          name: checklistCategory
    parameters: []
  /dashboard_stats/qa/overview:
    get:
      summary: DashboardStats - QA overview
      tags: []
      x-flagright:
        permissions:
          - dashboard:download-data:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardStatsQaOverview'
              examples: {}
      operationId: get-dashboard-stats-qa-overview
      description: ''
      parameters:
        - schema:
            type: number
          in: query
          name: startTimestamp
        - schema:
            type: number
          in: query
          name: endTimestamp
    parameters: []
  /dashboard_stats/qa/alerts-by-assignee:
    get:
      summary: DashboardStats - Alerts by assignee
      tags: []
      x-flagright:
        permissions:
          - dashboard:download-data:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardStatsQaAlertsCountByAssignee'
              examples: {}
      operationId: get-dashboard-stats-qa-alerts-by-assignee
      description: ''
      parameters:
        - schema:
            type: number
          in: query
          name: startTimestamp
        - schema:
            type: number
          in: query
          name: endTimestamp
    parameters: []
  /tenants:
    get:
      summary: Tenant - List
      operationId: get-tenants-list
      x-flagright:
        alwaysAllowedAccess: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tenant'
    post:
      summary: Tenant - Create
      operationId: post-create-tenant
      x-flagright:
        alwaysAllowedAccess: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantCreationResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantCreationRequest'
        required: true
  /tenants/settings:
    get:
      summary: Tenant - Get Settings
      operationId: get-tenants-settings
      x-flagright:
        alwaysAllowedAccess: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantSettings'
    parameters: []
    post:
      summary: Tenant - POST Settings
      operationId: post-tenants-settings
      x-flagright:
        alwaysAllowedAccess: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantSettings'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantSettings'
        required: true
  /tenants/batch-job:
    post:
      summary: Tenant - Trigger Batch Job
      operationId: post-tenants-trigger-batch-job
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantTriggerBatchJobRequest'
        required: true
  /tenant/apiKeys:
    get:
      parameters:
        - schema:
            type: boolean
          name: unmask
          in: query
        - schema:
            type: string
          name: unmaskApiKeyId
          in: query
      x-flagright:
        permissions:
          - settings:organisation:read
      summary: Tenant - Get API Keys
      operationId: get-tenant-api-keys
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TenantApiKey'
  /clueso/token:
    get:
      summary: Clueso auth token
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
      operationId: get-clueso-auth-token
    parameters: []
  /roles:
    get:
      summary: Role - List
      operationId: get-roles
      tags: []
      x-flagright:
        permissions:
          - settings:organisation:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountRole'
    post:
      summary: Role - Create
      operationId: create-role
      tags: []
      x-flagright:
        permissions:
          - settings:organisation:write
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountRole'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountRole'
        '403':
          description: Not enough privileges
  /roles/{roleId}:
    patch:
      summary: Role - Patch
      operationId: update-role
      tags: []
      parameters:
        - schema:
            type: string
          name: roleId
          in: path
          required: true
      x-flagright:
        permissions:
          - settings:organisation:write
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRole'
        required: true
      responses:
        '200':
          description: OK
        '403':
          description: Not enough privileges
    delete:
      summary: Role - Delete
      operationId: delete-role
      tags: []
      parameters:
        - schema:
            type: string
          name: roleId
          in: path
          required: true
      x-flagright:
        permissions:
          - settings:organisation:write
      responses:
        '200':
          description: OK
        '403':
          description: Not enough privileges
    get:
      summary: Role - Get
      operationId: get-role
      tags: []
      x-flagright:
        permissions:
          - settings:organisation:read
      parameters:
        - schema:
            type: string
          name: roleId
          in: path
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountRole'
  /accounts/{accountId}/change_tenant:
    parameters:
      - schema:
          type: string
        name: accountId
        in: path
        required: true
    post:
      summary: Account - Change Tenant
      operationId: accounts-change-tenant
      x-flagright:
        alwaysAllowedAccess: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              title: ChangeTenantPayload
              properties:
                newTenantId:
                  type: string
              required:
                - newTenantId
        required: true
      responses:
        '200':
          description: OK
        '403':
          description: Not enough privileges
  /tenant/usageData:
    get:
      summary: Tenant - Get Usage Data
      operationId: get-tenant-usage-data
      x-flagright:
        permissions:
          - settings:developers:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantUsageData'
  /accounts/{accountId}/settings:
    parameters:
      - schema:
          type: string
        name: accountId
        in: path
        required: true
    get:
      summary: Account - Change Settings
      operationId: account-get-settings
      x-flagright:
        alwaysAllowedAccess: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSettings'
        '403':
          description: Not enough privileges
    patch:
      deprecated: true
      summary: Account - Change Settings
      operationId: account-change-settings
      x-flagright:
        alwaysAllowedAccess: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountSettings'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSettings'
        '403':
          description: Not enough privileges
  /accounts/{accountId}:
    parameters:
      - schema:
          type: string
        name: accountId
        in: path
        required: true
    post:
      summary: Account - Edit
      operationId: accounts-edit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountPatchPayload'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '403':
          description: Not enough privileges
    delete:
      summary: Account - Delete
      operationId: accounts-delete
      x-flagright:
        permissions:
          - settings:organisation:write
      responses:
        '200':
          description: OK
        '403':
          description: Not enough privileges
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountDeletePayload'
        required: true
  /me:
    get:
      summary: Get details about current user
      operationId: me
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
  /accounts/{accountId}/resend-invite:
    parameters:
      - schema:
          type: string
        name: accountId
        in: path
        required: true
    post:
      summary: Account - Resend Invite
      operationId: accounts-resend-invite
      x-flagright:
        permissions:
          - settings:organisation:write
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendAccountInvitePayload'
        required: true
      responses:
        '200':
          description: OK
        '403':
          description: Not enough privileges
  /accounts:
    post:
      summary: Account - Invite
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountInvitePayload'
        required: true
      operationId: accounts-invite
      x-flagright:
        permissions:
          - settings:organisation:write
    get:
      summary: Account - List
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
      operationId: get-accounts
  /pulse/risk-classification:
    get:
      summary: Risk classification - GET
      tags: []
      x-flagright:
        permissions:
          - risk-scoring:risk-levels:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RiskClassificationScore'
              examples:
                example-1:
                  value:
                    - riskLevel: VERY_LOW
                      lowerBoundRiskScore: 0
                      upperBoundRiskScore: 25
      operationId: get-pulse-risk-classification
      description: ''
    post:
      summary: Risk classification - POST
      operationId: post-pulse-risk-classification
      x-flagright:
        permissions:
          - risk-scoring:risk-levels:write
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RiskClassificationScore'
              examples:
                example-1:
                  value:
                    - riskLevel: VERY_LOW
                      lowerBoundRiskScore: 0
                      upperBoundRiskScore: 25
        '400':
          description: Bad Request
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/RiskClassificationScore'
        required: true
    parameters: []
  /pulse/risk-assignment:
    parameters: []
    post:
      summary: Risk Level - Manual Assignment
      operationId: pulse-manual-risk-assignment
      x-flagright:
        permissions:
          - risk-scoring:risk-levels:write
      requestBody:
        content:
          application/json:
            schema:
              type: object
              title: ManualRiskAssignmentPayload
              properties:
                riskLevel:
                  $ref: '#/components/schemas/RiskLevel'
                isUpdatable:
                  type: boolean
        required: true
        description: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DrsScore'
        '403':
          description: Not enough privileges
      parameters:
        - schema:
            type: string
          in: query
          name: userId
          required: true
          description: UserID of the user whose risk is being manually assigned
    get:
      summary: Risk Level - Get Manual Assignment
      operationId: get-pulse-risk-assignment
      x-flagright:
        permissions:
          - risk-scoring:risk-levels:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DrsScore'
        '403':
          description: Not enough privileges
      parameters:
        - schema:
            type: string
          in: query
          name: userId
          required: true
          description: UserID of the user to get manual risk assignment settings
  /pulse/krs-value:
    parameters: []
    get:
      summary: KYC Risk Value
      operationId: get-krs-value
      x-flagright:
        permissions:
          - risk-scoring:risk-levels:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KrsScore'
        '403':
          description: Not enough privileges
      parameters:
        - schema:
            type: string
          in: query
          name: userId
          required: true
          description: UserID of the user to get KYC Risk Score
  /pulse/ars-value:
    parameters: []
    get:
      summary: Action Risk Value
      operationId: get-ars-value
      x-flagright:
        permissions:
          - risk-scoring:risk-levels:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArsScore'
        '403':
          description: Not enough privileges
      parameters:
        - schema:
            type: string
          in: query
          name: transactionId
          required: true
          description: transactionId of the transaction to get Action Risk Score
  /pulse/drs-value:
    parameters: []
    get:
      summary: Dynamic Risk Value
      operationId: get-drs-value
      x-flagright:
        permissions:
          - risk-scoring:risk-levels:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DrsScore'
        '403':
          description: Not enough privileges
      parameters:
        - schema:
            type: string
          in: query
          name: userId
          required: true
          description: UserID of the user to get Dynamic Risk Score
  /pulse/average-ars-value:
    parameters:
      - schema:
          type: string
        name: userId
        in: query
        required: true
    get:
      summary: TRS Scores of User
      x-flagright:
        permissions:
          - users:user-overview:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrsScoresResponse'
              examples: {}
      operationId: get-trs-scores
      description: ''
  /auditlog:
    parameters: []
    get:
      summary: AuditLog
      operationId: get-auditlog
      x-flagright:
        permissions:
          - audit-log:export:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogListResponse'
        '403':
          description: Not enough privileges
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      parameters:
        - schema:
            $ref: '#/components/schemas/PageSize'
          in: query
          name: pageSize
        - schema:
            $ref: '#/components/schemas/Page'
          in: query
          name: page
        - schema:
            type: number
          in: query
          name: beforeTimestamp
        - schema:
            type: number
          in: query
          name: afterTimestamp
        - schema:
            type: string
          in: query
          name: sortField
        - schema:
            $ref: '#/components/schemas/SortOrder'
          in: query
          name: sortOrder
        - schema:
            type: array
            items:
              $ref: '#/components/schemas/AuditLogType'
          in: query
          name: filterTypes
        - schema:
            type: array
            items:
              type: string
          in: query
          name: searchEntityId
        - schema:
            type: array
            items:
              $ref: '#/components/schemas/AuditLogActionEnum'
          in: query
          name: filterActions
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterActionTakenBy
        - schema:
            type: boolean
          in: query
          name: includeRootUserRecords
        - schema:
            type: array
            items:
              $ref: '#/components/schemas/CaseStatus'
          in: query
          name: caseStatus
        - schema:
            type: array
            items:
              $ref: '#/components/schemas/AlertStatus'
          in: query
          name: alertStatus
      description: ''
  /pulse/risk-parameter:
    parameters: []
    post:
      summary: Parameter Risk Level - POST
      operationId: post-pulse-risk-parameter
      x-flagright:
        permissions:
          - risk-scoring:risk-factors:write
      requestBody:
        content:
          application/json:
            schema:
              type: object
              title: PostPulseRiskParameters
              properties:
                parameterAttributeRiskValues:
                  $ref: '#/components/schemas/ParameterAttributeRiskValues'
              required:
                - parameterAttributeRiskValues
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterAttributeRiskValues'
        '403':
          description: Not enough privileges
      parameters: []
      description
    get:
      summary: Parameter Risk Level - GET
      operationId: get-pulse-risk-parameter
      x-flagright:
        permissions:
          - risk-scoring:risk-factors:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterAttributeRiskValues'
      parameters:
        - schema:
            type: string
          in: query
          name: parameter
          description: Parameter you want to filter on
        - schema:
            $ref: '#/components/schemas/RiskEntityType'
          in: query
          name: entityType
          description: Entity type you want to filter on
  /pulse/risk-parameters:
    parameters: []
    post:
      summary: Parameters Risk Level - POST
      operationId: post-pulse-risk-parameters
      x-flagright:
        permissions:
          - risk-scoring:risk-factors:write
      requestBody:
        content:
          application/json:
            schema:
              type: object
              title: PostPulseRiskParametersBulk
              properties:
                parameterAttributeRiskValues:
                  type: array
                  items:
                    $ref: '#/components/schemas/ParameterAttributeRiskValues'
              required:
                - parameterAttributeRiskValues
        required: true
      responses:
        '200':
          description: OK
        '403':
          description: Not enough privileges
      parameters: []
      description: ''
    get:
      summary: Parameters Risk Level - GET
      operationId: get-pulse-risk-parameters
      x-flagright:
        permissions:
          - risk-scoring:risk-factors:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ParameterAttributeRiskValues'
  /slack/oauth_redirect:
    get:
      summary: Slack OAuth Redirect
      tags: []
      responses:
        '200':
          description: OK
      operationId: get-slack-oauth-redirect
    parameters: []
  /webhooks:
    post:
      summary: Create a new webhook
      operationId: post-webhooks
      x-flagright:
        permissions:
          - settings:developers:write
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookConfiguration'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookConfiguration'
        required: true
    get:
      summary: Get all webhooks
      operationId: get-webhooks
      x-flagright:
        permissions:
          - settings:developers:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebhookConfiguration'
  /webhooks/{webhookId}:
    post:
      summary: Update a webhook
      operationId: post-webhooks-webhookid
      x-flagright:
        permissions:
          - settings:developers:write
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookConfiguration'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookConfiguration'
        required: true
    parameters:
      - schema:
          type: string
        name: webhookId
        in: path
        required: true
    delete:
      summary: Delete a webhook
      operationId: delete-webhooks-webhookId
      x-flagright:
        permissions:
          - settings:developers:write
      responses:
        '200':
          description: OK
  /webhooks/{webhookId}/secret:
    parameters:
      - schema:
          type: string
        name: webhookId
        in: path
        required: true
    get:
      summary: Get secret of a webhook
      x-flagright:
        permissions:
          - settings:developers:read
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookSecrets'
      operationId: get-webhooks-webhookId-secret
  /webhooks/{webhookId}/deliveries:
    parameters:
      - schema:
          type: string
        name: webhookId
        in: path
        required: true
    get:
      summary: Get webhook deliveries
      x-flagright:
        permissions:
          - settings:developers:read
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebhookDeliveryAttempt'
      operationId: get-webhooks-webhook_id-deliveries
      parameters:
        - schema:
            $ref: '#/components/schemas/PageSize'
          in: query
          name: pageSize
        - schema:
            $ref: '#/components/schemas/Page'
          in: query
          name: page
  /transactions/action:
    post:
      summary: Apply an action on transactions
      operationId: apply-transactions-action
      responses:
        '200':
          description: OK
      x-flagright:
        permissions:
          - transactions:overview:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionAction'
  /alerts/{alertId}/transactions:
    parameters:
      - schema:
          type: string
        in: query
        name: start
      - schema:
          type: string
        in: query
        name: sortField
      - schema:
          $ref: '#/components/schemas/SortOrder'
        in: query
        name: sortOrder
      - schema:
          type: number
        in: query
        name: beforeTimestamp
      - schema:
          type: number
        in: query
        name: afterTimestamp
      - schema:
          type: string
        name: alertId
        in: path
        required: true
      - schema:
          $ref: '#/components/schemas/PageSize'
        in: query
        name: pageSize
      - schema:
          $ref: '#/components/schemas/Page'
        in: query
        name: page
      - schema:
          type: string
        in: query
        name: userId
      - schema:
          type: string
        in: query
        name: originUserId
      - schema:
          type: string
        in: query
        name: destinationUserId
      - schema:
          type: string
        in: query
        name: filterOriginPaymentMethodId
      - schema:
          type: string
        in: query
        name: filterDestinationPaymentMethodId
      - schema:
          type: string
        in: query
        name: filterTransactionId
      - schema:
          $ref: ../public/openapi-public-original.yaml#/components/schemas/TransactionType
        in: query
        name: filterTransactionType
      - schema:
          type: array
          items:
            $ref: ../public/openapi-public-original.yaml#/components/schemas/PaymentMethod
        in: query
        name: filterOriginPaymentMethods
      - schema:
          type: array
          items:
            $ref: ../public/openapi-public-original.yaml#/components/schemas/PaymentMethod
        in: query
        name: filterDestinationPaymentMethods
      - schema:
          type: array
          items:
            $ref: ../public/openapi-public-original.yaml#/components/schemas/CurrencyCode
        in: query
        name: filterOriginCurrencies
      - schema:
          type: array
          items:
            $ref: ../public/openapi-public-original.yaml#/components/schemas/CurrencyCode
        in: query
        name: filterDestinationCurrencies
    get:
      summary: Alerts - Item - Transaction List
      operationId: get-alert-transaction-list
      x-flagright:
        permissions:
          - transactions:overview:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsResponse'
  /alerts:
    get:
      summary: Alerts - List
      tags: []
      x-flagright:
        permissions:
          - case-management:case-overview:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertListResponse'
              examples: {}
      operationId: get-alert-list
      description: ''
      parameters:
        - schema:
            $ref: '#/components/schemas/PageSize'
          in: query
          name: pageSize
        - schema:
            $ref: '#/components/schemas/Page'
          in: query
          name: page
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterAssignmentsIds
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterQaAssignmentsIds
        - schema:
            type: string
          in: query
          name: filterAlertId
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterAlertIds
        - schema:
            type: number
          in: query
          name: afterTimestamp
        - schema:
            type: number
          in: query
          name: beforeTimestamp
        - schema:
            type: array
            items:
              $ref: '#/components/schemas/ChecklistStatus'
          in: query
          name: filterQaStatus
        - schema:
            type: array
            items:
              $ref: '#/components/schemas/ChecklistStatus'
          in: query
          name: filterOutQaStatus
        - schema:
            type: number
          in: query
          name: qaSampling
        - schema:
            type: string
          in: query
          name: filterId
        - schema:
            $ref: '#/components/schemas/RuleAction'
          in: query
          name: filterOutStatus
        - schema:
            type: array
            items:
              $ref: '#/components/schemas/CaseStatus'
          in: query
          name: filterOutCaseStatus
        - schema:
            type: array
            items:
              $ref: '#/components/schemas/AlertStatus'
          in: query
          name: filterOutAlertStatus
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterRulesExecuted
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterRulesHit
        - schema:
            type: string
          in: query
          name: transactionType
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterBusinessIndustries
        - schema:
            type: string
          in: query
          name: sortField
        - schema:
            $ref: '#/components/schemas/SortOrder'
          in: query
          name: sortOrder
        - schema:
            type: string
          in: query
          name: filterUserId
        - schema:
            type: string
          in: query
          name: filterOriginUserId
        - schema:
            type: array
            items:
              $ref: '#/components/schemas/Priority'
          in: query
          name: filterAlertPriority
        - schema:
            type: string
          in: query
          name: filterDestinationUserId
        - schema:
            type: array
            items:
              $ref: '#/components/schemas/CaseStatus'
          in: query
          name: filterCaseStatus
        - schema:
            type: array
            items:
              $ref: '#/components/schemas/AlertStatus'
          in: query
          name: filterAlertStatus
        - schema:
            type: array
            items:
              $ref: ../public/openapi-public-original.yaml#/components/schemas/PaymentMethod
          in: query
          name: filterOriginPaymentMethods
        - schema:
            type: array
            items:
              $ref: ../public/openapi-public-original.yaml#/components/schemas/PaymentMethod
          in: query
          name: filterDestinationPaymentMethods
        - schema:
            $ref: '#/components/schemas/Priority'
          in: query
          name: filterPriority
        - schema:
            type: string
          in: query
          name: filterTransactionTagKey
        - schema:
            type: string
          in: query
          name: filterTransactionTagValue
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterTransactionIds
        - schema:
            type: array
            items:
              $ref: ../public/openapi-public-original.yaml#/components/schemas/UserState
          in: query
          name: filterUserState
        - schema:
            type: array
            items:
              $ref: ../public/openapi-public-original.yaml#/components/schemas/RiskLevel
          in: query
          name: filterRiskLevel
        - schema:
            type: string
          in: query
          name: filterCaseId
        - schema:
            $ref: '#/components/schemas/RuleAction'
          in: query
          name: filterAction
        - schema:
            type: number
          in: query
          name: filterAlertsByLastUpdatedStartTimestamp
        - schema:
            type: number
          in: query
          name: filterAlertsByLastUpdatedEndTimestamp
        - schema:
            type: number
          in: query
          name: filterAlertBeforeCreatedTimestamp
        - schema:
            type: number
          in: query
          name: filterAlertAfterCreatedTimestamp
        - schema:
            type: number
          in: query
          name: filterCaseBeforeCreatedTimestamp
        - schema:
            type: number
          in: query
          name: filterCaseAfterCreatedTimestamp
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterRuleInstanceId
        - schema:
            type: array
            items:
              $ref: '#/components/schemas/CaseReasons'
          in: query
          name: filterClosingReason
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterRuleQueueIds
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterRuleNature
        - schema:
            type: array
            items:
              $ref: '#/components/schemas/CaseType'
          in: query
          name: filterCaseTypes
  /alerts/statusChange:
    patch:
      summary: Alerts - Status Change
      operationId: alerts-status-change
      responses:
        '200':
          description: OK
      x-flagright:
        permissions:
          - case-management:case-overview:write
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertsStatusUpdateRequest'
        required: true
  /alerts/qaStatusChange:
    patch:
      summary: Alerts - QA Status Change
      operationId: alerts-qa-status-change
      responses:
        '200':
          description: OK
      x-flagright:
        permissions:
          - case-management:qa:write
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertQaStatusUpdateRequest'
        required: true
    post:
      summary: Alerts - Validate QA Statuses
      operationId: alerts-validate-qa-statuses
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateAlertsQAStatusResponse'
      x-flagright:
        permissions:
          - case-management:qa:write
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateAlertsQAStatusRequest'
        required: true
  /alerts/{alertId}/qa:
    patch:
      summary: Alerts - Item Qa Status
      operationId: patch-alerts-qa-status
      parameters:
        - schema:
            type: string
          name: alertId
          in: path
          required: true
      responses:
        '200':
          description: OK
      x-flagright:
        permissions:
          - case-management:qa:write
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertChecklistQaUpdateRequest'
        required: true
  /alerts/{alertId}/checklist:
    patch:
      summary: Alerts - Qa Status
      operationId: patch-alerts-checklist-status
      parameters:
        - schema:
            type: string
          name: alertId
          in: path
          required: true
      responses:
        '200':
          description: OK
      x-flagright:
        permissions:
          - case-management:case-overview:write
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertChecklistUpdateRequest'
        required: true
  /alerts/{alertId}/qaAssignment:
    patch:
      summary: Alerts - QA Assignments
      operationId: patch-alerts-qa-assignments
      parameters:
        - schema:
            type: string
          name: alertId
          in: path
          required: true
      responses:
        '200':
          description: OK
      x-flagright:
        permissions:
          - case-management:qa:write
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertQaAssignmentsUpdateRequest'
        required: true
  /alerts/assignments:
    patch:
      summary: Alerts - Update
      operationId: alerts-assignment
      responses:
        '200':
          description: OK
      x-flagright:
        permissions:
          - case-management:case-overview:write
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertsAssignmentsUpdateRequest'
        required: true
  /alerts/reviewAssignments:
    patch:
      summary: Alerts - Update
      operationId: alerts-review-assignment
      responses:
        '200':
          description: OK
      x-flagright:
        permissions:
          - case-management:case-overview:write
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertsReviewAssignmentsUpdateRequest'
        required: true
  /alerts/{alertId}:
    parameters:
      - schema:
          type: string
        name: alertId
        in: path
        required: true
    get:
      summary: Alerts - Get Alert
      operationId: get-alert
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
  /alerts/qaSampling:
    post:
      summary: Alerts - QA Sampling
      operationId: create-alerts-qa-sampling
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertsQaSampling'
      x-flagright:
        permissions:
          - case-management:qa:write
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertsQaSamplingRequest'
        required: true
    get:
      summary: Alerts - QA Sampling
      operationId: get-alerts-qa-sampling
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertQASamplingListResponse'
      parameters:
        - schema:
            $ref: '#/components/schemas/PageSize'
          in: query
          name: pageSize
        - schema:
            $ref: '#/components/schemas/Page'
          in: query
          name: page
        - schema:
            type: string
          in: query
          name: sortField
        - schema:
            $ref: '#/components/schemas/SortOrder'
          in: query
          name: sortOrder
        - schema:
            type: string
          in: query
          name: filterSampleId
        - schema:
            type: string
          in: query
          name: filterSampleName
        - schema:
            type: number
          in: query
          name: filterSamplePercentage
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterCreatedById
        - schema:
            type: number
          in: query
          name: filterCreatedBeforeTimestamp
        - schema:
            type: number
          in: query
          name: filterCreatedAfterTimestamp
        - schema:
            type: array
            items:
              $ref: '#/components/schemas/CaseReasons'
          in: query
          name: filterClosingReason
        - schema:
            type: array
            items:
              $ref: '#/components/schemas/Priority'
          in: query
          name: filterPriority
        - schema:
            type: string
          in: query
          name: filterDescription
  /alerts/qa/{sampleId}/sampling:
    parameters:
      - schema:
          type: string
        name: sampleId
        in: path
        required: true
    get:
      summary: Alerts - QA Sample
      operationId: get-alerts-qa-sample
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertsQaSampling'
    patch:
      summary: Alerts - QA Sample
      operationId: patch-alerts-qa-sample
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertsQaSampling'
      x-flagright:
        permissions:
          - case-management:qa:write
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertsQaSamplingUpdateRequest'
        required: true
    delete:
      summary: Alerts - QA Sample
      operationId: delete-alerts-qa-sample
      responses:
        '200':
          description: OK
      x-flagright:
        permissions:
          - case-management:qa:write
  /alerts/qa-sample-ids:
    get:
      summary: Alerts - QA Sample IDs
      operationId: get-alerts-qa-sample-ids
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AlertsQASampleIds'
  /alerts/new-case:
    post:
      summary: Alerts - New Case
      operationId: alerts-no-new-case
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Case'
      x-flagright:
        permissions:
          - case-management:case-overview:write
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertsToNewCaseRequest'
        required: true
  /alerts/{alertId}/comments:
    parameters:
      - schema:
          type: string
        name: alertId
        in: path
        required: true
    post:
      summary: Alerts - New Case
      operationId: create-alerts-comment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
      x-flagright:
        permissions:
          - case-management:case-overview:write
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentRequest'
        required: true
  /alerts/{alertId}/comments/{commentId}:
    parameters:
      - schema:
          type: string
        name: alertId
        in: path
        required: true
      - schema:
          type: string
        name: commentId
        in: path
        required: true
    delete:
      summary: Alerts - New Case
      operationId: delete-alerts-comment
      responses:
        '200':
          description: OK
      x-flagright:
        permissions:
          - case-management:case-overview:write
    post:
      summary: Alerts - New comment reply
      operationId: create-alerts-comment-reply
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
      x-flagright:
        permissions:
          - case-management:case-overview:write
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentRequest'
        required: true
  /cases:
    get:
      summary: Cases - List
      tags: []
      x-flagright:
        permissions:
          - case-management:case-overview:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CasesListResponse'
              examples: {}
      operationId: get-case-list
      description: ''
      parameters:
        - schema:
            $ref: '#/components/schemas/PageSize'
          in: query
          name: pageSize
        - schema:
            $ref: '#/components/schemas/Page'
          in: query
          name: page
        - schema:
            type: number
          in: query
          name: afterTimestamp
        - schema:
            type: number
          in: query
          name: beforeTimestamp
        - schema:
            type: string
          in: query
          name: filterId
        - schema:
            type: string
          in: query
          name: filterIdExact
        - schema:
            type: array
            items:
              $ref: '#/components/schemas/CaseStatus'
          in: query
          name: filterOutCaseStatus
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterRulesExecuted
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterRulesHit
        - schema:
            type: string
          in: query
          name: transactionType
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterBusinessIndustries
        - schema:
            type: string
          in: query
          name: sortField
        - schema:
            $ref: '#/components/schemas/SortOrder'
          in: query
          name: sortOrder
        - schema:
            type: string
          in: query
          name: filterUserId
        - schema:
            type: string
          in: query
          name: filterOriginUserId
        - schema:
            type: string
          in: query
          name: filterDestinationUserId
        - schema:
            type: array
            items:
              $ref: '#/components/schemas/CaseStatus'
          in: query
          name: filterCaseStatus
        - schema:
            type: array
            items:
              $ref: ../public/openapi-public-original.yaml#/components/schemas/PaymentMethod
          in: query
          name: filterOriginPaymentMethods
        - schema:
            type: array
            items:
              $ref: ../public/openapi-public-original.yaml#/components/schemas/PaymentMethod
          in: query
          name: filterDestinationPaymentMethods
        - schema:
            $ref: '#/components/schemas/Priority'
          in: query
          name: filterPriority
        - schema:
            type: string
          in: query
          name: filterTransactionTagKey
        - schema:
            type: string
          in: query
          name: filterTransactionTagValue
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterTransactionIds
        - schema:
            type: array
            items:
              $ref: ../public/openapi-public-original.yaml#/components/schemas/UserState
          in: query
          name: filterUserState
        - schema:
            type: array
            items:
              $ref: ../public/openapi-public-original.yaml#/components/schemas/RiskLevel
          in: query
          name: filterRiskLevel
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterAssignmentsIds
        - schema:
            type: number
          in: query
          name: filterCasesByLastUpdatedEndTimestamp
        - schema:
            type: number
          in: query
          name: filterCasesByLastUpdatedStartTimestamp
        - schema:
            type: array
            items:
              $ref: '#/components/schemas/CaseReasons'
          in: query
          name: filterCaseClosureReasons
        - schema:
            type: array
            items:
              $ref: '#/components/schemas/CaseType'
          in: query
          name: filterCaseTypes
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterRuleQueueIds
        - schema:
            type: array
            items:
              $ref: '#/components/schemas/Priority'
          in: query
          name: filterAlertPriority
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterRuleNature
        - schema:
            type: boolean
          in: query
          name: includeDeleted
    post:
      summary: Create a Manual Case
      operationId: post-cases-manual
      x-flagright:
        permissions:
          - case-management:case-details:write
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Case'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManualCaseCreationDataRequest'
        required: true
    patch:
      summary: Update a Manual Case
      operationId: patch-cases-manual
      x-flagright:
        permissions:
          - case-management:case-details:write
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Case'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManualCasePatchRequest'
        required: true
  /cases/{caseId}/transactions:
    get:
      summary: Get transactions for a case
      tags: []
      x-flagright:
        permissions:
          - case-management:case-overview:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsResponse'
              examples: {}
      operationId: get-case-transactions
      description: ''
      parameters:
        - schema:
            type: string
          in: path
          name: caseId
          required: true
        - schema:
            type: string
          in: query
          name: field
        - schema:
            type: string
          in: query
          name: start
        - schema:
            type: string
            enum:
              - asc
              - desc
          in: query
          name: order
        - schema:
            $ref: '#/components/schemas/PageSize'
          in: query
          name: pageSize
        - schema:
            $ref: '#/components/schemas/Page'
          in: query
          name: page
        - schema:
            type: number
          in: query
          name: afterTimestamp
        - schema:
            type: number
          in: query
          name: beforeTimestamp
        - schema:
            type: string
          in: query
          name: filterId
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterIdList
        - schema:
            $ref: '#/components/schemas/RuleAction'
          in: query
          name: filterOutStatus
        - schema:
            $ref: '#/components/schemas/CaseStatus'
          in: query
          name: filterOutCaseStatus
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterRulesExecuted
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterRuleInstancesExecuted
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterRulesHit
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterRuleInstancesHit
        - schema:
            type: string
          in: query
          name: filterRuleInstanceId
        - schema:
            type: string
          in: query
          name: transactionType
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterOriginCurrencies
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterDestinationCurrencies
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterOriginCountries
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterDestinationCountries
        - schema:
            type: string
          in: query
          name: sortField
        - schema:
            $ref: '#/components/schemas/SortOrder'
          in: query
          name: sortOrder
        - schema:
            type: string
          in: query
          name: filterUserId
        - schema:
            type: string
          in: query
          name: filterOriginUserId
        - schema:
            type: string
          in: query
          name: filterDestinationUserId
        - schema:
            type: array
            items:
              $ref: '#/components/schemas/RuleAction'
          in: query
          name: filterStatus
        - schema:
            $ref: '#/components/schemas/CaseStatus'
          in: query
          name: filterCaseStatus
        - schema:
            type: string
          in: query
          name: filterTagKey
        - schema:
            type: string
          in: query
          name: filterTagValue
        - schema:
            type: boolean
          in: query
          name: includeUsers
        - schema:
            type: boolean
          in: query
          name: includeEvents
        - schema:
            type: array
            items:
              $ref: ../public/openapi-public-original.yaml#/components/schemas/PaymentMethod
          in: query
          name: filterOriginPaymentMethods
        - schema:
            type: array
            items:
              $ref: ../public/openapi-public-original.yaml#/components/schemas/PaymentMethod
          in: query
          name: filterDestinationPaymentMethods
        - schema:
            type: array
            items:
              $ref: ../public/openapi-public-original.yaml#/components/schemas/TransactionState
          in: query
          name: filterTransactionState
        - schema:
            type: array
            items:
              $ref: ../public/openapi-public-original.yaml#/components/schemas/TransactionType
          in: query
          name: filterTransactionTypes
        - schema:
            type: string
          in: query
          name: filterOriginPaymentMethodId
        - schema:
            type: string
          in: query
          name: filterDestinationPaymentMethodId
        - schema:
            type: array
            items:
              $ref: '#/components/schemas/RuleAction'
          in: query
          name: filterTransactionStatus
        - schema:
            type: array
            items:
              $ref: '#/components/schemas/CaseType'
          in: query
          name: filterCaseTypes
  /cases/users/{userId}/caseIds:
    get:
      parameters:
        - schema:
            type: string
          name: userId
          in: path
          required: true
        - schema:
            $ref: '#/components/schemas/CaseType'
          in: query
          name: filterCaseTypes
      summary: Get caseIds for a user
      operationId: get-caseIds
      x-flagright:
        permissions:
          - case-management:case-overview:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CasesUsersUserIdResponse'
  /cases/statusChange:
    patch:
      summary: Cases - Update
      operationId: patch-cases-status-change
      responses:
        '200':
          description: OK
      x-flagright:
        permissions:
          - case-management:case-overview:write
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CasesStatusUpdateRequest'
        required: true
  /cases/assignments:
    patch:
      summary: Cases - Update
      operationId: patch-cases-assignment
      responses:
        '200':
          description: OK
      x-flagright:
        permissions:
          - case-management:case-overview:write
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CasesAssignmentsUpdateRequest'
        required: true
  /cases/reviewAssignments:
    patch:
      summary: Cases - Update
      operationId: patch-cases-reviewAssignment
      responses:
        '200':
          description: OK
      x-flagright:
        permissions:
          - case-management:case-overview:write
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CasesReviewAssignmentsUpdateRequest'
        required: true
  /cases/{caseId}:
    parameters:
      - schema:
          type: string
        name: caseId
        in: path
        required: true
    get:
      summary: Create a Case Comment
      operationId: get-case
      x-flagright:
        permissions:
          - case-management:case-overview:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Case'
        '404':
          description: Not found
  /cases/{caseId}/escalate:
    parameters:
      - schema:
          type: string
        name: caseId
        in: path
        required: true
    post:
      summary: Escalate a case or alerts
      operationId: post-cases-caseId-escalate
      x-flagright:
        permissions:
          - case-management:case-overview:write
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaseEscalationResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaseEscalationRequest'
        required: true
  /cases/{caseId}/comments:
    parameters:
      - schema:
          type: string
        name: caseId
        in: path
        required: true
    post:
      summary: Create a Case Comment
      operationId: post-case-comments
      x-flagright:
        permissions:
          - case-management:case-overview:write
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentRequest'
        required: true
  /cases/{caseId}/comments/{commentId}:
    parameters:
      - schema:
          type: string
        name: caseId
        in: path
        required: true
      - schema:
          type: string
        name: commentId
        in: path
        required: true
    delete:
      summary: Delete a Case Comment
      operationId: delete-cases-caseId-comments-commentId
      x-flagright:
        permissions:
          - case-management:case-overview:write
      responses:
        '200':
          description: OK
    post:
      summary: Create a Comment Reply
      operationId: post-case-comments-reply
      x-flagright:
        permissions:
          - case-management:case-overview:write
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '404':
          description: Not found
  /sanctions/search:
    post:
      summary: Search Sanctions
      operationId: post-sanctions
      x-flagright:
        permissions:
          - sanctions:search:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SanctionsSearchResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SanctionsSearchRequest'
        required: true
    get:
      summary: Get all search history
      operationId: get-sanctions-search
      x-flagright:
        permissions:
          - sanctions:search:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SanctionsSearchHistoryResponse'
      parameters:
        - schema:
            $ref: '#/components/schemas/PageSize'
          in: query
          name: pageSize
        - schema:
            type: string
          in: query
          name: start
        - schema:
            type: number
          in: query
          name: afterTimestamp
        - schema:
            type: number
          in: query
          name: beforeTimestamp
        - schema:
            type: string
          in: query
          name: searchTerm
        - schema:
            type: array
            items:
              $ref: '#/components/schemas/SanctionsSearchType'
          in: query
          name: types
        - schema:
            type: array
            items:
              type: string
          in: query
          name: filterSearchedBy
  /sanctions/activity/stats:
    get:
      summary: Get sanctions screening activity stats
      tags: []
      x-flagright:
        permissions:
          - sanctions:search:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SanctionsScreeningStats'
      parameters:
        - schema:
            type: number
          in: query
          name: afterTimestamp
        - schema:
            type: number
          in: query
          name: beforeTimestamp
      operationId: get-sanctions-screening-activity-stats
  /sanctions/activity/details:
    get:
      summary: Get sanctions screening activity details
      tags: []
      x-flagright:
        permissions:
          - sanctions:search:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SanctionsScreeningDetailsResponse'
      parameters:
        - schema:
            $ref: '#/components/schemas/PageSize'
          in: query
          name: pageSize
        - schema:
            $ref: '#/components/schemas/Page'
          in: query
          name: page
        - schema:
            type: array
            items:
              $ref: '#/components/schemas/SanctionsScreeningEntity'
          in: query
          name: filterEntities
        - schema:
            $ref: '#/components/schemas/BooleanString'
          in: query
          name: filterIsHit
        - schema:
            $ref: '#/components/schemas/BooleanString'
          in: query
          name: filterIsOngoingScreening
        - schema:
            $ref: '#/components/schemas/BooleanString'
          in: query
          name: filterIsNew
        - schema:
            type: string
          in: query
          name: filterName
        - schema:
            type: number
          in: query
          name: afterTimestamp
        - schema:
            type: number
          in: query
          name: beforeTimestamp
      operationId: get-sanctions-screening-activity-details
  /sanctions/search/{searchId}:
    get:
      summary: Get single search history
      tags: []
      x-flagright:
        permissions:
          - sanctions:search:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SanctionsSearchHistory'
      parameters:
        - schema:
            type: string
          name: searchId
          in: path
          required: true
        - schema:
            type: string
          in: query
          name: userId
      operationId: get-sanctions-search-$-searchId
  /sanctions/whitelist:
    post:
      summary: Whitelist sanctions entities
      operationId: post-sanctions-whitelist
      x-flagright:
        permissions:
          - sanctions:search:write
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SanctionsWhitelistRequest'
        required: true
  /webhooks/complyadvantage:
    post:
      summary: Receive webhook events from Comply Advantage
      tags: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComplyAdvantageWebhookEvent'
        required: true
      responses:
        '200':
          description: OK
      operationId: post-webhook-comply-advantage
  /simulation:
    post:
      summary: Create new simulation task
      operationId: post-simulation
      x-flagright:
        permissions:
          - simulator:simulations:write
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimulationPostResponse'
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/SimulationRiskLevelsParametersRequest'
                - $ref: '#/components/schemas/SimulationBeaconParametersRequest'
                - $ref: '#/components/schemas/SimulationRiskFactorsParametersRequest'
        required: true
    get:
      summary: Get simulation tasks
      operationId: get-simulations
      x-flagright:
        permissions:
          - simulator:simulations:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimulationGetResponse'
      parameters:
        - schema:
            $ref: '#/components/schemas/PageSize'
          in: query
          name: pageSize
        - schema:
            $ref: '#/components/schemas/Page'
          in: query
          name: page
          required: true
        - schema:
            $ref: '#/components/schemas/SortOrder'
          in: query
          name: sortOrder
        - schema:
            type: string
          in: query
          name: sortField
        - schema:
            type: string
            enum:
              - PULSE
              - BEACON
              - RISK_FACTORS
          in: query
          name: type
          required: true
        - schema:
            type: boolean
          in: query
          name: includeInternal
  /simulation/jobs/{jobId}:
    get:
      summary: Get a simulation task by test ID
      operationId: get-simulation-test-id
      x-flagright:
        permissions:
          - simulator:simulations:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/SimulationRiskLevelsJob'
                  - $ref: '#/components/schemas/SimulationBeaconJob'
                  - $ref: '#/components/schemas/SimulationRiskFactorsJob'
      parameters: []
    parameters:
      - schema:
          type: string
        name: jobId
        in: path
        required: true
  /simulation/tasks/{taskId}/results:
    get:
      summary: Get a simulation task result by task ID
      operationId: get-simulation-task-id-result
      x-flagright:
        permissions:
          - simulator:simulations:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimulationRiskLevelsAndRiskFactorsResultResponse'
      parameters: []
    parameters:
      - schema:
          type: string
        name: taskId
        in: path
        required: true
      - schema:
          type: string
        in: query
        name: sortField
      - schema:
          $ref: '#/components/schemas/SortOrder'
        in: query
        name: sortOrder
      - schema:
          $ref: '#/components/schemas/PageSize'
        in: query
        name: pageSize
      - schema:
          $ref: '#/components/schemas/Page'
        in: query
        name: page
  /simulation/stats:
    get:
      summary: Get simulation tasks count
      operationId: get-simulation-jobs-count
      x-flagright:
        permissions:
          - simulator:simulations:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimulationStats'
  /tenants/settings/narrative-templates:
    get:
      summary: Get narratives
      operationId: get-narratives
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NarrativeTemplateResponse'
      parameters:
        - schema:
            $ref: '#/components/schemas/PageSize'
          in: query
          name: pageSize
        - schema:
            $ref: '#/components/schemas/Page'
          in: query
          name: page
          required: true
  /tenants/settings/narrative-template:
    post:
      summary: Create narrative
      operationId: post-narrative-template
      x-flagright:
        permissions:
          - settings:organisation:write
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NarrativeTemplate'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NarrativeTemplateRequest'
        required: true
  /tenants/settings/narrative-template/{narrativeTemplateId}:
    get:
      summary: Get narrative
      operationId: get-narrative-template
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NarrativeTemplate'
      parameters:
        - schema:
            type: string
          in: path
          name: narrativeTemplateId
          required: true
    put:
      summary: Update narrative
      operationId: put-narrative-template
      x-flagright:
        permissions:
          - settings:organisation:write
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NarrativeTemplate'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NarrativeTemplateRequest'
        required: true
      parameters:
        - schema:
            type: string
          in: path
          name: narrativeTemplateId
          required: true
    delete:
      summary: Delete narrative
      operationId: delete-narrative-template
      x-flagright:
        permissions:
          - settings:organisation:write
      responses:
        '200':
          description: OK
      parameters:
        - schema:
            type: string
          in: path
          name: narrativeTemplateId
          required: true
  /report-types:
    get:
      summary: Get a list of report types
      tags: []
      x-flagright:
        permissions:
          - reports:schema:read
      parameters:
        - schema:
            $ref: '#/components/schemas/PageSize'
          in: query
          name: pageSize
        - schema:
            $ref: '#/components/schemas/Page'
          in: query
          name: page
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportTypesResponse'
      operationId: get-report-types
  /reports/draft:
    get:
      summary: Get a report draft
      tags: []
      x-flagright:
        permissions:
          - reports:generated:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
      operationId: get-reports-draft
      parameters:
        - schema:
            type: string
          in: query
          name: reportTypeId
          required: true
        - schema:
            type: array
            items:
              type: string
          in: query
          name: transactionIds
          required: true
        - schema:
            type: array
            items:
              type: string
          in: query
          name: alertIds
          required: true
        - schema:
            type: string
          in: query
          name: caseId
          required: true
  /reports:
    get:
      summary: Get created reports
      tags: []
      x-flagright:
        permissions:
          - reports:generated:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsResponse'
      operationId: get-reports
      parameters:
        - schema:
            type: string
          in: query
          name: caseId
        - schema:
            $ref: '#/components/schemas/PageSize'
          in: query
          name: pageSize
        - schema:
            $ref: '#/components/schemas/Page'
          in: query
          name: page
    post:
      summary: Create a new report
      operationId: post-reports
      x-flagright:
        permissions:
          - reports:generated:write
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
        required: true
  /reports/{reportId}:
    parameters:
      - schema:
          type: string
        name: reportId
        in: path
        required: true
    get:
      summary: Get a created report
      tags: []
      x-flagright:
        permissions:
          - reports:generated:write
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
      operationId: get-reports-reportId
  /reports/{reportId}/draft:
    parameters:
      - schema:
          type: string
        name: reportId
        in: path
        required: true
    post:
      summary: Save a report draft
      tags: []
      x-flagright:
        permissions:
          - reports:generated:write
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
      operationId: post-reports-reportId-draft
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
        required: true
  /reports/{reportId}/status:
    parameters:
      - schema:
          type: string
        name: reportId
        in: path
        required: true
    post:
      summary: Update report status
      tags: []
      x-flagright:
        permissions:
          - reports:generated:write
      responses:
        '200':
          description: OK
      operationId: post-reports-reportId-status
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportStatusUpdateRequest'
        required: true
  /tenants/settings/checklist-templates:
    get:
      summary: Get checklist templates
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChecklistTemplatesResponse'
      operationId: get-checklist-templates
      parameters:
        - schema:
            $ref: '#/components/schemas/PageSize'
          in: query
          name: pageSize
        - schema:
            $ref: '#/components/schemas/Page'
          in: query
          name: page
        - schema:
            type: string
          in: query
          name: filterName
        - schema:
            type: string
          in: query
          name: filterId
    post:
      summary: Create a checklist template
      operationId: post-checklist-templates
      x-flagright:
        permissions:
          - settings:organisation:write
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChecklistTemplate'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChecklistTemplate'
        required: true
  /tenants/delete:
    post:
      summary: Delete a tenant
      operationId: delete-tenant
      x-flagright:
        permissions:
          - settings:organisation:write
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTenant'
        required: true
  /tenants/settings/checklist-templates/{checklistTemplateId}:
    parameters:
      - schema:
          type: string
        name: checklistTemplateId
        in: path
        required: true
    get:
      summary: Get a checklist template
      operationId: get-checklist-template
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChecklistTemplate'
    put:
      summary: Update a checklist template
      operationId: put-checklist-templates
      x-flagright:
        permissions:
          - settings:organisation:write
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChecklistTemplate'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChecklistTemplate'
        required: true
    delete:
      summary: Delete a checklist template
      operationId: delete-checklist-template
      x-flagright:
        permissions:
          - settings:organisation:write
      responses:
        '200':
          description: OK
  /tenants/settings/rule-queues:
    get:
      summary: Get rule queues
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleQueuesResponse'
      operationId: get-rule-queues
      parameters:
        - schema:
            $ref: '#/components/schemas/PageSize'
          in: query
          name: pageSize
        - schema:
            $ref: '#/components/schemas/Page'
          in: query
          name: page
        - schema:
            type: string
          in: query
          name: filterName
        - schema:
            type: string
          in: query
          name: filterId
    post:
      summary: Create a rule queue
      operationId: post-rule-queue
      x-flagright:
        permissions:
          - settings:organisation:write
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleQueue'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleQueue'
        required: true
  /tenants/settings/rule-queues/{ruleQueueId}:
    parameters:
      - schema:
          type: string
        name: ruleQueueId
        in: path
        required: true
    get:
      summary: Get a rule queue
      operationId: get-rule-queue
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleQueue'
    put:
      summary: Update a rule queue
      operationId: put-rule-queue
      x-flagright:
        permissions:
          - settings:organisation:write
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleQueue'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleQueue'
        required: true
    delete:
      summary: Delete a rule queue
      operationId: delete-rule-queue
      x-flagright:
        permissions:
          - settings:organisation:write
      responses:
        '200':
          description: OK
  /questions/autocomplete:
    get:
      summary: Get question autocompletion
      x-flagright:
        permissions:
          - case-management:case-overview:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionAutocompleteResponse'
      operationId: get-question-autocomplete
      parameters:
        - schema:
            type: string
          in: query
          name: question
          required: false
        - schema:
            type: string
          in: query
          name: alertId
          required: true
  /questions/{questionId}/{variableKey}/autocomplete:
    get:
      summary: Get question variable autocompletion
      x-flagright:
        permissions:
          - case-management:case-overview:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionAutocompleteResponse'
      operationId: get-question-variable-autocomplete
      parameters:
        - schema:
            type: string
          in: path
          name: questionId
          required: true
        - schema:
            type: string
          in: path
          name: variableKey
          required: true
        - schema:
            type: string
          in: query
          name: search
          required: true
  /alert/{alertId}/questions:
    get:
      summary: Get questions
      operationId: get-questions
      x-flagright:
        permissions:
          - case-management:case-overview:read
      parameters:
        - schema:
            type: string
          in: path
          name: alertId
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetQuestionsResponse'
    post:
      summary: Post question
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetQuestionsResponse'
      operationId: post-question
      x-flagright:
        permissions:
          - case-management:case-overview:write
      description: ''
      parameters:
        - schema:
            type: string
          in: path
          name: alertId
          required: true
  /notifications:
    get:
      summary: Get notifications
      operationId: get-notifications
      x-flagright:
        permissions:
          - notifications:all:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationListResponse'
      parameters:
        - schema:
            type: string
          in: query
          name: start
        - schema:
            type: string
            enum:
              - UNREAD
              - ALL
          in: query
          name: notificationStatus
  /notifications/{notificationId}/read:
    parameters:
      - schema:
          type: string
        name: notificationId
        in: path
        required: true
    post:
      summary: Mark notification as read
      operationId: post-notifications-read-notificationId
      x-flagright:
        permissions:
          - notifications:all:read
      responses:
        '200':
          description: OK
  /notifications/mark-all-read:
    post:
      summary: Mark all notifications as read
      operationId: post-notifications-mark-all-read
      x-flagright:
        permissions:
          - notifications:all:read
      responses:
        '200':
          description: OK
components:
  schemas:
    QuestionAutocompleteResponse:
      title: QuestionAutocompleteResponse
      type: object
      properties:
        suggestions:
          type: array
          items:
            type: string
    QuestionVariable:
      type: object
      properties:
        name:
          type: string
        value:
          $ref: '#/components/schemas/AnyValue'
      required:
        - name
        - value
    AnyValue: {}
    QuestionRequest:
      title: QuestionRequest
      type: object
      properties:
        question:
          type: string
        variables:
          type: array
          items:
            $ref: '#/components/schemas/QuestionVariable'
    GetQuestionsResponse:
      title: GetQuestionsResponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/QuestionResponse'
    QuestionResponse:
      title: QuestionResponse
      type: object
      properties:
        questionId:
          type: string
        title:
          type: string
        explained:
          type: string
        summary:
          type: string
        questionType:
          type: string
        createdAt:
          type: number
        createdById:
          type: string
        variableOptions:
          type: array
          items:
            $ref: '#/components/schemas/QuestionVariableOption'
        variables:
          type: array
          items:
            $ref: '#/components/schemas/QuestionVariable'
      required:
        - questionId
        - title
        - questionType
        - createdAt
        - createdById
        - variableOptions
      oneOf:
        - $ref: '#/components/schemas/Table'
        - $ref: '#/components/schemas/Timeseries'
        - $ref: '#/components/schemas/StackedBarchart'
        - $ref: '#/components/schemas/Barchart'
        - $ref: '#/components/schemas/Properties'
    QuestionVariableOption:
      title: QuestionVariableOption
      type: object
      properties:
        name:
          type: string
        options:
          type: array
          items:
            type: string
        variableType:
          type: string
          enum:
            - DATE
            - DATETIME
            - STRING
            - INTEGER
            - FLOAT
            - BOOLEAN
            - AUTOCOMPLETE
            - SEARCH
    TableHeaders:
      title: TableHeaders
      type: object
      properties:
        name:
          type: string
        columnType:
          type: string
          enum:
            - STRING
            - NUMBER
            - FLOAT
            - LONG_TEXT
            - BOOLEAN
            - ID
            - TRANSACTION_TYPE
            - DATE_TIME
            - PAYMENT_METHOD
            - TAG
            - MONEY_AMOUNT
            - MONEY_CURRENCY
            - COUNTRY
      required:
        - name
        - columnType
    Table:
      title: Table
      type: object
      properties:
        headers:
          type: array
          items:
            $ref: '#/components/schemas/TableHeaders'
        total:
          type: number
        rows:
          type: array
          items:
            type: array
            items:
              type: object
              properties:
                value:
                  type: string
    Timeseries:
      title: Timeseries
      type: object
      properties:
        timeseries:
          type: array
          items:
            type: object
            properties:
              label:
                type: string
              values:
                type: array
                items:
                  type: object
                  properties:
                    time:
                      type: number
                    value:
                      type: number
    StackedBarchart:
      title: StackedBarchart
      type: object
      properties:
        series:
          type: array
          items:
            type: object
            properties:
              label:
                type: string
              values:
                type: array
                items:
                  type: object
                  properties:
                    x:
                      type: string
                    y:
                      type: number
    Barchart:
      title: Barchart
      type: object
      properties:
        values:
          type: array
          items:
            type: object
            properties:
              x:
                type: string
              y:
                type: number
    Properties:
      title: Properties
      type: object
      properties:
        properties:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
              value:
                type: string
    KrsScore:
      title: KrsScore
      type: object
      description: ''
      properties:
        createdAt:
          type: number
        krsScore:
          type: number
        userId:
          type: string
        riskLevel:
          $ref: '#/components/schemas/RiskLevel'
        components:
          type: array
          items:
            $ref: '#/components/schemas/RiskScoreComponent'
      required:
        - createdAt
        - krsScore
    ArsScore:
      title: ArsScore
      type: object
      description: ''
      properties:
        createdAt:
          type: number
        arsScore:
          type: number
        originUserId:
          type: string
        destinationUserId:
          type: string
        transactionId:
          type: string
        riskLevel:
          $ref: '#/components/schemas/RiskLevel'
        components:
          type: array
          items:
            $ref: '#/components/schemas/RiskScoreComponent'
      required:
        - createdAt
        - arsScore
    DrsScore:
      title: DrsScore
      type: object
      description: ''
      properties:
        createdAt:
          type: number
        drsScore:
          type: number
        userId:
          type: string
        transactionId:
          type: string
        derivedRiskLevel:
          $ref: '#/components/schemas/RiskLevel'
        manualRiskLevel:
          $ref: '#/components/schemas/RiskLevel'
        isUpdatable:
          type: boolean
        components:
          type: array
          items:
            $ref: '#/components/schemas/RiskScoreComponent'
      required:
        - createdAt
        - drsScore
        - isUpdatable
    RuleLogicConfigResponse:
      title: RuleLogicConfigResponse
      type: object
      properties:
        s3Url:
          type: string
        ruleLogicConfig:
          $ref: '#/components/schemas/RuleLogicConfig'
      required:
        - s3Url
    RuleLogicConfig:
      title: RuleLogicConfig
      type: object
      properties:
        variables:
          type: array
          items:
            $ref: '#/components/schemas/RuleEntityVariable'
        operators:
          type: array
          items:
            $ref: '#/components/schemas/RuleOperator'
        functions:
          type: array
          items:
            $ref: '#/components/schemas/RuleFunction'
      required:
        - variables
        - operators
        - functions
    RuleEntityVariable:
      title: RuleEntityVariable
      type: object
      properties:
        key:
          type: string
        uiDefinition:
          type: object
        entity:
          type: string
          enum:
            - TRANSACTION
            - USER
            - CONSUMER_USER
            - BUSINESS_USER
            - PAYMENT_DETAILS
        valueType:
          type: string
          enum:
            - string
            - number
            - boolean
            - date
            - array
      required:
        - key
        - uiDefinition
    RuleOperator:
      title: RuleOperator
      type: object
      properties:
        key:
          $ref: '#/components/schemas/RuleOperatorType'
        uiDefinition:
          type: object
        parameters:
          type: array
          items:
            type: object
      required:
        - key
        - uiDefinition
    RuleOperatorType:
      title: RuleOperatorType
      type: string
      enum:
        - op:inlist
        - op:!inlist
        - op:contains
        - op:!contains
        - op:startswith
        - op:endswith
        - op:similarto
        - op:!similarto
        - op:similartowords
        - op:!similartowords
        - op:between_time
        - op:!between_time
    RuleFunction:
      title: RuleFunction
      type: object
      properties:
        key:
          type: object
        uiDefinition:
          type: object
      required:
        - key
        - uiDefinition
    RuleEntityVariableInUse:
      title: RuleEntityVariableInUse
      type: object
      properties:
        key:
          type: string
        name:
          type: string
      required:
        - key
    RuleAggregationType:
      title: RuleAggregationType
      type: string
      enum:
        - USER_TRANSACTIONS
        - PAYMENT_DETAILS_TRANSACTIONS
    RuleAggregationTransactionDirection:
      title: RuleAggregationTransactionDirection
      type: string
      enum:
        - SENDING
        - RECEIVING
        - SENDING_RECEIVING
    RuleAggregationUserDirection:
      title: RuleAggregationUserDirection
      type: string
      enum:
        - SENDER
        - RECEIVER
        - SENDER_OR_RECEIVER
    RuleAggregationFunc:
      title: RuleAggregationFunc
      type: string
      enum:
        - SUM
        - COUNT
        - AVG
        - UNIQUE_COUNT
        - UNIQUE_VALUES
    RuleAggregationVariable:
      title: AggregationVariable
      type: object
      properties:
        key:
          type: string
        name:
          type: string
        type:
          $ref: '#/components/schemas/RuleAggregationType'
        userDirection:
          $ref: '#/components/schemas/RuleAggregationUserDirection'
        transactionDirection:
          $ref: '#/components/schemas/RuleAggregationTransactionDirection'
        aggregationFieldKey:
          type: string
        secondaryAggregationFieldKey:
          type: string
        aggregationFunc:
          $ref: '#/components/schemas/RuleAggregationFunc'
        aggregationGroupByFieldKey:
          type: string
        baseCurrency:
          $ref: ../public/openapi-public-original.yaml#/components/schemas/CurrencyCode
        timeWindow:
          type: object
          properties:
            start:
              $ref: '#/components/schemas/RuleAggregationTimeWindow'
            end:
              $ref: '#/components/schemas/RuleAggregationTimeWindow'
          required:
            - start
            - end
        filtersLogic:
          type: object
        version:
          type: number
      required:
        - key
        - type
        - aggregationFieldKey
        - aggregationFunc
        - timeWindow
    RuleAggregationTimeWindowGranularity:
      title: RuleAggregationTimeWindowGranularity
      type: string
      enum:
        - all_time
        - now
        - second
        - minute
        - hour
        - day
        - week
        - month
        - year
        - fiscal_year
    RuleAggregationTimeWindow:
      title: RuleAggregationTimeWindow
      type: object
      properties:
        units:
          type: number
        granularity:
          $ref: '#/components/schemas/RuleAggregationTimeWindowGranularity'
        rollingBasis:
          type: boolean
        fiscalYear:
          type: object
          properties:
            startDay:
              type: number
            startMonth:
              type: number
          required:
            - startDay
            - startMonth
      required:
        - units
        - granularity
    Rule:
      title: Rule
      type: object
      x-examples:
        example-1:
          id: R-1
          name: Rule name
          description: Rule description
          defaultParameters:
            threshold: 3
          defaultAction: FLAG
          ruleImplementationName: code-filename
          createdAt: 0
          updatedAt: 0
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/RuleType'
        name:
          type: string
        description:
          type: string
        types:
          type: array
          items:
            type: string
        typologies:
          type: array
          items:
            type: string
        defaultLogic:
          type: object
        defaultRiskLevelLogic:
          $ref: '#/components/schemas/RiskLevelRuleLogic'
        defaultLogicAggregationVariables:
          type: array
          items:
            $ref: '#/components/schemas/RuleAggregationVariable'
        defaultBaseCurrency:
          $ref: ../public/openapi-public-original.yaml#/components/schemas/CurrencyCode
        parametersSchema:
          type: object
        defaultParameters:
          type: object
        defaultAction:
          $ref: '#/components/schemas/RuleAction'
        ruleImplementationName:
          type: string
        labels:
          type: array
          items:
            $ref: ../public/openapi-public-original.yaml#/components/schemas/RuleLabels
        defaultNature:
          $ref: ../public/openapi-public-original.yaml#/components/schemas/RuleNature
        defaultCasePriority:
          $ref: '#/components/schemas/Priority'
        descriptionTemplate:
          type: string
        defaultRiskLevelParameters:
          $ref: '#/components/schemas/RiskLevelRuleParameters'
        defaultRiskLevelActions:
          $ref: '#/components/schemas/RiskLevelRuleActions'
        defaultFilters:
          type: object
        createdAt:
          type: number
        updatedAt:
          type: number
        tenantIds:
          type: array
          items:
            type: string
        defaultFalsePositiveCheckEnabled:
          type: boolean
        requiredFeatures:
          type: array
          items:
            $ref: '#/components/schemas/Feature'
        checksFor:
          type: array
          items:
            type: string
        sampleUseCases:
          type: string
      required:
        - id
        - type
        - name
        - description
        - parametersSchema
        - defaultAction
        - labels
        - defaultNature
        - defaultCasePriority
        - checksFor
        - types
        - typologies
        - sampleUseCases
    RuleFilters:
      title: RuleFilter
      type: object
      properties:
        schema:
          type: object
          properties:
            properties:
              type: object
            type:
              type: string
            ui:schema:
              type: object
          required:
            - properties
            - type
        defaultValues:
          type: object
      required:
        - schema
    StatusDetails:
      title: StatusDetails
      type: object
      properties:
        description:
          type: string
    UserDirections:
      title: UserDirections
      type: string
      enum:
        - ALL
        - ORIGIN
        - DESTINATION
    UserStateDetailsInternal:
      title: UserStateDetailsInternal
      allOf:
        - $ref: ../public/openapi-public-original.yaml#/components/schemas/UserStateDetails
        - $ref: '#/components/schemas/StatusDetails'
      required:
        - reason
    KYCStatusDetailsInternal:
      title: KYCStatusDetailsInternal
      allOf:
        - $ref: ../public/openapi-public-original.yaml#/components/schemas/KYCStatusDetails
        - $ref: '#/components/schemas/StatusDetails'
      required:
        - reason
    TriggersOnHit:
      title: TriggersOnHit
      type: object
      properties:
        usersToCheck:
          $ref: '#/components/schemas/UserDirections'
        userStateDetails:
          $ref: '#/components/schemas/UserStateDetailsInternal'
        kycStatusDetails:
          $ref: '#/components/schemas/KYCStatusDetailsInternal'
      required:
        - usersToCheck
    RiskLevelsTriggersOnHit:
      title: RiskLevelsTriggersOnHit
      type: object
      properties:
        VERY_HIGH:
          $ref: '#/components/schemas/TriggersOnHit'
        HIGH:
          $ref: '#/components/schemas/TriggersOnHit'
        MEDIUM:
          $ref: '#/components/schemas/TriggersOnHit'
        LOW:
          $ref: '#/components/schemas/TriggersOnHit'
        VERY_LOW:
          $ref: '#/components/schemas/TriggersOnHit'
      required:
        - VERY_HIGH
        - HIGH
        - MEDIUM
        - LOW
        - VERY_LOW
    KYCAndUserStatusChangeReason:
      title: KYCAndUserStatusChangeReason
      type: string
      enum:
        - Fake document
        - Blurry document
        - Suspected fraud
        - Adverse media
        - PEP
        - Sanctions hit
        - Risky profile
        - High risk country
        - Other
    RuleType:
      title: RuleType
      type: string
      enum:
        - TRANSACTION
        - USER
        - USER_ONGOING_SCREENING
    RuleInstance:
      title: RuleInstance
      type: object
      properties:
        id:
          type: string
        ruleId:
          type: string
        casePriority:
          $ref: '#/components/schemas/Priority'
        logic:
          type: object
        riskLevelLogic:
          $ref: '#/components/schemas/RiskLevelRuleLogic'
        logicAggregationVariables:
          type: array
          items:
            $ref: '#/components/schemas/RuleAggregationVariable'
        logicEntityVariables:
          type: array
          items:
            $ref: '#/components/schemas/RuleEntityVariableInUse'
        baseCurrency:
          $ref: ../public/openapi-public-original.yaml#/components/schemas/CurrencyCode
        parameters:
          type: object
        action:
          $ref: '#/components/schemas/RuleAction'
        type:
          $ref: '#/components/schemas/RuleType'
        ruleNameAlias:
          type: string
        ruleDescriptionAlias:
          type: string
        filters:
          type: object
        riskLevelParameters:
          $ref: '#/components/schemas/RiskLevelRuleParameters'
        riskLevelActions:
          $ref: '#/components/schemas/RiskLevelRuleActions'
        triggersOnHit:
          $ref: '#/components/schemas/TriggersOnHit'
        riskLevelsTriggersOnHit:
          $ref: '#/components/schemas/RiskLevelsTriggersOnHit'
        nature:
          $ref: ../public/openapi-public-original.yaml#/components/schemas/RuleNature
        labels:
          type: array
          items:
            $ref: ../public/openapi-public-original.yaml#/components/schemas/RuleLabels
        status:
          $ref: '#/components/schemas/RuleInstanceStatus'
        createdAt:
          type: number
        updatedAt:
          type: number
        runCount:
          type: number
        hitCount:
          type: number
        falsePositiveCheckEnabled:
          type: boolean
        checklistTemplateId:
          type: string
        queueId:
          type: string
        alertConfig:
          type: object
          properties:
            alertCreationInterval:
              oneOf:
                - $ref: '#/components/schemas/AlertCreationIntervalInstantly'
                - $ref: '#/components/schemas/AlertCreationIntervalWeekly'
                - $ref: '#/components/schemas/AlertCreationIntervalMonthly'
            alertAssignees:
              type: array
              items:
                type: string
            alertAssigneeRole:
              type: string
            alertCreatedFor:
              type: array
              items:
                type: string
                enum:
                  - USER
                  - PAYMENT_DETAILS
            frozenStatuses:
              type: array
              items:
                $ref: '#/components/schemas/DerivedStatus'
            alertCreationDirection:
              $ref: '#/components/schemas/AlertCreationDirection'
        checksFor:
          type: array
          items:
            type: string
        createdBy:
          type: string
        mode:
          $ref: '#/components/schemas/RuleMode'
        userRuleRunCondition:
          $ref: '#/components/schemas/UserRuleRunCondition'
      required:
        - casePriority
        - nature
        - labels
        - checksFor
        - type
        - mode
    UserRuleRunCondition:
      title: UserRuleRunCondition
      type: object
      properties:
        entityUpdated:
          type: boolean
        schedule:
          type: object
          properties:
            value:
              type: number
            unit:
              $ref: '#/components/schemas/UserRuleScheduleUnit'
          required:
            - value
            - unit
      required:
        - entityUpdated
    UserRuleScheduleUnit:
      title: UserRuleScheduleUnit
      type: string
      enum:
        - WEEK
        - MONTH
        - YEAR
    RuleInstanceStatus:
      title: RuleInstanceStatus
      type: string
      enum:
        - ACTIVE
        - INACTIVE
        - DEPLOYING
    RuleMode:
      title: RuleMode
      type: string
      enum:
        - LIVE_SYNC
        - SHADOW_SYNC
    NewRuleInstanceIdResponse:
      title: NewRuleInstanceIdResponse
      type: object
      properties:
        ruleInstanceId:
          type: string
    AlertCreationDirection:
      type: string
      title: AlertCreationDirection
      enum:
        - ORIGIN
        - DESTINATION
        - ALL
        - AUTO
        - AUTO_ORIGIN
        - AUTO_DESTINATION
    RuleAction:
      type: string
      title: RuleAction
      enum:
        - FLAG
        - BLOCK
        - ALLOW
        - SUSPEND
    RuleActionAlias:
      type: object
      title: RuleActionAlias
      properties:
        action:
          $ref: '#/components/schemas/RuleAction'
        alias:
          type: string
      required:
        - action
        - alias
    TransactionStateAlias:
      type: object
      title: TransactionStateAlias
      properties:
        state:
          $ref: ../public/openapi-public-original.yaml#/components/schemas/TransactionState
        alias:
          type: string
      required:
        - state
        - alias
    RiskLevelAlias:
      type: object
      title: RiskLevelAlias
      properties:
        level:
          $ref: '#/components/schemas/RiskLevel'
        alias:
          type: string
      required:
        - level
        - alias
    Priority:
      type: string
      title: Priority
      enum:
        - P1
        - P2
        - P3
        - P4
    TenantUsageData:
      title: TenantUsageData
      type: object
      properties:
        burstCapacityInRps:
          type: number
        rateLimitInRps:
          type: number
        quotaLimit:
          type: string
        quotaLeft:
          type: string
        quotaRenewalRate:
          type: string
      required:
        - burstCapacityInRps
        - rateLimitInRps
        - quotaLimit
        - quotaLeft
        - quotaRenewalRate
    ImportRequest:
      title: ImportRequest
      type: object
      properties:
        type:
          type: string
          enum:
            - TRANSACTION
            - USER
            - BUSINESS
        format:
          type: string
          enum:
            - flagright
            - custom
        s3Key:
          type: string
        filename:
          type: string
      required:
        - type
        - format
        - s3Key
        - filename
    PresignedUrlResponse:
      title: PresignedUrlResponse
      type: object
      properties:
        presignedUrl:
          type: string
        s3Key:
          type: string
      required:
        - presignedUrl
        - s3Key
    ListImportRequest:
      title: ListImportRequest
      type: object
      properties:
        listName:
          type: string
        indexName:
          type: string
        data:
          type: string
      required:
        - listName
        - indexName
        - data
    TransactionsResponse:
      title: TransactionsResponse
      type: object
      description: ''
      x-examples: {}
      properties:
        hasPrev:
          type: boolean
        prev:
          type: string
        next:
          type: string
        count:
          type: number
        limit:
          type: number
        last:
          type: string
        hasNext:
          type: boolean
        items:
          type: array
          items:
            $ref: '#/components/schemas/InternalTransaction'
      required:
        - prev
        - next
        - last
        - count
        - limit
        - items
        - hasNext
        - hasPrev
    TenantApiKey:
      title: TenantApiKey
      type: object
      properties:
        id:
          type: string
        key:
          type: string
        createdAt:
          type: number
        updatedAt:
          type: number
      required:
        - id
        - key
        - createdAt
        - updatedAt
    CrmSummary:
      title: CrmSummary
      type: object
      properties:
        accountId:
          type: string
        summary:
          type: string
        sentiment:
          type: number
        good:
          type: string
        bad:
          type: string
        neutral:
          type: string
      required:
        - accountId
        - summary
        - sentiment
        - good
        - bad
        - neutral
    Graph:
      title: Graph
      type: object
      properties:
        nodes:
          type: array
          items:
            type: object
            required:
              - id
              - label
            properties:
              id:
                type: string
              label:
                type: string
        edges:
          type: array
          items:
            type: object
            required:
              - id
              - source
              - target
            properties:
              id:
                type: string
              source:
                type: string
              target:
                type: string
              label:
                type: string
              size:
                type: number
    CrmAccountResponse:
      title: CrmAccountResponse
      type: object
      required:
        - summary
        - tasks
        - notes
        - engagements
      properties:
        summary:
          $ref: '#/components/schemas/CrmSummary'
        tasks:
          type: array
          items:
            type: object
            properties:
              content:
                type: string
              user:
                type: string
              createdAt:
                type: number
            required:
              - content
              - user
        notes:
          type: array
          items:
            type: object
            properties:
              user:
                type: string
              body:
                type: string
              createdAt:
                type: number
            required:
              - user
              - body
              - createdAt
        engagements:
          type: array
          items:
            type: object
            properties:
              subject:
                type: string
              content:
                type: string
              user:
                type: string
              createdAt:
                type: number
              to:
                type: array
                items:
                  type: string
            required:
              - subject
              - content
              - user
    TransactionsStatsByTypesResponse:
      title: TransactionsStatsByTypesResponse
      type: object
      description: ''
      x-examples: {}
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              transactionType:
                $ref: ../public/openapi-public-original.yaml#/components/schemas/TransactionType
              count:
                type: number
              sum:
                type: number
                nullable: true
              average:
                type: number
                nullable: true
              min:
                type: number
                nullable: true
              max:
                type: number
                nullable: true
              median:
                type: number
                nullable: true
            required:
              - count
      required:
        - data
    TransactionsStatsByTimeResponse:
      title: TransactionsStatsByTypesResponse
      type: object
      description: ''
      x-examples: {}
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              series:
                type: string
              label:
                type: string
              values:
                type: object
                additionalProperties:
                  type: object
                  properties:
                    count:
                      type: number
                    amount:
                      type: number
                  required:
                    - count
                    - amount
            required:
              - series
              - label
              - values
      required:
        - data
    InternalTransactionEvent:
      allOf:
        - $ref: ../public/openapi-public-original.yaml#/components/schemas/TransactionEvent
        - type: object
          additionalProperties: false
          properties:
            createdAt:
              type: number
    InternalConsumerUserEvent:
      allOf:
        - $ref: ../public/openapi-public-original.yaml#/components/schemas/ConsumerUserEvent
        - type: object
          additionalProperties: false
          properties:
            createdAt:
              type: number
    InternalBusinessUserEvent:
      allOf:
        - $ref: ../public/openapi-public-original.yaml#/components/schemas/BusinessUserEvent
        - type: object
          additionalProperties: false
          properties:
            createdAt:
              type: number
    InternalUserEvent:
      title: InternalUserEvent
      oneOf:
        - $ref: '#/components/schemas/InternalConsumerUserEvent'
        - $ref: '#/components/schemas/InternalBusinessUserEvent'
    InternalUserEventsResponse:
      title: InternalUserEventsResponse
      type: object
      description: ''
      x-examples: {}
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/InternalUserEvent'
        total:
          type: number
      required:
        - items
        - total
    InternalTransaction:
      allOf:
        - $ref: ../public/openapi-public-original.yaml#/components/schemas/TransactionWithRulesResult
        - type: object
          additionalProperties: false
          properties:
            originPaymentMethodId:
              type: string
            destinationPaymentMethodId:
              type: string
            originUser:
              oneOf:
                - $ref: '#/components/schemas/InternalConsumerUser'
                - $ref: '#/components/schemas/InternalBusinessUser'
            destinationUser:
              oneOf:
                - $ref: '#/components/schemas/InternalConsumerUser'
                - $ref: '#/components/schemas/InternalBusinessUser'
            events:
              type: array
              items:
                $ref: '#/components/schemas/InternalTransactionEvent'
            arsScore:
              $ref: '#/components/schemas/ArsScore'
            createdAt:
              type: number
            updatedAt:
              type: number
            alertIds:
              type: array
              items:
                type: string
      title: InternalTransaction
    ConsumerUsersListResponse:
      title: ConsumerUsersListResponse
      type: object
      properties:
        hasPrev:
          type: boolean
        prev:
          type: string
        next:
          type: string
        count:
          type: number
        limit:
          type: number
        last:
          type: string
        hasNext:
          type: boolean
        items:
          type: array
          items:
            $ref: '#/components/schemas/InternalConsumerUser'
      required:
        - hasPrev
        - prev
        - next
        - hasNext
        - items
        - count
        - limit
        - last
    BusinessUsersListResponse:
      title: BusinessUsersListResponse
      type: object
      properties:
        hasPrev:
          type: boolean
        prev:
          type: string
        next:
          type: string
        count:
          type: number
        limit:
          type: number
        last:
          type: string
        hasNext:
          type: boolean
        items:
          type: array
          items:
            $ref: '#/components/schemas/InternalBusinessUser'
      required:
        - hasPrev
        - prev
        - next
        - hasNext
        - items
        - count
        - limit
        - last
    AllUsersListResponse:
      title: AllUsersListResponse
      type: object
      properties:
        hasPrev:
          type: boolean
        prev:
          type: string
        next:
          type: string
        count:
          type: number
        limit:
          type: number
        last:
          type: string
        hasNext:
          type: boolean
        items:
          type: array
          items:
            $ref: '#/components/schemas/InternalUser'
      required:
        - hasPrev
        - prev
        - next
        - hasNext
        - items
        - count
        - limit
        - last
    NotificationListResponse:
      title: NotificationListResponse
      type: object
      properties:
        hasPrev:
          type: boolean
        prev:
          type: string
        next:
          type: string
        count:
          type: number
        limit:
          type: number
        last:
          type: string
        hasNext:
          type: boolean
        items:
          type: array
          items:
            $ref: '#/components/schemas/Notification'
      required:
        - hasPrev
        - prev
        - next
        - hasNext
        - items
        - count
        - limit
        - last
    TenantTriggerBatchJobRequest:
      title: TenantTriggerBatchJobRequest
      type: object
      properties:
        jobName:
          $ref: '#/components/schemas/BatchJobNames'
      required:
        - jobName
    BatchJobNames:
      title: BatchJobNames
      type: string
      enum:
        - ONGOING_SCREENING_USER_RULE
        - ONGOING_MERCHANT_MONITORING
        - PULSE_USERS_BACKFILL_RISK_SCORE
        - DEMO_MODE_DATA_LOAD
        - TEST_FARGATE
    DashboardStatsTransactionsCount:
      type: object
      title: DashboardStatsTransactionsCount
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              time:
                type: string
              status_ALLOW:
                type: number
              status_FLAG:
                type: number
              status_BLOCK:
                type: number
              status_SUSPEND:
                type: number
              paymentMethods_ACH:
                type: number
              paymentMethods_CARD:
                type: number
              paymentMethods_GENERIC_BANK_ACCOUNT:
                type: number
              paymentMethods_IBAN':
                type: number
              paymentMethods_SWIFT:
                type: number
              paymentMethods_UPI:
                type: number
              paymentMethods_WALLET:
                type: number
              paymentMethods_MPESA:
                type: number
              paymentMethods_CHECK:
                type: number
              arsRiskLevel_VERY_HIGH:
                type: number
              arsRiskLevel_HIGH:
                type: number
              arsRiskLevel_MEDIUM:
                type: number
              arsRiskLevel_LOW:
                type: number
              arsRiskLevel_VERY_LOW:
                type: number
              transactionType_DEPOSIT:
                type: number
              transactionType_TRANSFER:
                type: number
              transactionType_EXTERNAL_PAYMENT:
                type: number
              transactionType_WITHDRAWAL:
                type: number
              transactionType_REFUND:
                type: number
              transactionType_OTHER:
                type: number
            required:
              - time
      required:
        - data
    DashboardStatsTransactionsCountItem:
      type: object
      title: DashboardStatsTransactionsCountItem
      properties:
        time:
          type: string
        paymentMethods_ACH:
          type: number
        paymentMethods_CARD:
          type: number
        paymentMethods_GENERIC_BANK_ACCOUNT:
          type: number
        paymentMethods_IBAN':
          type: number
        paymentMethods_SWIFT:
          type: number
        paymentMethods_UPI:
          type: number
        paymentMethods_WALLET:
          type: number
        paymentMethods_MPESA:
          type: number
        paymentMethods_CHECK:
          type: number
        arsRiskLevel_VERY_HIGH:
          type: number
        arsRiskLevel_HIGH:
          type: number
        arsRiskLevel_MEDIUM:
          type: number
        arsRiskLevel_LOW:
          type: number
        arsRiskLevel_VERY_LOW:
          type: number
        transactionType_DEPOSIT:
          type: number
        transactionType_TRANSFER:
          type: number
        transactionType_EXTERNAL_PAYMENT:
          type: number
        transactionType_WITHDRAWAL:
          type: number
        transactionType_REFUND:
          type: number
        transactionType_OTHER:
          type: number
      required:
        - time
    DashboardStatsRulesCount:
      type: object
      x-examples: {}
      title: DashboardStatsRulesCount
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              ruleId:
                type: string
              ruleInstanceId:
                type: string
              hitCount:
                type: number
              casesCount:
                type: number
              openCasesCount:
                type: number
            required:
              - ruleId
              - hitCount
      required:
        - data
    DashboardStatsUsersStats:
      type: object
      title: DashboardStatsUsersStats
      properties:
        time:
          type: string
        drsRiskLevel_VERY_LOW:
          type: number
        drsRiskLevel_LOW:
          type: number
        drsRiskLevel_MEDIUM:
          type: number
        drsRiskLevel_HIGH:
          type: number
        drsRiskLevel_VERY_HIGH:
          type: number
        krsRiskLevel_VERY_LOW:
          type: number
        krsRiskLevel_LOW:
          type: number
        krsRiskLevel_MEDIUM:
          type: number
        krsRiskLevel_HIGH:
          type: number
        krsRiskLevel_VERY_HIGH:
          type: number
        kycStatus_SUCCESSFUL:
          type: number
        kycStatus_FAILED:
          type: number
        kycStatus_NOT_STARTED:
          type: number
        kycStatus_IN_PROGRESS:
          type: number
        kycStatus_MANUAL_REVIEW:
          type: number
      required:
        - time
    DashboardStatsKRSDistribution:
      type: object
      x-examples: {}
      title: DashboardStatsKRSDistribution
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
              riskLevel:
                $ref: '#/components/schemas/RiskLevel'
              percentage:
                type: string
              count:
                type: number
              riskScoreRange:
                type: string
            required:
              - riskLevel
              - count
        total:
          type: number
      required:
        - data
    DashboardStatsKYCStatusDistribution:
      type: object
      x-examples: {}
      title: DashboardStatsKYCStatusDistribution
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              kycStatus:
                $ref: ../public/openapi-public-original.yaml#/components/schemas/KYCStatus
              percentage:
                type: string
              count:
                type: number
            required:
              - kycStatus
              - count
        total:
          type: number
      required:
        - data
    DashboardStatsOverview:
      type: object
      x-examples: {}
      title: DashboardStatsOverview
      properties:
        totalOpenCases:
          type: number
        totalOpenAlerts:
          type: number
        averageInvestigationTimeCases:
          type: number
        averageInvestigationTimeAlerts:
          type: number
        totalSarReported:
          type: number
      required:
        - totalOpenCases
        - totalOpenAlerts
        - averageInvestigationTimeCases
        - averageInvestigationTimeAlerts
        - totalSarReported
    DashboardStatsClosingReasonDistributionStats:
      type: object
      x-examples: {}
      title: DashboardStatsClosingReasonDistributionStats
      properties:
        closingReasonsData:
          type: array
          items:
            type: object
            properties:
              reason:
                type: string
              value:
                type: number
      required:
        - closingReasonsData
    DashboardStatsAlertPriorityDistributionStats:
      type: object
      x-examples: {}
      title: DashboardStatsAlertPriorityDistributionStats
      properties:
        alertPriorityData:
          type: array
          items:
            type: object
            properties:
              priority:
                $ref: '#/components/schemas/Priority'
              value:
                type: number
      required:
        - alertPriorityData
    DashboardStatsQaAlertsCountByRule:
      type: object
      x-examples: {}
      title: DashboardStatsQaAlertsCountByRule
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              ruleId:
                type: string
              ruleInstanceId:
                type: string
              alertsCount:
                type: number
            required:
              - ruleId
              - ruleInstanceId
              - alertsCount
      required:
        - data
    DashboardStatsQaAlertsStatsByChecklistReason:
      type: object
      x-examples: {}
      title: DashboardStatsQaAlertsStatsByChecklistReason
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              checklistTemplateId:
                type: string
              checklistTemplateCategory:
                type: string
              checklistItemId:
                type: string
              totalQaPassedAlerts:
                type: number
              totalQaFailedAlerts:
                type: number
              checklistItemReason:
                type: string
            required:
              - checklistTemplateId
              - checklistTemplateCategory
              - checklistItemId
              - totalQaPassedAlerts
              - totalQaFailedAlerts
      required:
        - data
    DashboardStatsQaAlertsCountByAssignee:
      type: object
      x-examples: {}
      title: DashboardStatsQaAlertsCountByAssignee
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              accountId:
                type: string
              alertsAssignedForQa:
                type: number
              alertsQaedByAssignee:
                type: number
            required:
              - accountId
              - alertsAssignedForQa
              - alertsQaedByAssignee
      required:
        - data
    DashboardStatsQaOverview:
      type: object
      x-examples: {}
      title: DashboardStatsQaOverview
      properties:
        totalAlertsForQa:
          type: number
        totalQaPassedAlerts:
          type: number
        totalQaFailedAlerts:
          type: number
      required:
        - totalQaFailedAlerts
        - totalAlertsForQa
        - totalQaPassedAlerts
    UpdateMonitoringStatusRequest:
      type: object
      x-examples: {}
      title: UpdateMonitoringStatusRequest
      properties:
        isMonitoringEnabled:
          type: boolean
      required:
        - isMonitoringEnabled
    InternalConsumerUser:
      allOf:
        - $ref: ../public/openapi-public-original.yaml#/components/schemas/UserWithRulesResult
        - type: object
          properties:
            type:
              enum:
                - CONSUMER
              type: string
            comments:
              type: array
              items:
                $ref: '#/components/schemas/Comment'
            krsScore:
              $ref: '#/components/schemas/KrsScore'
            drsScore:
              $ref: '#/components/schemas/DrsScore'
            casesCount:
              type: number
            createdAt:
              type: number
            updatedAt:
              type: number
          required:
            - type
    InternalBusinessUser:
      allOf:
        - $ref: ../public/openapi-public-original.yaml#/components/schemas/BusinessWithRulesResult
        - type: object
          properties:
            type:
              enum:
                - BUSINESS
              type: string
            comments:
              type: array
              items:
                $ref: '#/components/schemas/Comment'
            krsScore:
              $ref: '#/components/schemas/KrsScore'
            drsScore:
              $ref: '#/components/schemas/DrsScore'
            casesCount:
              type: number
            createdAt:
              type: number
            updatedAt:
              type: number
            isMonitoringEnabled:
              type: boolean
          required:
            - type
    InternalUser:
      title: InternalUser
      oneOf:
        - $ref: '#/components/schemas/InternalConsumerUser'
        - $ref: '#/components/schemas/InternalBusinessUser'
    DashboardStatsHitsPerUser:
      type: object
      title: DashboardStatsHitsPerUser
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              userId:
                type: string
              rulesHitCount:
                type: number
              user:
                oneOf:
                  - $ref: '#/components/schemas/InternalConsumerUser'
                  - $ref: '#/components/schemas/InternalBusinessUser'
              casesCount:
                type: number
              openCasesCount:
                type: number
              rulesRunCount:
                type: number
            required:
              - originUserId
              - rulesHitCount
              - rulesRunCount
      required:
        - data
    DashboardTeamStatsItem:
      type: object
      title: DashboardTeamStatsItem
      properties:
        accountId:
          type: string
        assignedTo:
          type: number
        closedBy:
          type: number
        caseIds:
          type: array
          items:
            type: string
        investigationTime:
          type: number
        closedBySystem:
          type: number
        escalatedBy:
          type: number
        inProgress:
          type: number
      required:
        - accountId
        - assignedTo
        - closedBy
    DashboardLatestTeamStatsItem:
      type: object
      title: DashboardLatestTeamStatsItem
      properties:
        accountId:
          type: string
        open:
          type: number
        onHold:
          type: number
        escalated:
          type: number
        inProgress:
          type: number
        inReview:
          type: number
      required:
        - accountId
    CommentRequest:
      title: CommentRequest
      type: object
      properties:
        id:
          type: string
        body:
          type: string
        type:
          type: string
          enum:
            - STATUS_CHANGE
        parentId:
          type: string
        files:
          type: array
          items:
            $ref: '#/components/schemas/FileInfo'
      required:
        - body
    Comment:
      title: Comment
      allOf:
        - $ref: '#/components/schemas/CommentRequest'
        - type: object
          properties:
            files:
              type: array
              items:
                $ref: '#/components/schemas/FileInfo'
            userId:
              type: string
            createdAt:
              type: number
            updatedAt:
              type: number
            mentions:
              type: array
              items:
                type: string
      required:
        - body
    NarrativeRequest:
      title: NarrativeRequest
      type: object
      properties:
        entityId:
          type: string
        entityType:
          type: string
          enum:
            - ALERT
            - CASE
            - TRANSACTION
            - REPORT
        reasons:
          type: array
          items:
            $ref: '#/components/schemas/CaseReasons'
      required:
        - reasons
        - entityId
    FormatRequest:
      title: FormatRequest
      type: object
      properties:
        entityId:
          type: string
        entityType:
          type: string
          enum:
            - ALERT
            - CASE
            - TRANSACTION
            - REPORT
        narrative:
          type: string
      required:
        - entityId
        - entityType
        - narrative
    NarrativeResponse:
      title: NarrativeResponse
      type: object
      properties:
        narrative:
          type: string
        attributes:
          type: array
          items:
            type: object
            properties:
              attribute:
                type: string
              secret:
                type: boolean
              value:
                $ref: '#/components/schemas/AnyValue'
            required:
              - attribute
              - value
      required:
        - narrative
        - attributes
    AiSourcesResponse:
      title: AiSourcesResponse
      type: object
      properties:
        aiSources:
          type: array
          items:
            $ref: '#/components/schemas/AiSource'
      required:
        - aiSources
    AiSource:
      title: AiSource
      type: object
      properties:
        sourceName:
          $ref: '#/components/schemas/AIAttribute'
        category:
          $ref: '#/components/schemas/AIAttributeCategory'
        isPii:
          type: boolean
      required:
        - sourceName
        - category
        - isPii
    FileInfo:
      title: FileInfo
      type: object
      properties:
        s3Key:
          type: string
        bucket:
          type: string
        filename:
          type: string
        size:
          type: number
        downloadLink:
          type: string
      required:
        - s3Key
        - filename
        - size
    Assignment:
      title: Assignment
      type: object
      properties:
        assigneeUserId:
          type: string
        assignedByUserId:
          type: string
        timestamp:
          type: number
      required:
        - assigneeUserId
        - timestamp
    TransactionAction:
      title: TransactionAction
      type: object
      properties:
        transactionIds:
          type: array
          items:
            type: string
        comment:
          type: string
        action:
          $ref: '#/components/schemas/RuleAction'
        reason:
          type: array
          items:
            $ref: '#/components/schemas/CaseReasons'
        files:
          type: array
          items:
            $ref: '#/components/schemas/FileInfo'
      required:
        - comment
        - transactionIds
        - reason
        - action
    UserUpdateRequest:
      title: UserUpdateRequest
      type: object
      properties:
        userStateDetails:
          $ref: '#/components/schemas/UserStateDetailsInternal'
        kycStatusDetails:
          $ref: '#/components/schemas/KYCStatusDetailsInternal'
        transactionLimits:
          $ref: ../public/openapi-public-original.yaml#/components/schemas/TransactionLimits
        comment:
          $ref: '#/components/schemas/CommentRequest'
    FileImport:
      title: FileImport
      type: object
      properties:
        _id:
          type: string
        type:
          type: string
          enum:
            - TRANSACTION
            - USER
            - BUSINESS
        s3Key:
          type: string
        filename:
          type: string
        importedRecords:
          type: number
        error:
          type: string
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/TaskStatusChange'
      required:
        - _id
        - type
        - s3Key
        - filename
        - statuses
    TaskStatusChange:
      type: object
      title: TaskStatusChange
      enum:
        - IN_PROGRESS
        - PENDING
        - FAILED
        - SUCCESS
      properties:
        status:
          type: string
          enum:
            - IN_PROGRESS
            - PENDING
            - SUCCESS
            - FAILED
        timestamp:
          type: number
      required:
        - status
        - timestamp
    AccountDeletePayload:
      title: AccountDeletePayload
      type: object
      properties:
        reassignTo:
          type: string
      required:
        - reassignTo
    Account:
      title: Account
      type: object
      properties:
        id:
          type: string
        role:
          type: string
        email:
          type: string
        emailVerified:
          type: boolean
        name:
          type: string
        picture:
          type: string
        blocked:
          type: boolean
        isEscalationContact:
          type: boolean
        reviewerId:
          type: string
        allowTenantDeletion:
          type: boolean
        allowedRegions:
          type: array
          items:
            type: string
      required:
        - id
        - role
        - email
        - emailVerified
        - name
        - blocked
        - isEscalationContact
    AccountSettings:
      title: AccountSettings
      type: object
      properties:
        demoMode:
          type: boolean
    AccountInvitePayload:
      title: AccountInvitePayload
      type: object
      properties:
        email:
          type: string
        role:
          type: string
        isEscalationContact:
          type: boolean
        reviewerId:
          type: string
      required:
        - email
    ResendAccountInvitePayload:
      title: ResendAccountInvitePayload
      type: object
      properties:
        email:
          type: string
      required:
        - email
    AccountPatchPayload:
      title: AccountPatchPayload
      type: object
      properties:
        role:
          type: string
        isEscalationContact:
          type: boolean
        reviewerId:
          type: string
    Tenant:
      title: Tenant
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        region:
          type: string
        isProductionAccessDisabled:
          type: boolean
        host:
          type: string
      required:
        - id
        - name
        - isProductionAccessDisabled
    AIAttribute:
      title: CoPilotAttribute
      type: string
      enum:
        - userType
        - country
        - ruleHitNames
        - ruleHitNature
        - caseComments
        - alertComments
        - userComments
        - caseGenerationDate
        - firstPaymentAmount
        - transactionsCount
        - minAmount
        - maxAmount
        - totalTransactionAmount
        - averageTransactionAmount
        - name
        - websites
        - closureDate
        - industry
        - productsSold
        - transactionIds
    AIAttributeCategory:
      title: CoPilotAttributeCategory
      type: string
      enum:
        - CASE
        - USER
        - TRANSACTION
    TenantSettings:
      title: TenantSettings
      type: object
      properties:
        features:
          type: array
          items:
            $ref: '#/components/schemas/Feature'
        ruleActionAliases:
          type: array
          items:
            $ref: '#/components/schemas/RuleActionAlias'
        transactionStateAlias:
          type: array
          items:
            $ref: '#/components/schemas/TransactionStateAlias'
        riskLevelAlias:
          type: array
          items:
            $ref: '#/components/schemas/RiskLevelAlias'
        defaultValues:
          type: object
          properties:
            currency:
              $ref: ../public/openapi-public-original.yaml#/components/schemas/CurrencyCode
            tenantTimezone:
              $ref: '#/components/schemas/Timezone'
        aiSourcesDisabled:
          type: array
          items:
            $ref: '#/components/schemas/AIAttribute'
        isPaymentApprovalEnabled:
          type: boolean
        sanctions:
          $ref: '#/components/schemas/SanctionsSettings'
        isProductionAccessEnabled:
          type: boolean
        isAiEnabled:
          type: boolean
        kycUserStatusLock:
          type: boolean
        apiKeyViewData:
          type: array
          items:
            type: object
            properties:
              apiKey:
                type: string
              count:
                type: number
        limits:
          type: object
          properties:
            simulations:
              type: number
            seats:
              type: number
            apiKeyView:
              type: number
            ongoingMerchantMonitoringUsers:
              type: number
        narrativeMode:
          type: string
          enum:
            - STANDARD
            - COMPACT
        auth0Domain:
          type: string
        notificationsSubscriptions:
          type: object
          properties:
            console:
              type: array
              items:
                $ref: '#/components/schemas/NotificationType'
        isAccountSuspended:
          type: boolean
    TenantCreationResponse:
      title: TenantCreationResponse
      type: object
      properties:
        tenantId:
          type: string
        tenantName:
          type: string
        auth0OrganizationId:
          type: string
        usagePlanId:
          type: string
      required:
        - tenantId
        - tenantName
        - usagePlanId
    RiskClassificationScore:
      description: ''
      title: RiskClassificationScore
      type: object
      properties:
        riskLevel:
          $ref: '#/components/schemas/RiskLevel'
        lowerBoundRiskScore:
          type: number
          minimum: 0
          maximum: 100
          exclusiveMinimum: false
          exclusiveMaximum: false
        upperBoundRiskScore:
          type: number
          exclusiveMinimum: false
          exclusiveMaximum: false
          minimum: 0
          maximum: 100
      required:
        - riskLevel
        - lowerBoundRiskScore
        - upperBoundRiskScore
    RiskLevelRuleLogic:
      title: RiskLevelRuleLogic
      type: object
      properties:
        VERY_HIGH:
          type: object
        HIGH:
          type: object
        MEDIUM:
          type: object
        LOW:
          type: object
        VERY_LOW:
          type: object
      required:
        - VERY_HIGH
        - HIGH
        - MEDIUM
        - LOW
        - VERY_LOW
    RiskLevelRuleParameters:
      title: RiskLevelRuleParameters
      type: object
      properties:
        VERY_HIGH:
          type: object
        HIGH:
          type: object
        MEDIUM:
          type: object
        LOW:
          type: object
        VERY_LOW:
          type: object
      required:
        - VERY_HIGH
        - HIGH
        - MEDIUM
        - LOW
        - VERY_LOW
    RiskLevel:
      type: string
      title: RiskLevel
      enum:
        - VERY_HIGH
        - HIGH
        - MEDIUM
        - LOW
        - VERY_LOW
    RiskScoreComponent:
      title: RiskScoreComponent
      type: object
      properties:
        entityType:
          $ref: '#/components/schemas/RiskEntityType'
        parameter:
          type: string
        riskLevel:
          $ref: '#/components/schemas/RiskLevel'
        score:
          type: number
        value:
          type: object
        weight:
          type: number
      required:
        - entityType
        - parameter
        - riskLevel
        - score
        - value
        - weight
    RiskClassificationConfig:
      type: object
      title: RiskClassificationConfig
      enum:
        - VERY_HIGH
        - HIGH
        - MEDIUM
        - LOW
        - VERY_LOW
      properties:
        createdAt:
          type: number
        updatedAt:
          type: number
        classificationValues:
          type: array
          items:
            $ref: '#/components/schemas/RiskClassificationScore'
      required:
        - updatedAt
        - classificationValues
    RiskLevelRuleActions:
      title: RiskLevelRuleActions
      type: object
      properties:
        VERY_HIGH:
          $ref: '#/components/schemas/RuleAction'
        HIGH:
          $ref: '#/components/schemas/RuleAction'
        MEDIUM:
          $ref: '#/components/schemas/RuleAction'
        LOW:
          $ref: '#/components/schemas/RuleAction'
        VERY_LOW:
          $ref: '#/components/schemas/RuleAction'
      required:
        - VERY_HIGH
        - HIGH
        - MEDIUM
        - LOW
        - VERY_LOW
    RiskParameterLevelKeyValue:
      type: object
      x-examples: {}
      title: RiskParameterLevelKeyValue
      properties:
        parameterValue:
          $ref: '#/components/schemas/RiskParameterValue'
        riskValue:
          oneOf:
            - $ref: '#/components/schemas/RiskScoreValueLevel'
            - $ref: '#/components/schemas/RiskScoreValueScore'
      required:
        - parameterValue
        - riskValue
    RiskParameterValue:
      type: object
      properties:
        content:
          oneOf:
            - $ref: '#/components/schemas/RiskParameterValueLiteral'
            - $ref: '#/components/schemas/RiskParameterValueRange'
            - $ref: '#/components/schemas/RiskParameterValueMultiple'
            - $ref: '#/components/schemas/RiskParameterValueTimeRange'
            - $ref: '#/components/schemas/RiskParameterValueDayRange'
            - $ref: '#/components/schemas/RiskParameterValueAmountRange'
      required:
        - content
    RiskParameterValueLiteral:
      title: RiskParameterValueLiteral
      properties:
        kind:
          type: string
          enum:
            - LITERAL
        content:
          $ref: '#/components/schemas/AnyValue'
      required:
        - kind
    RiskParameterValueRange:
      title: RiskParameterValueRange
      properties:
        kind:
          type: string
          enum:
            - RANGE
        start:
          type: number
        end:
          type: number
      required:
        - kind
    RiskParameterValueMultiple:
      title: RiskParameterValueMultiple
      properties:
        kind:
          type: string
          enum:
            - MULTIPLE
        values:
          type: array
          items:
            $ref: '#/components/schemas/RiskParameterValueLiteral'
      required:
        - kind
        - values
    RiskParameterValueTimeRange:
      title: RiskParameterValueTimeRange
      properties:
        kind:
          type: string
          enum:
            - TIME_RANGE
        startHour:
          type: number
        endHour:
          type: number
        timezone:
          type: string
      required:
        - kind
        - startHour
        - endHour
        - timezone
    RiskParameterValueAmountRange:
      title: RiskParameterValueAmountRange
      properties:
        kind:
          type: string
          enum:
            - AMOUNT_RANGE
        start:
          type: number
        end:
          type: number
        currency:
          $ref: ../public/openapi-public-original.yaml#/components/schemas/CurrencyCode
      required:
        - kind
        - start
        - end
        - currency
    RiskParameterValueDayRange:
      title: RiskParameterValueDayRange
      properties:
        kind:
          type: string
          enum:
            - DAY_RANGE
        start:
          type: number
        end:
          type: number
        startGranularity:
          type: string
          enum:
            - DAYS
            - MONTHS
            - YEARS
        endGranularity:
          type: string
          enum:
            - DAYS
            - MONTHS
            - YEARS
            - INFINITE
      required:
        - kind
        - start
        - end
        - startGranularity
        - endGranularity
    ParameterAttributeRiskValues:
      title: ParameterAttributeRiskValues
      type: object
      x-examples:
        example-1:
          parameter: userDetails.countryOfResidence
          riskEntityType: CONSUMER_USER
          riskLevelAssignmentValues:
            DE: LOW
            TR: HIGH
      properties:
        parameter:
          type: string
          enum:
            - userDetails.countryOfResidence
            - userDetails.countryOfNationality
            - originPaymentDetails.method
            - destinationPaymentDetails.method
            - originAmountDetails.country
            - destinationAmountDetails.country
            - originAmountDetails.transactionCurrency
            - destinationAmountDetails.transactionCurrency
            - ipAddressCountry
            - type
            - legalEntity.companyRegistrationDetails.registrationCountry
            - shareHolders
            - directors
            - legalEntity.companyGeneralDetails.businessIndustry
            - userDetails.dateOfBirth
            - legalEntity.companyRegistrationDetails.dateOfRegistration
            - consumerCreatedTimestamp
            - businessCreatedTimestamp
            - createdTimestamp
            - timestamp
            - domesticOrForeignOriginCountryConsumer
            - domesticOrForeignDestinationCountryConsumer
            - domesticOrForeignOriginCountryBusiness
            - domesticOrForeignDestinationCountryBusiness
            - _3dsDone
            - cardIssuedCountry
            - legalEntity.companyGeneralDetails.userRegistrationStatus
            - legalEntity.companyGeneralDetails.userSegment
            - userSegment
            - originPaymentDetails.bankName
            - destinationPaymentDetails.bankName
            - originUserSarFiled
            - destinationUserSarFiled
            - employmentStatus
            - occupation
            - reasonForAccountOpening
            - sourceOfFunds
            - originAmountDetails.transactionAmount
            - destinationAmountDetails.transactionAmount
            - originMccCode
            - destinationMccCode
        isActive:
          type: boolean
        isDerived:
          type: boolean
        riskEntityType:
          $ref: '#/components/schemas/RiskEntityType'
        riskLevelAssignmentValues:
          type: array
          items:
            $ref: '#/components/schemas/RiskParameterLevelKeyValue'
        parameterType:
          type: string
          enum:
            - ITERABLE
            - VARIABLE
        targetIterableParameter:
          type: string
          enum:
            - generalDetails.countryOfNationality
        weight:
          type: number
          minimum: 0.1
          maximum: 1
        isNullableAllowed:
          type: boolean
        value:
          type: object
        defaultValue:
          oneOf:
            - $ref: '#/components/schemas/RiskScoreValueLevel'
            - $ref: '#/components/schemas/RiskScoreValueScore'
      required:
        - parameter
        - isActive
        - isDerived
        - riskEntityType
        - riskLevelAssignmentValues
        - defaultValue
        - weight
    RiskScoreValueLevel:
      title: RiskScoreValueLevel
      type: object
      properties:
        type:
          type: string
          enum:
            - RISK_LEVEL
        value:
          $ref: '#/components/schemas/RiskLevel'
      required:
        - type
        - value
    RiskScoreValueScore:
      title: RiskValueScore
      type: object
      properties:
        type:
          type: string
          enum:
            - RISK_SCORE
        value:
          type: number
      required:
        - type
        - value
    Feature:
      type: string
      title: Feature
      enum:
        - RISK_LEVELS
        - RISK_SCORING
        - AUDIT_LOGS
        - SLACK_ALERTS
        - NARRATIVE_COPILOT
        - AI_FORENSICS
        - GOOGLE_SSO
        - SANCTIONS
        - FALSE_POSITIVE_CHECK
        - DEMO_MODE
        - DEMO_RULES
        - SIMULATOR
        - CRM
        - ENTITY_LINKING
        - ADVANCED_WORKFLOWS
        - IBAN_RESOLUTION
        - MERCHANT_MONITORING
        - SAR
        - QA
        - RULES_ENGINE_V8
        - SYNC_TRS_CALCULATION
        - NOTIFICATIONS
      description: ''
    ManagedRoleName:
      type: string
      title: ManagedRoleName
      enum:
        - root
        - whitelabel-root
        - admin
        - user
        - analyst
        - approver
        - auditor
        - developer
    CreateAccountRole:
      type: object
      title: CreateAccountRole
      properties:
        name:
          type: string
        description:
          type: string
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
      required:
        - name
        - description
        - permissions
    AccountRole:
      type: object
      title: AccountRole
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
      required:
        - id
        - name
        - description
        - permissions
    Permission:
      type: string
      title: Permission
      enum:
        - case-management:case-overview:read
        - case-management:case-overview:write
        - case-management:case-details:read
        - case-management:case-details:write
        - case-management:case-reopen:write
        - case-management:qa:read
        - case-management:qa:write
        - case-management:export:read
        - rules:my-rules:read
        - rules:my-rules:write
        - rules:library:read
        - risk-scoring:risk-levels:read
        - risk-scoring:risk-levels:write
        - risk-scoring:risk-factors:read
        - risk-scoring:risk-factors:write
        - risk-scoring:risk-algorithms:read
        - users:user-overview:read
        - users:user-overview:write
        - users:user-comments:write
        - users:user-details:read
        - users:import:write
        - dashboard:download-data:read
        - settings:organisation:read
        - settings:organisation:write
        - settings:developers:read
        - settings:developers:write
        - sanctions:search:read
        - sanctions:search:write
        - transactions:overview:read
        - transactions:overview:write
        - transactions:details:read
        - transactions:export:read
        - transactions:import:write
        - audit-log:export:read
        - lists:all:read
        - lists:all:write
        - lists:export:read
        - simulator:simulations:read
        - simulator:simulations:write
        - reports:schema:read
        - reports:generated:read
        - reports:generated:write
        - copilot:narrative:read
        - copilot:narrative:write
        - notifications:all:read
    CaseStatus:
      type: string
      title: CaseStatus
      enum:
        - OPEN
        - CLOSED
        - REOPENED
        - ESCALATED
        - IN_REVIEW_OPEN
        - IN_REVIEW_CLOSED
        - IN_REVIEW_REOPENED
        - IN_REVIEW_ESCALATED
        - OPEN_IN_PROGRESS
        - OPEN_ON_HOLD
        - ESCALATED_IN_PROGRESS
        - ESCALATED_ON_HOLD
    AlertStatus:
      type: string
      title: AlertStatus
      enum:
        - OPEN
        - CLOSED
        - REOPENED
        - ESCALATED
        - IN_REVIEW_OPEN
        - IN_REVIEW_CLOSED
        - IN_REVIEW_REOPENED
        - IN_REVIEW_ESCALATED
        - OPEN_IN_PROGRESS
        - OPEN_ON_HOLD
        - ESCALATED_IN_PROGRESS
        - ESCALATED_ON_HOLD
    DerivedStatus:
      type: string
      title: Status
      enum:
        - OPEN
        - CLOSED
        - REOPENED
        - ESCALATED
        - IN_REVIEW
        - IN_PROGRESS
        - ON_HOLD
    FilterOperator:
      type: string
      title: FilterOperator
      enum:
        - AND
        - OR
    WebhookConfiguration:
      title: WebhookConfiguration
      type: object
      description: ''
      properties:
        _id:
          type: string
        createdAt:
          type: number
          minimum: 1262300400000
        enabledAt:
          type: number
          minimum: 1262300400000
        webhookUrl:
          type: string
        events:
          type: array
          items:
            $ref: ../public/openapi-public-original.yaml#/components/schemas/WebhookEventType
        enabled:
          type: boolean
        autoDisableMessage:
          type: string
        secret:
          type: string
        expiringSecret:
          type: string
      required:
        - webhookUrl
        - events
        - enabled
    WebhookSecrets:
      title: WebhookSecrets
      type: object
      properties:
        secret:
          type: string
        expiringSecret:
          type: string
      required:
        - secret
    WebhookDeliveryAttempt:
      title: WebhookDeliveryAttempt
      type: object
      properties:
        _id:
          type: string
        deliveryTaskId:
          type: string
        webhookId:
          type: string
        webhookUrl:
          type: string
        requestStartedAt:
          type: number
        requestFinishedAt:
          type: number
        success:
          type: boolean
        event:
          $ref: ../public/openapi-public-original.yaml#/components/schemas/WebhookEventType
        eventCreatedAt:
          type: number
        request:
          type: object
        response:
          type: object
      required:
        - deliveryTaskId
        - webhookId
        - webhookUrl
        - requestStartedAt
        - requestFinishedAt
        - success
        - event
        - eventCreatedAt
        - request
    CaseReasons:
      type: string
      title: CaseReasons
      enum:
        - Other
        - False positive
        - Documents collected
        - Transaction Rejected
        - Transaction Refunded
        - Suspicious activity reported (SAR)
        - Documents not collected
        - Investigation completed
        - Escalated
        - Fraud
        - Anti-money laundering
        - Terrorist financing
        - User Blacklisted
        - User Terminated
        - Internal referral
        - External referral
    MissingUser:
      title: MissingUser
      type: object
      properties:
        userId:
          type: string
    CaseType:
      title: CaseType
      type: string
      enum:
        - MANUAL
        - SYSTEM
        - EXTERNAL
    ManualCaseCreationDataRequest:
      type: object
      title: ManualCaseCreationDataRequest
      properties:
        manualCaseData:
          $ref: '#/components/schemas/CaseStatusChange'
        files:
          type: array
          items:
            $ref: '#/components/schemas/FileInfo'
        priority:
          $ref: '#/components/schemas/Priority'
        transactionIds:
          type: array
          items:
            type: string
      required:
        - manualCaseData
        - files
        - transactionIds
    ManualCasePatchRequest:
      type: object
      title: ManualCasePatchRequest
      properties:
        caseId:
          type: string
        transactionIds:
          type: array
          items:
            type: string
        files:
          type: array
          items:
            $ref: '#/components/schemas/FileInfo'
        comment:
          type: string
      required:
        - caseId
        - transactionIds
        - files
        - comment
    CasesUsersUserIdResponse:
      title: CasesUsersUserIdResponse
      type: object
      properties:
        caseIds:
          type: array
          items:
            type: string
      required:
        - caseIds
    CaseAggregates:
      title: CaseAggregates
      type: object
      properties:
        originPaymentMethods:
          type: array
          items:
            $ref: ../public/openapi-public-original.yaml#/components/schemas/PaymentMethod
        destinationPaymentMethods:
          type: array
          items:
            $ref: ../public/openapi-public-original.yaml#/components/schemas/PaymentMethod
        tags:
          type: array
          items:
            $ref: ../public/openapi-public-original.yaml#/components/schemas/Tag
      required:
        - originPaymentMethods
        - destinationPaymentMethods
        - tags
    Case:
      title: Case
      type: object
      properties:
        caseId:
          type: string
        caseType:
          $ref: '#/components/schemas/CaseType'
        subjectType:
          $ref: '#/components/schemas/CaseSubjectType'
        createdBy:
          type: string
        createdTimestamp:
          type: number
        availableAfterTimestamp:
          type: number
        latestTransactionArrivalTimestamp:
          type: number
        caseStatus:
          $ref: '#/components/schemas/CaseStatus'
        caseTransactionsIds:
          type: array
          items:
            type: string
        creationReason:
          $ref: ../public-management/openapi-public-management-original.yaml#/components/schemas/ActionReason
        createdTimestampInternal:
          type: number
        tags:
          type: array
          items:
            $ref: ../public/openapi-public-original.yaml#/components/schemas/Tag
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/Alert'
        paymentDetails:
          type: object
          properties:
            origin:
              oneOf:
                - $ref: ../public/openapi-public-original.yaml#/components/schemas/CardDetails
                - $ref: ../public/openapi-public-original.yaml#/components/schemas/GenericBankAccountDetails
                - $ref: ../public/openapi-public-original.yaml#/components/schemas/IBANDetails
                - $ref: ../public/openapi-public-original.yaml#/components/schemas/ACHDetails
                - $ref: ../public/openapi-public-original.yaml#/components/schemas/SWIFTDetails
                - $ref: ../public/openapi-public-original.yaml#/components/schemas/MpesaDetails
                - $ref: ../public/openapi-public-original.yaml#/components/schemas/UPIDetails
                - $ref: ../public/openapi-public-original.yaml#/components/schemas/WalletDetails
                - $ref: ../public/openapi-public-original.yaml#/components/schemas/CheckDetails
            destination:
              oneOf:
                - $ref: ../public/openapi-public-original.yaml#/components/schemas/CardDetails
                - $ref: ../public/openapi-public-original.yaml#/components/schemas/GenericBankAccountDetails
                - $ref: ../public/openapi-public-original.yaml#/components/schemas/IBANDetails
                - $ref: ../public/openapi-public-original.yaml#/components/schemas/ACHDetails
                - $ref: ../public/openapi-public-original.yaml#/components/schemas/SWIFTDetails
                - $ref: ../public/openapi-public-original.yaml#/components/schemas/MpesaDetails
                - $ref: ../public/openapi-public-original.yaml#/components/schemas/UPIDetails
                - $ref: ../public/openapi-public-original.yaml#/components/schemas/WalletDetails
                - $ref: ../public/openapi-public-original.yaml#/components/schemas/CheckDetails
        paymentMethodId:
          type: string
        caseUsers:
          type: object
          properties:
            origin:
              oneOf:
                - $ref: '#/components/schemas/InternalConsumerUser'
                - $ref: '#/components/schemas/InternalBusinessUser'
                - $ref: '#/components/schemas/MissingUser'
            destination:
              oneOf:
                - $ref: '#/components/schemas/InternalConsumerUser'
                - $ref: '#/components/schemas/InternalBusinessUser'
                - $ref: '#/components/schemas/MissingUser'
            originUserDrsScore:
              type: number
            destinationUserDrsScore:
              type: number
            originUserRiskLevel:
              $ref: '#/components/schemas/RiskLevel'
            destinationUserRiskLevel:
              $ref: '#/components/schemas/RiskLevel'
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        assignments:
          type: array
          items:
            $ref: '#/components/schemas/Assignment'
        reviewAssignments:
          type: array
          items:
            $ref: '#/components/schemas/Assignment'
        statusChanges:
          type: array
          items:
            $ref: '#/components/schemas/CaseStatusChange'
        lastStatusChange:
          $ref: '#/components/schemas/CaseStatusChange'
        updatedAt:
          type: number
        priority:
          $ref: '#/components/schemas/Priority'
        relatedCases:
          type: array
          items:
            type: string
        caseHierarchyDetails:
          $ref: '#/components/schemas/CaseHierarchyDetails'
        caseTransactionsCount:
          type: number
        caseAggregates:
          $ref: '#/components/schemas/CaseAggregates'
      required:
        - caseType
        - caseAggregates
    AlertsQAAutomaticSamplingData:
      title: AlertsQAAutomaticSamplingData
      type: object
      properties:
        samplingType:
          type: string
          enum:
            - AUTOMATIC
        filters:
          $ref: '#/components/schemas/AlertQASamplingFilters'
        samplingPercentage:
          type: number
      required:
        - filters
        - samplingPercentage
        - samplingType
    AlertsQASamplingManualData:
      title: AlertsQASamplingManualData
      type: object
      properties:
        samplingType:
          type: string
          enum:
            - MANUAL
        alertIds:
          type: array
          items:
            type: string
      required:
        - alertIds
        - samplingType
    AlertsQaSamplingRequest:
      title: AlertsQASamplingRequest
      type: object
      properties:
        samplingName:
          type: string
        samplingDescription:
          type: string
        priority:
          $ref: '#/components/schemas/Priority'
        samplingData:
          oneOf:
            - $ref: '#/components/schemas/AlertsQAAutomaticSamplingData'
            - $ref: '#/components/schemas/AlertsQASamplingManualData'
      required:
        - samplingName
        - samplingDescription
        - priority
        - samplingData
    AlertsQaSamplingUpdateRequest:
      title: AlertsQASamplingUpdateRequest
      type: object
      properties:
        samplingName:
          type: string
        samplingDescription:
          type: string
        priority:
          $ref: '#/components/schemas/Priority'
        alertIds:
          type: array
          items:
            type: string
        samplingPercentage:
          type: number
    AlertsQASampleIds:
      title: AlertsQASampleIds
      type: object
      properties:
        samplingId:
          type: string
        samplingName:
          type: string
      required:
        - samplingId
        - samplingName
    AlertQASamplingFilters:
      title: AlertQASamplingFilters
      type: object
      description:
        To maintain the consistency with the AlertFilters currently we
        cannot set properties as an empty object blocked by the
        https://github.com/OpenAPITools/openapi-generator/issues/17283
    AlertsQaSampling:
      title: AlertsQASampling
      type: object
      properties:
        samplingPercentage:
          type: number
        samplingName:
          type: string
        samplingDescription:
          type: string
        priority:
          $ref: '#/components/schemas/Priority'
        createdAt:
          type: number
        updatedAt:
          type: number
        createdBy:
          type: string
        samplingId:
          type: string
        alertIds:
          type: array
          items:
            type: string
        filters:
          $ref: '#/components/schemas/AlertQASamplingFilters'
        numberOfAlerts:
          type: number
        numberOfAlertsQaDone:
          type: number
        samplingType:
          type: string
          enum:
            - MANUAL
            - AUTOMATIC
        manuallyAdded:
          type: array
          items:
            type: string
      required:
        - samplingPercentage
        - samplingName
        - samplingDescription
        - priority
        - createdAt
        - updatedAt
        - samplingType
        - samplingId
        - createdBy
    AlertQASamplingListResponse:
      title: AlertQASamplingListResponse
      type: object
      properties:
        total:
          type: number
        data:
          type: array
          items:
            $ref: '#/components/schemas/AlertsQaSampling'
      required:
        - total
        - data
    Alert:
      title: Alert
      type: object
      properties:
        _id:
          type: integer
        alertId:
          type: string
        parentAlertId:
          type: string
        createdTimestamp:
          type: number
        availableAfterTimestamp:
          type: number
        latestTransactionArrivalTimestamp:
          type: number
        caseId:
          type: string
        alertStatus:
          $ref: '#/components/schemas/AlertStatus'
        assignments:
          type: array
          items:
            $ref: '#/components/schemas/Assignment'
        reviewAssignments:
          type: array
          items:
            $ref: '#/components/schemas/Assignment'
        creationReason:
          $ref: ../public-management/openapi-public-management-original.yaml#/components/schemas/ActionReason
        createdTimestampInternal:
          type: number
        tags:
          type: array
          items:
            $ref: ../public/openapi-public-original.yaml#/components/schemas/Tag
        ruleInstanceId:
          type: string
        ruleName:
          type: string
        ruleDescription:
          type: string
        ruleId:
          type: string
        ruleAction:
          $ref: '#/components/schemas/RuleAction'
        ruleNature:
          $ref: ../public/openapi-public-original.yaml#/components/schemas/RuleNature
        ruleHitMeta:
          $ref: ../public/openapi-public-original.yaml#/components/schemas/RuleHitMeta
        ruleQueueId:
          type: string
        numberOfTransactionsHit:
          type: integer
        priority:
          $ref: '#/components/schemas/Priority'
        statusChanges:
          type: array
          items:
            $ref: '#/components/schemas/CaseStatusChange'
        lastStatusChange:
          $ref: '#/components/schemas/CaseStatusChange'
        updatedAt:
          type: number
        transactionIds:
          type: array
          items:
            type: string
        originPaymentMethods:
          type: array
          items:
            $ref: ../public/openapi-public-original.yaml#/components/schemas/PaymentMethod
        destinationPaymentMethods:
          type: array
          items:
            $ref: ../public/openapi-public-original.yaml#/components/schemas/PaymentMethod
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        ruleQaStatus:
          $ref: '#/components/schemas/ChecklistStatus'
        ruleChecklist:
          type: array
          items:
            $ref: '#/components/schemas/ChecklistItemValue'
        ruleChecklistTemplateId:
          type: string
        qaAssignment:
          type: array
          items:
            $ref: '#/components/schemas/Assignment'
      required:
        - createdTimestamp
        - ruleInstanceId
        - ruleName
        - ruleDescription
        - ruleAction
        - numberOfTransactionsHit
        - priority
    CasesListResponse:
      title: CasesListResponse
      type: object
      description: ''
      x-examples: {}
      properties:
        total:
          type: number
        data:
          type: array
          items:
            $ref: '#/components/schemas/Case'
      required:
        - total
        - data
    AlertListResponse:
      title: AlertListResponse
      type: object
      description: ''
      x-examples: {}
      properties:
        total:
          type: number
        data:
          type: array
          items:
            type: object
            title: AlertListResponseItem
            properties:
              alert:
                $ref: '#/components/schemas/Alert'
              caseCreatedTimestamp:
                type: number
              caseUsers:
                type: object
                properties:
                  origin:
                    oneOf:
                      - $ref: '#/components/schemas/InternalConsumerUser'
                      - $ref: '#/components/schemas/InternalBusinessUser'
                      - $ref: '#/components/schemas/MissingUser'
                  destination:
                    oneOf:
                      - $ref: '#/components/schemas/InternalConsumerUser'
                      - $ref: '#/components/schemas/InternalBusinessUser'
                      - $ref: '#/components/schemas/MissingUser'
                  originUserDrsScore:
                    type: number
                  destinationUserDrsScore:
                    type: number
                  originUserRiskLevel:
                    $ref: '#/components/schemas/RiskLevel'
                  destinationUserRiskLevel:
                    $ref: '#/components/schemas/RiskLevel'
              caseType:
                $ref: '#/components/schemas/CaseType'
            required:
              - alert
              - caseCreatedTimestamp
              - caseUsers
              - caseType
      required:
        - total
        - data
    AuditLogListResponse:
      title: AuditLogListResponse
      type: object
      description: ''
      x-examples: {}
      properties:
        total:
          type: number
        data:
          type: array
          items:
            $ref: '#/components/schemas/AuditLog'
      required:
        - total
        - data
    CaseRuleTransactionListResponse:
      title: CaseRuleTransactionListResponse
      type: object
      x-examples: {}
      properties:
        total:
          type: number
        data:
          type: object
          required:
            - caseTransactions
          properties:
            caseTransactions:
              type: array
              items:
                $ref: '#/components/schemas/InternalTransaction'
      required:
        - total
        - data
    CaseStatusUpdate:
      title: CaseStatusUpdate
      type: object
      properties:
        reason:
          type: array
          items:
            $ref: '#/components/schemas/CaseReasons'
        caseStatus:
          $ref: '#/components/schemas/CaseStatus'
        priority:
          $ref: '#/components/schemas/Priority'
        otherReason:
          type: string
        comment:
          type: string
        files:
          type: array
          items:
            $ref: '#/components/schemas/FileInfo'
        alertCaseId:
          type: string
        updatedAlertIds:
          type: array
          items:
            type: string
        userStateDetails:
          $ref: '#/components/schemas/UserStateDetailsInternal'
        kycStatusDetails:
          $ref: '#/components/schemas/KYCStatusDetailsInternal'
      required:
        - reason
      x-examples: {}
      description: ''
    CasesAssignmentsUpdateRequest:
      title: CasesAssignmentsUpdateRequest
      type: object
      properties:
        caseIds:
          type: array
          items:
            type: string
        assignments:
          type: array
          items:
            $ref: '#/components/schemas/Assignment'
      required:
        - caseIds
        - assignments
    CasesReviewAssignmentsUpdateRequest:
      title: CasesReviewAssignmentsUpdateRequest
      type: object
      properties:
        caseIds:
          type: array
          items:
            type: string
        reviewAssignments:
          type: array
          items:
            $ref: '#/components/schemas/Assignment'
      required:
        - caseIds
        - reviewAssignments
    CaseEscalationsUpdateRequest:
      title: CaseEscalationsUpdateRequest
      allOf:
        - $ref: '#/components/schemas/CaseStatusUpdate'
        - type: object
          properties:
            reviewAssignments:
              type: array
              items:
                $ref: '#/components/schemas/Assignment'
            assignments:
              type: array
              items:
                $ref: '#/components/schemas/Assignment'
    AlertQaStatusUpdateRequest:
      title: AlertQaStatusUpdateRequest
      type: object
      properties:
        alertIds:
          type: array
          items:
            type: string
        reason:
          type: array
          items:
            $ref: '#/components/schemas/CaseReasons'
        checklistStatus:
          $ref: '#/components/schemas/ChecklistStatus'
        otherReason:
          type: string
        comment:
          type: string
        files:
          type: array
          items:
            $ref: '#/components/schemas/FileInfo'
      required:
        - alertIds
        - reason
        - checklistStatus
    ValidateAlertsQAStatusRequest:
      title: ValidateAlertsQAStatusRequest
      type: object
      properties:
        alertIds:
          type: array
          items:
            type: string
      required:
        - alertIds
    ValidateAlertsQAStatusResponse:
      title: ValidateAlertsQAStatusResponse
      type: object
      properties:
        valid:
          type: boolean
      required:
        - valid
    AlertStatusUpdateRequest:
      title: AlertStatusUpdateRequest
      type: object
      properties:
        reason:
          type: array
          items:
            $ref: '#/components/schemas/CaseReasons'
        alertStatus:
          $ref: '#/components/schemas/AlertStatus'
        priority:
          $ref: '#/components/schemas/Priority'
        otherReason:
          type: string
        comment:
          type: string
        files:
          type: array
          items:
            $ref: '#/components/schemas/FileInfo'
        alertCaseId:
          type: string
        updatedTransactions:
          type: array
          items:
            type: string
        closeSourceCase:
          type: boolean
      required:
        - alertStatus
        - reason
    AlertsAssignmentsUpdateRequest:
      title: AlertsAssignmentsUpdateRequest
      type: object
      properties:
        alertIds:
          type: array
          items:
            type: string
        assignments:
          type: array
          items:
            $ref: '#/components/schemas/Assignment'
      required:
        - alertIds
        - assignments
    AlertQaAssignmentsUpdateRequest:
      title: AlertQaAssignmentsUpdateRequest
      type: object
      properties:
        assignments:
          type: array
          items:
            $ref: '#/components/schemas/Assignment'
      required:
        - assignments
    AlertsReviewAssignmentsUpdateRequest:
      title: AlertsReviewAssignmentsUpdateRequest
      type: object
      properties:
        alertIds:
          type: array
          items:
            type: string
        reviewAssignments:
          type: array
          items:
            $ref: '#/components/schemas/Assignment'
      required:
        - alertIds
        - reviewAssignments
    CasesStatusUpdateRequest:
      title: CasesStatusUpdateRequest
      type: object
      properties:
        caseIds:
          type: array
          items:
            type: string
        updates:
          $ref: '#/components/schemas/CaseStatusUpdate'
      required:
        - caseIds
        - updates
    AlertsStatusUpdateRequest:
      title: AlertsStatusUpdateRequest
      type: object
      properties:
        alertIds:
          type: array
          items:
            type: string
        updates:
          $ref: '#/components/schemas/AlertStatusUpdateRequest'
      required:
        - alertIds
        - updates
    AlertChecklistQaUpdateRequest:
      title: AlertChecklistQaUpdateRequest
      type: object
      properties:
        checklistItemIds:
          type: array
          items:
            type: string
        status:
          $ref: '#/components/schemas/ChecklistStatus'
      required:
        - status
        - checklistItemIds
    AlertChecklistUpdateRequest:
      title: AlertChecklistUpdateRequest
      type: object
      properties:
        checklistItemIds:
          type: array
          items:
            type: string
        done:
          $ref: '#/components/schemas/ChecklistDoneStatus'
      required:
        - done
        - checklistItemIds
    AlertsToNewCaseRequest:
      title: AlertsUpdateRequest
      type: object
      properties:
        alertIds:
          type: array
          items:
            type: string
        sourceCaseId:
          type: string
      required:
        - alertIds
        - sourceCaseId
    AlertEscalation:
      title: AlertEscalation
      type: object
      properties:
        alertId:
          type: string
        transactionIds:
          type: array
          items:
            type: string
      required:
        - alertId
    CaseEscalationRequest:
      title: CaseEscalationRequest
      type: object
      properties:
        caseUpdateRequest:
          $ref: '#/components/schemas/CaseEscalationsUpdateRequest'
        alertEscalations:
          type: array
          items:
            $ref: '#/components/schemas/AlertEscalation'
        closeSourceCase:
          type: boolean
      required:
        - caseUpdateRequest
    CaseEscalationResponse:
      title: CaseEscalationResponse
      type: object
      properties:
        childCaseId:
          type: string
        assigneeIds:
          type: array
          items:
            type: string
    CaseStatusChange:
      title: CaseStatusChange
      type: object
      properties:
        userId:
          type: string
        reason:
          type: array
          items:
            $ref: '#/components/schemas/CaseReasons'
        timestamp:
          type: number
        caseStatus:
          $ref: '#/components/schemas/CaseStatus'
        otherReason:
          type: string
        reviewerId:
          type: string
        comment:
          type: string
        meta:
          type: object
          properties:
            closeSourceCase:
              type: boolean
      required:
        - userId
        - timestamp
    SanctionsSearchRequest:
      title: SanctionsSearchRequest
      type: object
      properties:
        _id:
          type: string
        monitored:
          type: boolean
        searchTerm:
          type: string
        searchProfileId:
          type: string
        fuzziness:
          type: number
          minimum: 0
          maximum: 1
        countryCodes:
          type: array
          items:
            type: string
        yearOfBirth:
          type: number
        types:
          type: array
          items:
            $ref: '#/components/schemas/SanctionsSearchType'
        monitoring:
          $ref: '#/components/schemas/SanctionsSearchMonitoring'
        apiSearchRequest:
          type: object
      required:
        - searchTerm
    SanctionsScreeningEntity:
      type: string
      enum:
        - USER
        - BANK
        - IBAN
        - EXTERNAL_USER
    SanctionsSearchType:
      title: SanctionsSearchType
      type: string
      enum:
        - SANCTIONS
        - PEP
        - ADVERSE_MEDIA
    SanctionsSearchResponse:
      title: SanctionsSearchResponse
      type: object
      properties:
        total:
          type: number
        data:
          type: array
          items:
            $ref: '#/components/schemas/ComplyAdvantageSearchHit'
        searchId:
          type: string
        rawComplyAdvantageResponse:
          $ref: '#/components/schemas/ComplyAdvantageSearchResponse'
      required:
        - total
        - data
        - searchId
    SanctionsSearchHistoryResponse:
      title: SanctionsSearchHistoryResponse
      type: object
      properties:
        hasPrev:
          type: boolean
        prev:
          type: string
        next:
          type: string
        count:
          type: number
        limit:
          type: number
        last:
          type: string
        hasNext:
          type: boolean
        items:
          type: array
          items:
            $ref: '#/components/schemas/SanctionsSearchHistory'
      required:
        - hasPrev
        - prev
        - next
        - hasNext
        - items
        - count
        - limit
        - last
    SanctionsSearchHistory:
      title: SanctionsSearchHistory
      type: object
      properties:
        _id:
          type: string
        request:
          $ref: '#/components/schemas/SanctionsSearchRequest'
        response:
          $ref: '#/components/schemas/SanctionsSearchResponse'
        createdAt:
          type: number
        updatedAt:
          type: number
        searchedBy:
          type: string
      required:
        - _id
        - request
        - createdAt
    SanctionsSearchMonitoring:
      title: SanctionsSearchMonitoring
      type: object
      properties:
        enabled:
          type: boolean
        webhookUrl:
          type: string
      required:
        - enabled
    SanctionsScreeningDetails:
      type: object
      title: SanctionsScreeningDetails
      properties:
        name:
          type: string
        entity:
          $ref: '#/components/schemas/SanctionsScreeningEntity'
        ruleInstanceIds:
          type: array
          items:
            type: string
        userIds:
          type: array
          items:
            type: string
        transactionIds:
          type: array
          items:
            type: string
        isOngoingScreening:
          type: boolean
        isHit:
          type: boolean
        isNew:
          type: boolean
        searchId:
          type: string
        lastScreenedAt:
          type: number
    SanctionsScreeningDetailsResponse:
      type: object
      title: SanctionsScreeningDetailsResponse
      properties:
        total:
          type: number
        data:
          type: array
          items:
            $ref: '#/components/schemas/SanctionsScreeningDetails'
      required:
        - total
        - data
    SanctionsScreeningEntityStats:
      title: SanctionsScreeningEntityStats
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/SanctionsScreeningEntity'
        newCount:
          type: number
        screenedCount:
          type: number
        hitCount:
          type: number
    SanctionsScreeningStats:
      title: SanctionsScreeningStats
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SanctionsScreeningEntityStats'
    SanctionsWhitelistRequest:
      title: SanctionsWhitelistRequest
      type: object
      properties:
        whitelisted:
          type: boolean
        searchId:
          type: string
        caEntityIds:
          type: array
          items:
            type: string
        reason:
          type: string
        comment:
          type: string
        userId:
          type: string
      required:
        - whitelisted
        - searchId
        - caEntityIds
    ComplyAdvantageSearchResponse:
      title: ComplyAdvantageSearchResponse
      type: object
      properties:
        code:
          type: integer
          format: int32
        status:
          type: string
        content:
          type: object
          properties:
            data:
              type: object
              properties:
                id:
                  type: integer
                  format: int32
                ref:
                  type: string
                searcher_id:
                  type: integer
                  format: int32
                assignee_id:
                  type: integer
                  format: int32
                filters:
                  type: object
                  properties:
                    types:
                      type: array
                      items:
                        type: string
                    country_codes:
                      type: array
                      items: {}
                    birth_year:
                      type: integer
                      format: int32
                    entity_type:
                      type: string
                    remove_deceased:
                      type: integer
                      format: int32
                    exact_match:
                      type: boolean
                    fuzziness:
                      type: number
                      minimum: 0
                      maximum: 1
                match_status:
                  type: string
                risk_level:
                  type: string
                search_term:
                  type: string
                submitted_term:
                  type: string
                client_ref:
                  type: string
                total_hits:
                  type: integer
                  format: int32
                updated_at:
                  type: string
                created_at:
                  type: string
                tags:
                  type: array
                  items: {}
                labels:
                  type: array
                  items: {}
                total_matches:
                  type: integer
                  format: int32
                limit:
                  type: integer
                  format: int32
                offset:
                  type: integer
                  format: int32
                share_url:
                  type: string
                searcher:
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int32
                    email:
                      type: string
                    name:
                      type: string
                    phone:
                      type: string
                    created_at:
                      type: string
                    user_is_active:
                      type: boolean
                assignee:
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int32
                    email:
                      type: string
                    name:
                      type: string
                    phone:
                      type: string
                    created_at:
                      type: string
                    user_is_active:
                      type: boolean
                hits:
                  type: array
                  items:
                    $ref: '#/components/schemas/ComplyAdvantageSearchHit'
    MerchantMonitoringSummaryRequest:
      type: object
      properties:
        source:
          $ref: '#/components/schemas/MerchantMonitoringSource'
        userId:
          type: string
        refresh:
          type: boolean
    MerchantMonitoringScrapeRequest:
      type: object
      properties:
        userId:
          type: string
        url:
          type: string
    MerchantMonitoringSource:
      type: object
      properties:
        sourceType:
          $ref: '#/components/schemas/MerchantMonitoringSourceType'
        sourceValue:
          type: string
    MerchantMonitoringSourceType:
      type: string
      enum:
        - COMPANIES_HOUSE
        - EXPLORIUM
        - SCRAPE
    MerchantMonitoringSummary:
      type: object
      properties:
        source:
          $ref: '#/components/schemas/MerchantMonitoringSource'
        userId:
          type: string
        companyName:
          type: string
        domain:
          type: string
        url:
          type: string
        raw:
          type: string
        industry:
          type: string
        summary:
          type: string
        employees:
          type: string
        location:
          type: string
        revenue:
          type: string
        updatedAt:
          type: number
        products:
          type: array
          items:
            type: string
    MerchantMonitoringSummaryResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MerchantMonitoringSummary'
    MerchantMonitoringStatsResponse:
      type: object
      title: MerchantMonitoringStatsResponse
      properties:
        count:
          type: number
      required:
        - count
    ComplyAdvantageSearchHit:
      type: object
      properties:
        doc:
          $ref: '#/components/schemas/ComplyAdvantageSearchHitDoc'
        match_types:
          type: array
          items:
            type: string
        match_types_details:
          type: array
          items:
            type: object
            properties:
              aml_types:
                type: array
                items:
                  type: string
              matching_name:
                type: string
              name_matches:
                type: array
                items:
                  type: object
                  properties:
                    match_types:
                      type: array
                      items:
                        type: string
                    query_term:
                      type: string
              secondary_matches:
                type: array
                items:
                  type: object
                  properties:
                    match_types:
                      type: array
                      items:
                        type: string
                    query_term:
                      type: string
              sources:
                type: array
                items:
                  type: string
        score:
          type: number
    ComplyAdvantageSearchHitDoc:
      type: object
      properties:
        aka:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
        entity_type:
          type: string
        fields:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              source:
                type: string
              value:
                type: string
              tag:
                type: string
        id:
          type: string
        keywords:
          type: array
          items:
            type: string
        last_updated_utc:
          type: string
          format: date-time
        media:
          type: array
          items:
            type: object
            properties:
              snippet:
                type: string
              title:
                type: string
              url:
                type: string
        name:
          type: string
        source_notes:
          type: object
        sources:
          type: array
          items:
            type: string
        types:
          type: array
          items:
            type: string
        flagrightWhitelistInfo:
          type: object
          properties:
            whitelisted:
              type: boolean
            reason:
              type: string
            comment:
              type: string
          required:
            - whitelisted
    ComplyAdvantageWebhookEvent:
      title: ComplyAdvantageWebhookEvent
      type: object
      properties:
        event:
          type: string
          enum:
            - monitored_search_updated
        data:
          oneOf:
            - $ref: '#/components/schemas/ComplyAdvantageMonitoredSearchUpdated'
    ComplyAdvantageMonitoredSearchUpdated:
      title: ComplyAdvantageMonitoredSearchUpdated
      type: object
      properties:
        searchId:
          type: number
        updated:
          type: array
          items:
            type: string
        new:
          type: array
          items:
            type: string
        removed:
          type: array
          items:
            type: string
        isSuspended:
          type: boolean
    TransactionsUniquesField:
      title: TransactionsUniquesField
      type: string
      enum:
        - TRANSACTION_STATE
        - TAGS_KEY
        - IBAN_NUMBER
        - CARD_FINGERPRINT_NUMBER
        - BANK_ACCOUNT_NUMBER
        - ACH_ACCOUNT_NUMBER
        - SWIFT_ACCOUNT_NUMBER
        - BIC
        - BANK_SWIFT_CODE
        - UPI_IDENTIFYING_NUMBER
        - IP_ADDRESS
        - PAYMENT_CHANNELS
        - CURRENCY
        - COUNTRY
        - BANK_NAMES
        - PRODUCT_TYPES
    UsersUniquesField:
      title: UsersUniquesField
      type: string
      enum:
        - BUSINESS_INDUSTRY
        - TAGS_KEY
    RiskEntityType:
      type: string
      title: Risk entity type
      enum:
        - CONSUMER_USER
        - TRANSACTION
        - BUSINESS
    UsersUniquesResponse:
      type: object
      properties:
        businessIndustry:
          type: array
          items:
            type: string
      required:
        - businessIndustry
    DeleteTenantStatusEnum:
      type: string
      enum:
        - PENDING
        - IN_PROGRESS
        - FAILED
        - CANCELLED
        - WAITING_HARD_DELETE
        - HARD_DELETED
    DeleteTenantStatus:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/DeleteTenantStatusEnum'
        timestamp:
          type: number
        message:
          type: string
      required:
        - status
        - timestamp
    DeleteTenant:
      type: object
      properties:
        tenantId:
          type: string
        notRecoverable:
          type: boolean
        createdTimestamp:
          type: number
        hardDeleteTimestamp:
          type: number
        updatedTimestamp:
          type: number
        triggeredById:
          type: string
        triggeredByEmail:
          type: string
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/DeleteTenantStatus'
        latestStatus:
          $ref: '#/components/schemas/DeleteTenantStatusEnum'
    AuditLogType:
      title: AuditLogType
      type: string
      enum:
        - RULE
        - ACCOUNT
        - CASE
        - USER
        - RISK_SCORING
        - ALERT
        - WEBHOOK
        - API-KEY
    AuditLogActionEnum:
      title: AuditLogActionEnum
      type: string
      enum:
        - CREATE
        - DELETE
        - DEACTIVATE
        - VIEW
        - DOWNLOAD
        - CALCULATE
        - UPDATE
        - ESCALATE
    Page:
      title: Page
      type: number
      minimum: 1
    PageSize:
      title: PageSize
      type: number
      minimum: 1
      maximum: 1000
    AuditLog:
      title: AuditLog
      type: object
      properties:
        auditlogId:
          type: string
        type:
          $ref: '#/components/schemas/AuditLogType'
        subtype:
          type: string
          enum:
            - COMMENT
            - COMMENT_ALERT
            - COMMENT_CASE
            - DOCUMENT
            - RISK_CLASSIFICATION
            - DRS_RISK_LEVEL
            - PARAMETER_RISK_ITEM
            - ASSIGNMENT
            - CREATION
            - STATUS_CHANGE
            - MANUAL_CASE_CREATION
            - MANUAL_CASE_TRANSACTIONS_ADDITION
            - CHECKLIST_QA_STATUS_CHANGE
            - CHECKLIST_ITEM_STATUS_CHANGE
            - USER_STATUS_CHANGE
            - USER_KYC_STATUS_CHANGE
            - REVIEW_ASSIGNMENT
            - API_UPDATE
            - API_CREATION
        action:
          $ref: '#/components/schemas/AuditLogActionEnum'
        timestamp:
          type: number
        entityId:
          type: string
        oldImage:
          type: object
        newImage:
          type: object
        logMetadata:
          type: object
        user:
          $ref: '#/components/schemas/Account'
      required:
        - type
        - action
    NewListPayload:
      title: NewListPayload
      type: object
      properties:
        listType:
          $ref: ../public/openapi-public-original.yaml#/components/schemas/ListType
        subtype:
          $ref: ../public/openapi-public-original.yaml#/components/schemas/ListSubtype
        data:
          $ref: ../public/openapi-public-original.yaml#/components/schemas/ListData
      required:
        - listType
        - subtype
        - data
    SimulationRiskLevelsParameters:
      title: SimulationRiskLevelsParameters
      type: object
      properties:
        type:
          $ref: '#/components/schemas/SimulationRiskLevelsType'
        classificationValues:
          type: array
          items:
            $ref: '#/components/schemas/RiskClassificationScore'
        parameterAttributeRiskValues:
          type: array
          items:
            $ref: '#/components/schemas/ParameterAttributeRiskValues'
        sampling:
          $ref: '#/components/schemas/SimulationRiskLevelsSampling'
        name:
          type: string
        description:
          type: string
      required:
        - type
        - name
    SimulationRiskFactorsParameters:
      title: SimulationRiskFactorsParameters
      type: object
      properties:
        type:
          $ref: '#/components/schemas/SimulationRiskFactorsType'
        parameterAttributeRiskValues:
          type: array
          items:
            $ref: '#/components/schemas/ParameterAttributeRiskValues'
        name:
          type: string
        description:
          type: string
      required:
        - type
        - name
        - parameterAttributeRiskValues
    SimulationBeaconSampling:
      title: SimulationBeaconSampling
      type: object
      properties:
        transactionsCount:
          type: number
        filters:
          type: object
          properties:
            afterTimestamp:
              type: number
            beforeTimestamp:
              type: number
          required:
            - afterTimestamp
            - beforeTimestamp
      required:
        - transactionsCount
    SimulationBeaconParameters:
      title: SimulationBeaconParameters
      type: object
      properties:
        type:
          $ref: '#/components/schemas/SimulationBeaconType'
        ruleInstance:
          $ref: '#/components/schemas/RuleInstance'
        sampling:
          $ref: '#/components/schemas/SimulationBeaconSampling'
        name:
          type: string
        description:
          type: string
      required:
        - type
        - ruleInstance
        - name
    SimulationBeaconParametersRequest:
      title: SimulationBeaconParametersRequest
      type: object
      properties:
        jobId:
          type: string
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/SimulationBeaconParameters'
        type:
          $ref: '#/components/schemas/SimulationBeaconType'
        defaultRuleInstance:
          $ref: '#/components/schemas/RuleInstance'
      required:
        - parameters
        - type
        - defaultRuleInstance
    SimulationBeaconStatistics:
      title: SimulationBeaconStatistics
      type: object
      properties:
        totalCases:
          type: number
        transactionsHit:
          type: number
        usersHit:
          type: number
        falsePositivesCases:
          type: number
    SimulationBeaconStatisticsResult:
      title: SimulationBeaconStatisticsResult
      type: object
      properties:
        current:
          $ref: '#/components/schemas/SimulationBeaconStatistics'
        simulated:
          $ref: '#/components/schemas/SimulationBeaconStatistics'
    SimulationIteration:
      title: SimulationBeaconIteration
      type: object
      properties:
        taskId:
          type: string
        name:
          type: string
        description:
          type: string
        createdAt:
          type: number
        progress:
          type: number
          minimum: 0
          maximum: 1
        latestStatus:
          $ref: '#/components/schemas/TaskStatusChange'
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/TaskStatusChange'
      required:
        - taskId
        - progress
        - latestStatus
        - statuses
        - name
    SimulationBeaconIteration:
      title: SimulationBeaconIteration
      allOf:
        - $ref: '#/components/schemas/SimulationIteration'
        - type: object
          properties:
            type:
              $ref: '#/components/schemas/SimulationBeaconType'
            parameters:
              $ref: '#/components/schemas/SimulationBeaconParameters'
            statistics:
              $ref: '#/components/schemas/SimulationBeaconStatisticsResult'
          required:
            - type
            - parameters
            - statistics
    SimulationRiskLevelsParametersRequest:
      title: SimulationRiskLevelsParametersRequest
      type: object
      properties:
        jobId:
          type: string
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/SimulationRiskLevelsParameters'
        type:
          $ref: '#/components/schemas/SimulationRiskLevelsType'
        defaultRiskClassifications:
          type: array
          items:
            $ref: '#/components/schemas/RiskClassificationScore'
      required:
        - parameters
        - type
        - defaultRiskClassifications
    SimulationRiskFactorsParametersRequest:
      title: SimulationRiskFactorsParametersRequest
      type: object
      properties:
        jobId:
          type: string
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/SimulationRiskFactorsParameters'
        type:
          $ref: '#/components/schemas/SimulationRiskFactorsType'
        sampling:
          $ref: '#/components/schemas/SimulationRiskFactorsSampling'
      required:
        - parameters
        - type
        - sampling
    SimulationRiskFactorsType:
      title: SimulationRiskFactorsType
      type: string
      enum:
        - RISK_FACTORS
    SimulationRiskLevelsSampling:
      title: SimulationRiskLevelsSampling
      type: object
      properties:
        usersCount:
          type: integer
        userLatestTransactionsCount:
          type: integer
    SimulationRiskFactorsSampling:
      title: SimulationRiskFactorsSampling
      type: object
      properties:
        usersCount:
          type: string
          enum:
            - ALL
            - RANDOM
    SimulationJob:
      title: SimulationRiskLevelsJob
      type: object
      properties:
        jobId:
          type: string
        createdAt:
          type: number
        createdBy:
          type: string
        internal:
          type: boolean
      required:
        - jobId
        - createdBy
    RulesSearchResponse:
      title: RulesSearchResponse
      type: object
      properties:
        bestSearches:
          type: array
          items:
            $ref: '#/components/schemas/Rule'
        otherSearches:
          type: array
          items:
            $ref: '#/components/schemas/Rule'
        filtersApplied:
          type: object
          properties:
            typologies:
              type: array
              items:
                type: string
            ruleNature:
              type: array
              items:
                $ref: ../public/openapi-public-original.yaml#/components/schemas/RuleNature
            checksFor:
              type: array
              items:
                type: string
            types:
              type: array
              items:
                type: string
            isAi:
              type: boolean
      required:
        - bestSearches
        - otherSearches
    SimulationRiskLevelsJob:
      title: SimulationRiskLevelsJob
      allOf:
        - $ref: '#/components/schemas/SimulationJob'
        - type: object
          properties:
            type:
              $ref: '#/components/schemas/SimulationRiskLevelsType'
            iterations:
              type: array
              items:
                $ref: '#/components/schemas/SimulationRiskLevelsIteration'
            defaultRiskClassifications:
              type: array
              items:
                $ref: '#/components/schemas/RiskClassificationScore'
          required:
            - type
            - iterations
            - defaultRiskClassifications
    SimulationRiskFactorsJob:
      title: SimulationRiskFactorsJob
      allOf:
        - $ref: '#/components/schemas/SimulationJob'
        - type: object
          properties:
            type:
              $ref: '#/components/schemas/SimulationRiskFactorsType'
            iterations:
              type: array
              items:
                $ref: '#/components/schemas/SimulationRiskFactorsIteration'
            defaultParameterRiskValues:
              type: array
              items:
                $ref: '#/components/schemas/ParameterAttributeRiskValues'
          required:
            - type
            - iterations
            - defaultParameterRiskValues
    SimulationBeaconJob:
      title: SimulationBeaconJob
      allOf:
        - $ref: '#/components/schemas/SimulationJob'
        - type: object
          properties:
            type:
              $ref: '#/components/schemas/SimulationBeaconType'
            iterations:
              type: array
              items:
                $ref: '#/components/schemas/SimulationBeaconIteration'
            defaultRuleInstance:
              $ref: '#/components/schemas/RuleInstance'
          required:
            - type
            - iterations
            - defaultRuleInstance
    SimulationRiskLevelsIteration:
      title: SimulationRiskLevelsIteration
      allOf:
        - $ref: '#/components/schemas/SimulationIteration'
        - type: object
          properties:
            type:
              $ref: '#/components/schemas/SimulationRiskLevelsType'
            parameters:
              $ref: '#/components/schemas/SimulationRiskLevelsParameters'
            statistics:
              $ref: '#/components/schemas/SimulationRiskLevelsStatisticsResult'
          required:
            - type
            - parameters
            - statistics
    SimulationRiskFactorsIteration:
      title: SimulationRiskFactorsIteration
      allOf:
        - $ref: '#/components/schemas/SimulationIteration'
        - type: object
          properties:
            type:
              $ref: '#/components/schemas/SimulationRiskFactorsType'
            parameters:
              $ref: '#/components/schemas/SimulationRiskFactorsParameters'
            statistics:
              $ref: '#/components/schemas/SimulationRiskFactorsStatisticsResult'
          required:
            - type
            - parameters
            - statistics
    TrsScoresResponse:
      title: TrsScoresResponse
      type: object
      properties:
        average:
          type: number
      required:
        - average
    TenantCreationRequest:
      title: TenantCreationRequest
      type: object
      properties:
        tenantName:
          type: string
        tenantWebsite:
          type: string
        features:
          type: array
          items:
            $ref: '#/components/schemas/Feature'
        adminEmails:
          type: array
          items:
            type: string
        tenantId:
          type: string
        auth0Domain:
          type: string
        auth0DisplayName:
          type: string
        seats:
          type: number
        sanctionsMarketType:
          $ref: '#/components/schemas/SanctionsSettingsMarketType'
      required:
        - tenantName
        - tenantWebsite
        - auth0Domain
        - auth0DisplayName
        - adminEmails
        - features
    SimulationRiskLevelsStatistics:
      type: object
      title: SimulationRiskLevelsStatistics
      properties:
        count:
          type: number
        riskType:
          type: string
          enum:
            - KRS
            - DRS
            - ARS
        riskLevel:
          $ref: '#/components/schemas/RiskLevel'
    SimulationRiskFactorsStatistics:
      type: object
      title: SimulationRiskLevelsStatistics
      properties:
        count:
          type: number
        riskType:
          type: string
          enum:
            - KRS
            - ARS
        riskLevel:
          $ref: '#/components/schemas/RiskLevel'
    SimulationRiskLevelsStatisticsResult:
      type: object
      title: SimulationRiskLevelsStatisticsResult
      properties:
        current:
          type: array
          items:
            $ref: '#/components/schemas/SimulationRiskLevelsStatistics'
        simulated:
          type: array
          items:
            $ref: '#/components/schemas/SimulationRiskLevelsStatistics'
    SimulationRiskFactorsStatisticsResult:
      type: object
      title: SimulationRiskLevelsStatisticsResult
      properties:
        current:
          type: array
          items:
            $ref: '#/components/schemas/SimulationRiskFactorsStatistics'
        simulated:
          type: array
          items:
            $ref: '#/components/schemas/SimulationRiskFactorsStatistics'
    SimulationRiskLevelsType:
      title: SimulationRiskLevelsType
      type: string
      enum:
        - PULSE
    SimulationBeaconType:
      title: SimulationBeaconType
      type: string
      enum:
        - BEACON
    SimulationRiskFactorsRiskScoreResult:
      title: SimulationRiskFactorsRiskScoreResult
      type: object
      properties:
        krs:
          type: object
          properties:
            riskScore:
              type: number
            riskLevel:
              $ref: '#/components/schemas/RiskLevel'
    SimulationRiskLevelsRiskScoreResult:
      title: SimulationRiskLevelsResult
      type: object
      properties:
        krs:
          type: object
          properties:
            riskScore:
              type: number
            riskLevel:
              $ref: '#/components/schemas/RiskLevel'
        drs:
          type: object
          properties:
            riskScore:
              type: number
            riskLevel:
              $ref: '#/components/schemas/RiskLevel'
    SimulationRiskLevelsResult:
      title: SimulationRiskLevelsResult
      type: object
      properties:
        taskId:
          type: string
        type:
          type: string
          enum:
            - PULSE
        userId:
          type: string
        userType:
          type: string
        current:
          $ref: '#/components/schemas/SimulationRiskLevelsRiskScoreResult'
        simulated:
          $ref: '#/components/schemas/SimulationRiskLevelsRiskScoreResult'
        userName:
          type: string
      required:
        - taskId
        - type
        - userId
        - old
        - new
        - userName
    SimulationRiskFactorsResult:
      title: SimulationRiskFactorsResult
      type: object
      properties:
        taskId:
          type: string
        type:
          type: string
          enum:
            - RISK_FACTORS
        userId:
          type: string
        userType:
          type: string
        current:
          $ref: '#/components/schemas/SimulationRiskFactorsRiskScoreResult'
        simulated:
          $ref: '#/components/schemas/SimulationRiskFactorsRiskScoreResult'
        userName:
          type: string
      required:
        - taskId
        - type
        - userId
        - old
        - new
        - userName
    SimulationRiskLevelsAndRiskFactorsResult:
      title: SimulationRiskLevelsAndRiskFactorsResult
      type: object
      properties:
        taskId:
          type: string
        type:
          type: string
          enum:
            - PULSE
            - RISK_FACTORS
        userId:
          type: string
        userType:
          type: string
        current:
          $ref: '#/components/schemas/SimulationRiskLevelsRiskScoreResult'
        simulated:
          $ref: '#/components/schemas/SimulationRiskLevelsRiskScoreResult'
        userName:
          type: string
      required:
        - taskId
        - type
        - userId
        - old
        - new
        - userName
    SimulationRiskLevelsAndRiskFactorsResultResponse:
      title: SimulationRiskLevelsAndRiskFactorsResultResponse
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/SimulationRiskLevelsAndRiskFactorsResult'
        total:
          type: number
      required:
        - items
        - total
    SimulationRiskFactorsResultResponse:
      title: SimulationRiskFactorsResultResponse
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/SimulationRiskFactorsResult'
        total:
          type: number
      required:
        - items
        - total
    SortOrder:
      type: string
      enum:
        - ascend
        - descend
    Info:
      type: object
      properties:
        region:
          type: string
      required:
        - region
    SimulationPostResponse:
      type: object
      properties:
        taskIds:
          type: array
          items:
            type: string
        jobId:
          type: string
      required:
        - taskIds
        - jobId
    SimulationGetResponse:
      title: SimulationGetResponse
      type: object
      properties:
        total:
          type: integer
        data:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/SimulationRiskLevelsJob'
              - $ref: '#/components/schemas/SimulationBeaconJob'
              - $ref: '#/components/schemas/SimulationRiskFactorsJob'
      required:
        - total
        - data
    SimulationStats:
      type: object
      properties:
        runJobsCount:
          type: integer
      required:
        - runJobsCount
    CaseHierarchyDetails:
      title: CaseHierarchyDetails
      type: object
      properties:
        parentCaseId:
          type: string
        childCaseIds:
          type: array
          items:
            type: string
        childTransactionIds:
          type: array
          items:
            type: string
    ReportHierarchyDetails:
      title: ReportHierarchyDetails
      type: object
      properties:
        parentId:
          type: string
        childIds:
          type: array
          items:
            type: string
    NarrativeTemplateRequest:
      title: NarrativeTemplateRequest
      type: object
      properties:
        name:
          type: string
        description:
          type: string
      required:
        - name
        - description
    NarrativeTemplate:
      title: NarrativeTemplate
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        id:
          type: string
        createdAt:
          type: number
        updatedAt:
          type: number
        _id:
          type: string
      required:
        - name
        - description
        - id
        - createdAt
        - updatedAt
    NarrativeTemplateResponse:
      title: NarrativeTemplateResponse
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/NarrativeTemplate'
        total:
          type: number
      required:
        - items
        - total
    ReportSchema:
      title: ReportSchema
      type: object
      properties:
        settings:
          type: object
          properties:
            propertyNameStyle:
              type: string
              enum:
                - SNAKE_CASE
                - AS_IS
                - CAMEL_CASE
        reportSchema:
          type: object
        transactionMetadataSchema:
          type: object
        transactionSchema:
          type: object
        indicators:
          type: array
          items:
            type: object
            required:
              - key
              - description
            properties:
              key:
                type: string
              description:
                type: string
    ReportType:
      title: ReportType
      type: object
      required:
        - id
        - type
        - countryCode
        - country
        - directSubmission
      properties:
        id:
          type: string
        type:
          type: string
        implemented:
          type: boolean
        country:
          type: string
        countryCode:
          $ref: ../public/openapi-public-original.yaml#/components/schemas/CountryCode
        directSubmission:
          type: boolean
    ReportRevision:
      title: ReportRevision
      type: object
      required:
        - output
        - createdAt
      properties:
        output:
          type: string
        createdAt:
          type: number
    ReportStatus:
      type: string
      title: ReportStatus
      enum:
        - COMPLETE
        - DRAFT
        - SUBMITTING
        - SUBMISSION_ACCEPTED
        - SUBMISSION_REJECTED
        - SUBMISSION_SUCCESSFUL
    Report:
      title: Report
      type: object
      required:
        - name
        - description
        - createdById
        - reportTypeId
        - caseId
        - status
        - createdAt
        - updatedAt
        - parameters
        - comments
        - revisions
        - caseUserId
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        status:
          $ref: '#/components/schemas/ReportStatus'
        statusInfo:
          type: string
        caseId:
          type: string
        reportTypeId:
          type: string
        schema:
          $ref: '#/components/schemas/ReportSchema'
          readOnly: true
        caseUserId:
          type: string
        createdById:
          type: string
        createdByName:
          type: string
        createdAt:
          type: number
        updatedAt:
          type: number
        parameters:
          $ref: '#/components/schemas/ReportParameters'
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        revisions:
          type: array
          items:
            $ref: '#/components/schemas/ReportRevision'
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/FileInfo'
        hierarchy:
          $ref: '#/components/schemas/ReportHierarchyDetails'
        caseUser:
          oneOf:
            - $ref: '#/components/schemas/InternalConsumerUser'
            - $ref: '#/components/schemas/InternalBusinessUser'
    ReportParameters:
      type: object
      properties:
        report:
          type: object
        transactionMetadata:
          type: object
        indicators:
          type: array
          items:
            type: string
        transactions:
          type: array
          items:
            type: object
            required:
              - id
              - transaction
            properties:
              id:
                type: string
              transaction:
                type: object
    ReportTypesResponse:
      title: ReportTypesResponse
      type: object
      properties:
        total:
          type: integer
        data:
          type: array
          items:
            $ref: '#/components/schemas/ReportType'
      required:
        - total
        - data
    ReportsResponse:
      title: ReportsResponse
      type: object
      properties:
        total:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/Report'
      required:
        - total
        - items
    ReportStatusUpdateRequest:
      title: ReportStatusUpdateRequest
      type: object
      required:
        - status
        - statusInfo
      properties:
        status:
          $ref: '#/components/schemas/ReportStatus'
        statusInfo:
          type: string
    Timezone:
      type: string
      title: Timezone
      enum:
        - Africa/Abidjan
        - Africa/Algiers
        - Africa/Bissau
        - Africa/Cairo
        - Africa/Casablanca
        - Africa/Ceuta
        - Africa/El_Aaiun
        - Africa/Johannesburg
        - Africa/Juba
        - Africa/Khartoum
        - Africa/Lagos
        - Africa/Maputo
        - Africa/Monrovia
        - Africa/Nairobi
        - Africa/Ndjamena
        - Africa/Sao_Tome
        - Africa/Tripoli
        - Africa/Tunis
        - Africa/Windhoek
        - America/Adak
        - America/Anchorage
        - America/Araguaina
        - America/Argentina/Buenos_Aires
        - America/Argentina/Catamarca
        - America/Argentina/Cordoba
        - America/Argentina/Jujuy
        - America/Argentina/La_Rioja
        - America/Argentina/Mendoza
        - America/Argentina/Rio_Gallegos
        - America/Argentina/Salta
        - America/Argentina/San_Juan
        - America/Argentina/San_Luis
        - America/Argentina/Tucuman
        - America/Argentina/Ushuaia
        - America/Asuncion
        - America/Bahia
        - America/Bahia_Banderas
        - America/Barbados
        - America/Belem
        - America/Belize
        - America/Boa_Vista
        - America/Bogota
        - America/Boise
        - America/Cambridge_Bay
        - America/Campo_Grande
        - America/Cancun
        - America/Caracas
        - America/Cayenne
        - America/Chicago
        - America/Chihuahua
        - America/Ciudad_Juarez
        - America/Costa_Rica
        - America/Cuiaba
        - America/Danmarkshavn
        - America/Dawson
        - America/Dawson_Creek
        - America/Denver
        - America/Detroit
        - America/Edmonton
        - America/Eirunepe
        - America/El_Salvador
        - America/Fort_Nelson
        - America/Fortaleza
        - America/Glace_Bay
        - America/Goose_Bay
        - America/Grand_Turk
        - America/Guatemala
        - America/Guayaquil
        - America/Guyana
        - America/Halifax
        - America/Havana
        - America/Hermosillo
        - America/Indiana/Indianapolis
        - America/Indiana/Knox
        - America/Indiana/Marengo
        - America/Indiana/Petersburg
        - America/Indiana/Tell_City
        - America/Indiana/Vevay
        - America/Indiana/Vincennes
        - America/Indiana/Winamac
        - America/Inuvik
        - America/Iqaluit
        - America/Jamaica
        - America/Juneau
        - America/Kentucky/Louisville
        - America/Kentucky/Monticello
        - America/La_Paz
        - America/Lima
        - America/Los_Angeles
        - America/Maceio
        - America/Managua
        - America/Manaus
        - America/Martinique
        - America/Matamoros
        - America/Mazatlan
        - America/Menominee
        - America/Merida
        - America/Metlakatla
        - America/Mexico_City
        - America/Miquelon
        - America/Moncton
        - America/Monterrey
        - America/Montevideo
        - America/New_York
        - America/Nome
        - America/Noronha
        - America/North_Dakota/Beulah
        - America/North_Dakota/Center
        - America/North_Dakota/New_Salem
        - America/Nuuk
        - America/Ojinaga
        - America/Panama
        - America/Paramaribo
        - America/Phoenix
        - America/Port-au-Prince
        - America/Porto_Velho
        - America/Puerto_Rico
        - America/Punta_Arenas
        - America/Rankin_Inlet
        - America/Recife
        - America/Regina
        - America/Resolute
        - America/Rio_Branco
        - America/Santarem
        - America/Santiago
        - America/Santo_Domingo
        - America/Sao_Paulo
        - America/Scoresbysund
        - America/Sitka
        - America/St_Johns
        - America/Swift_Current
        - America/Tegucigalpa
        - America/Thule
        - America/Tijuana
        - America/Toronto
        - America/Vancouver
        - America/Whitehorse
        - America/Winnipeg
        - America/Yakutat
        - Antarctica/Casey
        - Antarctica/Davis
        - Antarctica/Macquarie
        - Antarctica/Mawson
        - Antarctica/Palmer
        - Antarctica/Rothera
        - Antarctica/Troll
        - Asia/Almaty
        - Asia/Amman
        - Asia/Anadyr
        - Asia/Aqtau
        - Asia/Aqtobe
        - Asia/Ashgabat
        - Asia/Atyrau
        - Asia/Baghdad
        - Asia/Baku
        - Asia/Bangkok
        - Asia/Barnaul
        - Asia/Beirut
        - Asia/Bishkek
        - Asia/Chita
        - Asia/Choibalsan
        - Asia/Colombo
        - Asia/Damascus
        - Asia/Dhaka
        - Asia/Dili
        - Asia/Dubai
        - Asia/Dushanbe
        - Asia/Famagusta
        - Asia/Gaza
        - Asia/Hebron
        - Asia/Ho_Chi_Minh
        - Asia/Hong_Kong
        - Asia/Hovd
        - Asia/Irkutsk
        - Asia/Jakarta
        - Asia/Jayapura
        - Asia/Jerusalem
        - Asia/Kabul
        - Asia/Kamchatka
        - Asia/Karachi
        - Asia/Kathmandu
        - Asia/Khandyga
        - Asia/Kolkata
        - Asia/Krasnoyarsk
        - Asia/Kuching
        - Asia/Macau
        - Asia/Magadan
        - Asia/Makassar
        - Asia/Manila
        - Asia/Nicosia
        - Asia/Novokuznetsk
        - Asia/Novosibirsk
        - Asia/Omsk
        - Asia/Oral
        - Asia/Pontianak
        - Asia/Pyongyang
        - Asia/Qatar
        - Asia/Qostanay
        - Asia/Qyzylorda
        - Asia/Riyadh
        - Asia/Sakhalin
        - Asia/Samarkand
        - Asia/Seoul
        - Asia/Shanghai
        - Asia/Singapore
        - Asia/Srednekolymsk
        - Asia/Taipei
        - Asia/Tashkent
        - Asia/Tbilisi
        - Asia/Tehran
        - Asia/Thimphu
        - Asia/Tokyo
        - Asia/Tomsk
        - Asia/Ulaanbaatar
        - Asia/Urumqi
        - Asia/Ust-Nera
        - Asia/Vladivostok
        - Asia/Yakutsk
        - Asia/Yangon
        - Asia/Yekaterinburg
        - Asia/Yerevan
        - Atlantic/Azores
        - Atlantic/Bermuda
        - Atlantic/Canary
        - Atlantic/Cape_Verde
        - Atlantic/Faroe
        - Atlantic/Madeira
        - Atlantic/South_Georgia
        - Atlantic/Stanley
        - Australia/Adelaide
        - Australia/Brisbane
        - Australia/Broken_Hill
        - Australia/Darwin
        - Australia/Eucla
        - Australia/Hobart
        - Australia/Lindeman
        - Australia/Lord_Howe
        - Australia/Melbourne
        - Australia/Perth
        - Australia/Sydney
        - CET
        - CST6CDT
        - EET
        - EST
        - EST5EDT
        - Etc/GMT
        - Etc/GMT-1
        - Etc/GMT-10
        - Etc/GMT-11
        - Etc/GMT-12
        - Etc/GMT-13
        - Etc/GMT-14
        - Etc/GMT-2
        - Etc/GMT-3
        - Etc/GMT-4
        - Etc/GMT-5
        - Etc/GMT-6
        - Etc/GMT-7
        - Etc/GMT-8
        - Etc/GMT-9
        - Etc/GMT+1
        - Etc/GMT+10
        - Etc/GMT+11
        - Etc/GMT+12
        - Etc/GMT+2
        - Etc/GMT+3
        - Etc/GMT+4
        - Etc/GMT+5
        - Etc/GMT+6
        - Etc/GMT+7
        - Etc/GMT+8
        - Etc/GMT+9
        - Etc/UTC
        - Europe/Andorra
        - Europe/Astrakhan
        - Europe/Athens
        - Europe/Belgrade
        - Europe/Berlin
        - Europe/Brussels
        - Europe/Bucharest
        - Europe/Budapest
        - Europe/Chisinau
        - Europe/Dublin
        - Europe/Gibraltar
        - Europe/Helsinki
        - Europe/Istanbul
        - Europe/Kaliningrad
        - Europe/Kirov
        - Europe/Kyiv
        - Europe/Lisbon
        - Europe/London
        - Europe/Madrid
        - Europe/Malta
        - Europe/Minsk
        - Europe/Moscow
        - Europe/Paris
        - Europe/Prague
        - Europe/Riga
        - Europe/Rome
        - Europe/Samara
        - Europe/Saratov
        - Europe/Simferopol
        - Europe/Sofia
        - Europe/Tallinn
        - Europe/Tirane
        - Europe/Ulyanovsk
        - Europe/Vienna
        - Europe/Vilnius
        - Europe/Volgograd
        - Europe/Warsaw
        - Europe/Zurich
        - HST
        - Indian/Chagos
        - Indian/Maldives
        - Indian/Mauritius
        - MET
        - MST
        - MST7MDT
        - Pacific/Apia
        - Pacific/Auckland
        - Pacific/Bougainville
        - Pacific/Chatham
        - Pacific/Easter
        - Pacific/Efate
        - Pacific/Fakaofo
        - Pacific/Fiji
        - Pacific/Galapagos
        - Pacific/Gambier
        - Pacific/Guadalcanal
        - Pacific/Guam
        - Pacific/Honolulu
        - Pacific/Kanton
        - Pacific/Kiritimati
        - Pacific/Kosrae
        - Pacific/Kwajalein
        - Pacific/Marquesas
        - Pacific/Nauru
        - Pacific/Niue
        - Pacific/Norfolk
        - Pacific/Noumea
        - Pacific/Pago_Pago
        - Pacific/Palau
        - Pacific/Pitcairn
        - Pacific/Port_Moresby
        - Pacific/Rarotonga
        - Pacific/Tahiti
        - Pacific/Tarawa
        - Pacific/Tongatapu
        - PST8PDT
        - WET
    AlertCreationIntervalInstantly:
      title: AlertCreationIntervalInstantly
      type: object
      properties:
        type:
          type: string
          enum:
            - INSTANTLY
      required:
        - type
    AlertCreationIntervalWeekly:
      title: AlertCreationIntervalWeekly
      type: object
      properties:
        type:
          type: string
          enum:
            - WEEKLY
        day:
          type: string
          enum:
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
      required:
        - type
        - day
    AlertCreationIntervalMonthly:
      title: AlertCreationIntervalMonthly
      type: object
      properties:
        type:
          type: string
          enum:
            - MONTHLY
        day:
          type: number
          minimum: 1
          maximum: 31
      required:
        - type
        - day
    ChecklistInfo:
      type: object
      title: ChecklistInfo
      properties:
        reason:
          type: string
        comment:
          type: string
        files:
          type: array
          items:
            $ref: '#/components/schemas/FileInfo'
    ChecklistStatus:
      type: string
      enum:
        - PASSED
        - FAILED
    ChecklistDoneStatus:
      type: string
      enum:
        - DONE
        - NOT_DONE
        - NOT_STARTED
    ChecklistItemValue:
      type: object
      title: ChecklistItemValue
      properties:
        checklistItemId:
          type: string
        done:
          $ref: '#/components/schemas/ChecklistDoneStatus'
        status:
          $ref: '#/components/schemas/ChecklistStatus'
        info:
          $ref: '#/components/schemas/ChecklistInfo'
    ChecklistItem:
      title: ChecklistItem
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        level:
          $ref: '#/components/schemas/Priority'
      required:
        - name
        - level
    ChecklistCategory:
      title: ChecklistCategory
      type: object
      properties:
        name:
          type: string
        checklistItems:
          type: array
          items:
            $ref: '#/components/schemas/ChecklistItem'
      required:
        - name
        - checklistItems
    ChecklistTemplate:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        categories:
          type: array
          items:
            $ref: '#/components/schemas/ChecklistCategory'
        createdAt:
          type: number
        updatedAt:
          type: number
        status:
          type: string
          enum:
            - ACTIVE
            - DRAFT
        isDeleted:
          type: boolean
        deletedAt:
          type: number
        qaPassCriteria:
          type: object
          properties:
            p1Errors:
              type: number
            p2Errors:
              type: number
      required:
        - name
        - categories
      title: ChecklistTemplate
    ChecklistTemplatesResponse:
      type: object
      title: ChecklistTemplatesResponse
      properties:
        total:
          type: number
        data:
          type: array
          items:
            $ref: '#/components/schemas/ChecklistTemplate'
      required:
        - total
        - data
    RuleQueue:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        createdAt:
          type: integer
        updatedAt:
          type: integer
        createdBy:
          type: string
      required:
        - name
      title: RuleQueue
    RuleQueuesResponse:
      type: object
      title: RuleQueuesResponse
      properties:
        total:
          type: number
        data:
          type: array
          items:
            $ref: '#/components/schemas/RuleQueue'
      required:
        - total
        - data
    DashboardStatsAlertAndCaseStatusDistributionStats:
      type: object
      title: DashboardStatsAlertAndCaseStatusDistributionStats
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              _id:
                type: string
              count_OPEN:
                type: number
              count_IN_PROGRESS:
                type: number
              count_ON_HOLD:
                type: number
              count_ESCALATED:
                type: number
              count_CLOSED:
                type: number
              count_REOPENED:
                type: number
            required:
              - _id
    CaseSubjectType:
      title: CaseSubjectType
      type: string
      enum:
        - USER
        - PAYMENT
    RiskScoreDetails:
      title: RiskScoreDetails
      type: object
      properties:
        score:
          type: number
        components:
          type: array
          items:
            $ref: '#/components/schemas/RiskScoreComponent'
      required:
        - score
        - components
    NotificationType:
      title: NotificationType
      type: string
      enum:
        - CASE_ASSIGNMENT
        - ALERT_ASSIGNMENT
        - CASE_UNASSIGNMENT
        - ALERT_UNASSIGNMENT
        - CASE_ESCALATION
        - ALERT_ESCALATION
        - ALERT_COMMENT_MENTION
        - CASE_COMMENT_MENTION
        - USER_COMMENT_MENTION
        - CASE_IN_REVIEW
        - ALERT_IN_REVIEW
        - ALERT_COMMENT
        - CASE_COMMENT
        - ALERT_STATUS_UPDATE
        - CASE_STATUS_UPDATE
    NotificationChannels:
      title: NotificationChannels
      type: string
      enum:
        - CONSOLE
    AssignmentNotification:
      title: AssignmentNotification
      type: object
      properties:
        type:
          type: string
          enum:
            - ASSIGNMENT
        assignments:
          type: array
          items:
            $ref: '#/components/schemas/Assignment'
      required:
        - type
        - assignments
    EscalationNotification:
      title: EscalationNotification
      type: object
      properties:
        type:
          type: string
          enum:
            - ESCALATION
        reason:
          type: array
          items:
            $ref: '#/components/schemas/CaseReasons'
        reviewAssignments:
          type: array
          items:
            $ref: '#/components/schemas/Assignment'
        status:
          $ref: '#/components/schemas/CaseStatus'
        childCaseId:
          type: string
      required:
        - type
        - reason
        - reviewAssignments
        - status
    UpdateNotification:
      title: UpdateNotification
      type: object
      properties:
        type:
          type: string
          enum:
            - UPDATE
        status:
          $ref: '#/components/schemas/CaseStatus'
      required:
        - type
        - status
    CommentMentionNotification:
      title: CommentMentionNotification
      type: object
      properties:
        type:
          type: string
          enum:
            - COMMENT_MENTION
        mentions:
          type: array
          items:
            type: string
      required:
        - type
        - assignments
    CommentNotification:
      title: CommentNotification
      type: object
      properties:
        type:
          type: string
          enum:
            - COMMENT
        comment:
          $ref: '#/components/schemas/Comment'
      required:
        - type
        - comment
    ConsoleNotificationStatus:
      title: ConsoleNotificationStatus
      type: object
      properties:
        status:
          type: string
          enum:
            - SENT
            - READ
        stausUpdatedAt:
          type: number
        recieverUserId:
          type: string
      required:
        - status
        - stausUpdatedAt
        - recieverUserId
    Notification:
      title: Notification
      type: object
      properties:
        id:
          type: string
        notificationType:
          $ref: '#/components/schemas/NotificationType'
        notificationChannel:
          $ref: '#/components/schemas/NotificationChannels'
        createdAt:
          type: number
        triggeredBy:
          type: string
        recievers:
          type: array
          items:
            type: string
        entityId:
          type: string
        entityType:
          type: string
          enum:
            - CASE
            - ALERT
            - USER
        notificationData:
          type: object
        consoleNotificationStatuses:
          type: array
          items:
            $ref: '#/components/schemas/ConsoleNotificationStatus'
        metadata:
          type: object
          properties:
            user:
              type: object
              properties:
                userType:
                  type: string
                  enum:
                    - BUSINESS
                    - CONSUMER
            alert:
              type: object
              properties:
                caseId:
                  type: string
      required:
        - id
        - notificationType
        - notificationChannels
        - createdAt
        - triggeredBy
        - recievers
        - entityId
        - entityType
        - notificationData
    BooleanString:
      title: BooleanString
      type: string
      enum:
        - 'true'
        - 'false'
    SanctionsSettings:
      title: SanctionsSettings
      type: object
      properties:
        marketType:
          $ref: '#/components/schemas/SanctionsSettingsMarketType'
        customSearchProfileId:
          type: string
      required:
        - marketType
    SanctionsSettingsMarketType:
      title: SanctionsSettingsMarketType
      type: string
      enum:
        - EMERGING
        - FIRST_WORLD
    RuleInstanceStats:
      title: RuleInstanceStats
      type: object
      properties:
        transactionsHit:
          type: number
        usersHit:
          type: number
        alertsHit:
          type: number
        investigationTime:
          type: number
        executionStats:
          type: array
          items:
            $ref: '#/components/schemas/RuleInstanceExecutionStats'
      required:
        - usersHit
        - alertsHit
        - executionStats
    RuleInstanceExecutionStats:
      title: RuleInstanceExecutionStats
      type: object
      properties:
        date:
          type: string
        hitCount:
          type: number
        runCount:
          type: number
      required:
        - date
        - runCount
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
  responses: {}
