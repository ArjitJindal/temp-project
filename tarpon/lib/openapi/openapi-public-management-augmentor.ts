#!/usr/bin/env ts-node
/* eslint-disable @typescript-eslint/no-explicit-any */

/**
 * This script injects AWS API Gateway specific settings into our public-management openapi and output to dist/openapi/openapi-public-management-autogenerated.yaml
 */

import * as fs from 'fs'
import * as yaml from 'js-yaml'
import mkdirp from 'mkdirp'
import { StackConstants } from '../constants'
import { getAugmentedOpenapi } from './openapi-augmentor-util'

// We don't care about region
const env = (process.env.ENV || 'prod').split(':')[0]

export const PublicManagementApiPathToLambda: any = {
  '/rules': StackConstants.PUBLIC_MANAGEMENT_API_RULE_FUNCTION_NAME,
  '/rule-filters-schema':
    StackConstants.PUBLIC_MANAGEMENT_API_RULE_FUNCTION_NAME,
  '/rules/{ruleId}': StackConstants.PUBLIC_MANAGEMENT_API_RULE_FUNCTION_NAME,
  '/rule-instances':
    StackConstants.PUBLIC_MANAGEMENT_API_RULE_INSTANCE_FUNCTION_NAME,
  '/rule-instances/{ruleInstanceId}':
    StackConstants.PUBLIC_MANAGEMENT_API_RULE_INSTANCE_FUNCTION_NAME,
  '/cases': StackConstants.PUBLIC_MANAGEMENT_API_CASE_FUNCTION_NAME,
  '/cases/{caseId}': StackConstants.PUBLIC_MANAGEMENT_API_CASE_FUNCTION_NAME,
  '/cases/{caseId}/statuses':
    StackConstants.PUBLIC_MANAGEMENT_API_CASE_FUNCTION_NAME,
  '/alerts': StackConstants.PUBLIC_MANAGEMENT_API_ALERT_FUNCTION_NAME,
  '/alerts/{alertId}': StackConstants.PUBLIC_MANAGEMENT_API_ALERT_FUNCTION_NAME,
  '/alerts/{alertId}/comments':
    StackConstants.PUBLIC_MANAGEMENT_API_ALERT_FUNCTION_NAME,
  '/alerts/{alertId}/comments/{commentId}':
    StackConstants.PUBLIC_MANAGEMENT_API_ALERT_FUNCTION_NAME,
  '/alerts/{alertId}/statuses':
    StackConstants.PUBLIC_MANAGEMENT_API_ALERT_FUNCTION_NAME,
  '/pre-signed-url':
    StackConstants.PUBLIC_MANAGEMENT_API_FILE_UPLOAD_FUNCTION_NAME,
  '/users/{userId}/comments':
    StackConstants.PUBLIC_MANAGEMENT_API_USER_FUNCTION_NAME,
  '/users/{userId}/comments/{commentId}':
    StackConstants.PUBLIC_MANAGEMENT_API_USER_FUNCTION_NAME,
  '/users/search': StackConstants.PUBLIC_MANAGEMENT_API_USER_FUNCTION_NAME,
}

const openapi = getAugmentedOpenapi(
  './dist/openapi/public-management/openapi-public-management-original.yaml',
  PublicManagementApiPathToLambda,
  'API_KEY'
)
mkdirp.sync(`./dist/openapi`)
fs.writeFileSync(
  `./dist/openapi/openapi-public-management-autogenerated-${env}.yaml`,
  yaml.dump(openapi)
)
